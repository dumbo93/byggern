
ATmega162.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000f0  00800100  00000ca6  00000d3a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ca6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  008001f0  008001f0  00000e2a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e2a  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  00000e86  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000051f  00000000  00000000  00000f0e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000366  00000000  00000000  0000142d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002e7  00000000  00000000  00001793  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000140  00000000  00000000  00001a7c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000255  00000000  00000000  00001bbc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000023e  00000000  00000000  00001e11  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000088  00000000  00000000  0000204f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e6 ea       	ldi	r30, 0xA6	; 166
  84:	fc e0       	ldi	r31, 0x0C	; 12
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a0 3f       	cpi	r26, 0xF0	; 240
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a0 ef       	ldi	r26, 0xF0	; 240
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	aa 3f       	cpi	r26, 0xFA	; 250
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 06 01 	call	0x20c	; 0x20c <main>
  a6:	0c 94 51 06 	jmp	0xca2	; 0xca2 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <SRAM_init>:
#include <stdlib.h>
#include <stdio.h>

void SRAM_init(void){
	// Enable External Memory Interface
	MCUCR |= (1 << SRE);
  ae:	85 b7       	in	r24, 0x35	; 53
  b0:	80 68       	ori	r24, 0x80	; 128
  b2:	85 bf       	out	0x35, r24	; 53
	// Release PC7-PC4 for JTAG
	SFIOR |= (3 << XMM0);
  b4:	80 b7       	in	r24, 0x30	; 48
  b6:	88 61       	ori	r24, 0x18	; 24
  b8:	80 bf       	out	0x30, r24	; 48
  ba:	08 95       	ret

000000bc <SRAM_test>:
}

void SRAM_test(void)
{
  bc:	cf 92       	push	r12
  be:	df 92       	push	r13
  c0:	ef 92       	push	r14
  c2:	ff 92       	push	r15
  c4:	0f 93       	push	r16
  c6:	1f 93       	push	r17
  c8:	cf 93       	push	r28
  ca:	df 93       	push	r29
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
	printf("Starting SRAM test...\n");
  cc:	8a e0       	ldi	r24, 0x0A	; 10
  ce:	91 e0       	ldi	r25, 0x01	; 1
  d0:	0e 94 c8 01 	call	0x390	; 0x390 <puts>
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
  d4:	0e 94 59 01 	call	0x2b2	; 0x2b2 <rand>
  d8:	6c 01       	movw	r12, r24
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
  da:	0e 94 5e 01 	call	0x2bc	; 0x2bc <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
  de:	c0 e0       	ldi	r28, 0x00	; 0
  e0:	d0 e0       	ldi	r29, 0x00	; 0

void SRAM_test(void)
{
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
  e2:	00 e0       	ldi	r16, 0x00	; 0
  e4:	10 e0       	ldi	r17, 0x00	; 0
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
		ext_ram[i] = some_value;
		uint8_t retreived_value = ext_ram[i];
		if (retreived_value != some_value) {
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i,
  e6:	0f 2e       	mov	r0, r31
  e8:	f0 e2       	ldi	r31, 0x20	; 32
  ea:	ef 2e       	mov	r14, r31
  ec:	f1 e0       	ldi	r31, 0x01	; 1
  ee:	ff 2e       	mov	r15, r31
  f0:	f0 2d       	mov	r31, r0
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
  f2:	0e 94 59 01 	call	0x2b2	; 0x2b2 <rand>
  f6:	fe 01       	movw	r30, r28
  f8:	f8 5e       	subi	r31, 0xE8	; 232
		ext_ram[i] = some_value;
  fa:	80 83       	st	Z, r24
		uint8_t retreived_value = ext_ram[i];
  fc:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
  fe:	28 17       	cp	r18, r24
 100:	a9 f0       	breq	.+42     	; 0x12c <SRAM_test+0x70>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i,
 102:	99 27       	eor	r25, r25
 104:	9f 93       	push	r25
 106:	8f 93       	push	r24
 108:	1f 92       	push	r1
 10a:	2f 93       	push	r18
 10c:	df 93       	push	r29
 10e:	cf 93       	push	r28
 110:	ff 92       	push	r15
 112:	ef 92       	push	r14
 114:	0e 94 b4 01 	call	0x368	; 0x368 <printf>
			retreived_value, some_value);
			write_errors++;
 118:	0f 5f       	subi	r16, 0xFF	; 255
 11a:	1f 4f       	sbci	r17, 0xFF	; 255
 11c:	8d b7       	in	r24, 0x3d	; 61
 11e:	9e b7       	in	r25, 0x3e	; 62
 120:	08 96       	adiw	r24, 0x08	; 8
 122:	0f b6       	in	r0, 0x3f	; 63
 124:	f8 94       	cli
 126:	9e bf       	out	0x3e, r25	; 62
 128:	0f be       	out	0x3f, r0	; 63
 12a:	8d bf       	out	0x3d, r24	; 61
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 12c:	21 96       	adiw	r28, 0x01	; 1
 12e:	c1 15       	cp	r28, r1
 130:	98 e0       	ldi	r25, 0x08	; 8
 132:	d9 07       	cpc	r29, r25
 134:	f1 f6       	brne	.-68     	; 0xf2 <SRAM_test+0x36>
			retreived_value, some_value);
			write_errors++;
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);// reset the PRNG to the state it had before the write phase
 136:	c6 01       	movw	r24, r12
 138:	0e 94 5e 01 	call	0x2bc	; 0x2bc <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 13c:	c0 e0       	ldi	r28, 0x00	; 0
 13e:	d0 e0       	ldi	r29, 0x00	; 0
void SRAM_test(void)
{
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
 140:	e1 2c       	mov	r14, r1
 142:	f1 2c       	mov	r15, r1
	srand(seed);// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
		uint8_t retreived_value = ext_ram[i];
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
 144:	0f 2e       	mov	r0, r31
 146:	f9 e5       	ldi	r31, 0x59	; 89
 148:	cf 2e       	mov	r12, r31
 14a:	f1 e0       	ldi	r31, 0x01	; 1
 14c:	df 2e       	mov	r13, r31
 14e:	f0 2d       	mov	r31, r0
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
 150:	0e 94 59 01 	call	0x2b2	; 0x2b2 <rand>
 154:	fe 01       	movw	r30, r28
 156:	f8 5e       	subi	r31, 0xE8	; 232
		uint8_t retreived_value = ext_ram[i];
 158:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
 15a:	28 17       	cp	r18, r24
 15c:	b1 f0       	breq	.+44     	; 0x18a <SRAM_test+0xce>
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
 15e:	99 27       	eor	r25, r25
 160:	9f 93       	push	r25
 162:	8f 93       	push	r24
 164:	1f 92       	push	r1
 166:	2f 93       	push	r18
 168:	df 93       	push	r29
 16a:	cf 93       	push	r28
 16c:	df 92       	push	r13
 16e:	cf 92       	push	r12
 170:	0e 94 b4 01 	call	0x368	; 0x368 <printf>
			retrieval_errors++;
 174:	8f ef       	ldi	r24, 0xFF	; 255
 176:	e8 1a       	sub	r14, r24
 178:	f8 0a       	sbc	r15, r24
 17a:	8d b7       	in	r24, 0x3d	; 61
 17c:	9e b7       	in	r25, 0x3e	; 62
 17e:	08 96       	adiw	r24, 0x08	; 8
 180:	0f b6       	in	r0, 0x3f	; 63
 182:	f8 94       	cli
 184:	9e bf       	out	0x3e, r25	; 62
 186:	0f be       	out	0x3f, r0	; 63
 188:	8d bf       	out	0x3d, r24	; 61
			write_errors++;
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 18a:	21 96       	adiw	r28, 0x01	; 1
 18c:	c1 15       	cp	r28, r1
 18e:	98 e0       	ldi	r25, 0x08	; 8
 190:	d9 07       	cpc	r29, r25
 192:	f1 f6       	brne	.-68     	; 0x150 <SRAM_test+0x94>
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
			retrieval_errors++;
		}
	}
	printf("SRAM test completed with \n%4d errors in write phase and \n%4d errors in retrieval phase\n\n", write_errors, retrieval_errors);
 194:	ff 92       	push	r15
 196:	ef 92       	push	r14
 198:	1f 93       	push	r17
 19a:	0f 93       	push	r16
 19c:	86 e9       	ldi	r24, 0x96	; 150
 19e:	91 e0       	ldi	r25, 0x01	; 1
 1a0:	9f 93       	push	r25
 1a2:	8f 93       	push	r24
 1a4:	0e 94 b4 01 	call	0x368	; 0x368 <printf>
 1a8:	0f 90       	pop	r0
 1aa:	0f 90       	pop	r0
 1ac:	0f 90       	pop	r0
 1ae:	0f 90       	pop	r0
 1b0:	0f 90       	pop	r0
 1b2:	0f 90       	pop	r0

}
 1b4:	df 91       	pop	r29
 1b6:	cf 91       	pop	r28
 1b8:	1f 91       	pop	r17
 1ba:	0f 91       	pop	r16
 1bc:	ff 90       	pop	r15
 1be:	ef 90       	pop	r14
 1c0:	df 90       	pop	r13
 1c2:	cf 90       	pop	r12
 1c4:	08 95       	ret

000001c6 <sram_main>:

void sram_main(void)
{
	UART_Init ( MYUBRR );
 1c6:	8f e1       	ldi	r24, 0x1F	; 31
 1c8:	90 e0       	ldi	r25, 0x00	; 0
 1ca:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <UART_Init>
	SRAM_init();
 1ce:	0e 94 57 00 	call	0xae	; 0xae <SRAM_init>
	SRAM_test();
 1d2:	0e 94 5e 00 	call	0xbc	; 0xbc <SRAM_test>
 1d6:	08 95       	ret

000001d8 <UART_Transmit>:

// transmit data
void UART_Transmit (unsigned char data)
{
	// Wait for empty transmit buffer
	while (!( UCSR0A & (1<<UDRE0))); 
 1d8:	5d 9b       	sbis	0x0b, 5	; 11
 1da:	fe cf       	rjmp	.-4      	; 0x1d8 <UART_Transmit>
	
	// Put data into buffer, sends the data
	UDR0 = data;  
 1dc:	8c b9       	out	0x0c, r24	; 12
 1de:	08 95       	ret

000001e0 <UART_Recieve>:

// function to receive data
unsigned char UART_Recieve (void)
{
	//Wait for data to be received
	while(!(UCSR0A) & (1<<RXC0));  
 1e0:	8b b1       	in	r24, 0x0b	; 11
	
	//Get and return received data from buffer
	return UDR0;  
 1e2:	8c b1       	in	r24, 0x0c	; 12
 1e4:	08 95       	ret

000001e6 <UART_Init>:

void UART_Init( unsigned int ubrr ){
	/* 
	Set baud rate
	 */
	UBRR0H |= (unsigned char)(ubrr>>8);
 1e6:	20 b5       	in	r18, 0x20	; 32
 1e8:	92 2b       	or	r25, r18
 1ea:	90 bd       	out	0x20, r25	; 32
	UBRR0L |= (unsigned char)ubrr;
 1ec:	99 b1       	in	r25, 0x09	; 9
 1ee:	89 2b       	or	r24, r25
 1f0:	89 b9       	out	0x09, r24	; 9
	/* 
	Enable receiver and transmitter
	 */
	UCSR0B |= (1<<RXEN0)|(1<<TXEN0);
 1f2:	8a b1       	in	r24, 0x0a	; 10
 1f4:	88 61       	ori	r24, 0x18	; 24
 1f6:	8a b9       	out	0x0a, r24	; 10
	/* 
	Set frame format: 8data, 2stop bit
	 */
	UCSR0C |= (1<<URSEL0)|(1<<USBS0)|(1<<UCSZ00)|(1<<UCSZ01);
 1f8:	80 b5       	in	r24, 0x20	; 32
 1fa:	8e 68       	ori	r24, 0x8E	; 142
 1fc:	80 bd       	out	0x20, r24	; 32
	
	fdevopen(&UART_Transmit, &UART_Recieve);
 1fe:	60 ef       	ldi	r22, 0xF0	; 240
 200:	70 e0       	ldi	r23, 0x00	; 0
 202:	8c ee       	ldi	r24, 0xEC	; 236
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	0e 94 69 01 	call	0x2d2	; 0x2d2 <fdevopen>
 20a:	08 95       	ret

0000020c <main>:
#include "drivers/uart.h"
#include "drivers/sram.h"

int main( void ){

	sram_main();
 20c:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <sram_main>
	// uart_test();
	
	return 0;
}
 210:	80 e0       	ldi	r24, 0x00	; 0
 212:	90 e0       	ldi	r25, 0x00	; 0
 214:	08 95       	ret

00000216 <do_rand>:
 216:	8f 92       	push	r8
 218:	9f 92       	push	r9
 21a:	af 92       	push	r10
 21c:	bf 92       	push	r11
 21e:	cf 92       	push	r12
 220:	df 92       	push	r13
 222:	ef 92       	push	r14
 224:	ff 92       	push	r15
 226:	cf 93       	push	r28
 228:	df 93       	push	r29
 22a:	ec 01       	movw	r28, r24
 22c:	68 81       	ld	r22, Y
 22e:	79 81       	ldd	r23, Y+1	; 0x01
 230:	8a 81       	ldd	r24, Y+2	; 0x02
 232:	9b 81       	ldd	r25, Y+3	; 0x03
 234:	61 15       	cp	r22, r1
 236:	71 05       	cpc	r23, r1
 238:	81 05       	cpc	r24, r1
 23a:	91 05       	cpc	r25, r1
 23c:	21 f4       	brne	.+8      	; 0x246 <do_rand+0x30>
 23e:	64 e2       	ldi	r22, 0x24	; 36
 240:	79 ed       	ldi	r23, 0xD9	; 217
 242:	8b e5       	ldi	r24, 0x5B	; 91
 244:	97 e0       	ldi	r25, 0x07	; 7
 246:	2d e1       	ldi	r18, 0x1D	; 29
 248:	33 ef       	ldi	r19, 0xF3	; 243
 24a:	41 e0       	ldi	r20, 0x01	; 1
 24c:	50 e0       	ldi	r21, 0x00	; 0
 24e:	0e 94 b7 05 	call	0xb6e	; 0xb6e <__divmodsi4>
 252:	49 01       	movw	r8, r18
 254:	5a 01       	movw	r10, r20
 256:	9b 01       	movw	r18, r22
 258:	ac 01       	movw	r20, r24
 25a:	a7 ea       	ldi	r26, 0xA7	; 167
 25c:	b1 e4       	ldi	r27, 0x41	; 65
 25e:	0e 94 d6 05 	call	0xbac	; 0xbac <__muluhisi3>
 262:	6b 01       	movw	r12, r22
 264:	7c 01       	movw	r14, r24
 266:	ac ee       	ldi	r26, 0xEC	; 236
 268:	b4 ef       	ldi	r27, 0xF4	; 244
 26a:	a5 01       	movw	r20, r10
 26c:	94 01       	movw	r18, r8
 26e:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <__mulohisi3>
 272:	c6 0e       	add	r12, r22
 274:	d7 1e       	adc	r13, r23
 276:	e8 1e       	adc	r14, r24
 278:	f9 1e       	adc	r15, r25
 27a:	f7 fe       	sbrs	r15, 7
 27c:	06 c0       	rjmp	.+12     	; 0x28a <do_rand+0x74>
 27e:	81 e0       	ldi	r24, 0x01	; 1
 280:	c8 1a       	sub	r12, r24
 282:	d1 08       	sbc	r13, r1
 284:	e1 08       	sbc	r14, r1
 286:	80 e8       	ldi	r24, 0x80	; 128
 288:	f8 0a       	sbc	r15, r24
 28a:	c8 82       	st	Y, r12
 28c:	d9 82       	std	Y+1, r13	; 0x01
 28e:	ea 82       	std	Y+2, r14	; 0x02
 290:	fb 82       	std	Y+3, r15	; 0x03
 292:	c6 01       	movw	r24, r12
 294:	9f 77       	andi	r25, 0x7F	; 127
 296:	df 91       	pop	r29
 298:	cf 91       	pop	r28
 29a:	ff 90       	pop	r15
 29c:	ef 90       	pop	r14
 29e:	df 90       	pop	r13
 2a0:	cf 90       	pop	r12
 2a2:	bf 90       	pop	r11
 2a4:	af 90       	pop	r10
 2a6:	9f 90       	pop	r9
 2a8:	8f 90       	pop	r8
 2aa:	08 95       	ret

000002ac <rand_r>:
 2ac:	0e 94 0b 01 	call	0x216	; 0x216 <do_rand>
 2b0:	08 95       	ret

000002b2 <rand>:
 2b2:	80 e0       	ldi	r24, 0x00	; 0
 2b4:	91 e0       	ldi	r25, 0x01	; 1
 2b6:	0e 94 0b 01 	call	0x216	; 0x216 <do_rand>
 2ba:	08 95       	ret

000002bc <srand>:
 2bc:	a0 e0       	ldi	r26, 0x00	; 0
 2be:	b0 e0       	ldi	r27, 0x00	; 0
 2c0:	80 93 00 01 	sts	0x0100, r24
 2c4:	90 93 01 01 	sts	0x0101, r25
 2c8:	a0 93 02 01 	sts	0x0102, r26
 2cc:	b0 93 03 01 	sts	0x0103, r27
 2d0:	08 95       	ret

000002d2 <fdevopen>:
 2d2:	0f 93       	push	r16
 2d4:	1f 93       	push	r17
 2d6:	cf 93       	push	r28
 2d8:	df 93       	push	r29
 2da:	ec 01       	movw	r28, r24
 2dc:	8b 01       	movw	r16, r22
 2de:	00 97       	sbiw	r24, 0x00	; 0
 2e0:	31 f4       	brne	.+12     	; 0x2ee <fdevopen+0x1c>
 2e2:	61 15       	cp	r22, r1
 2e4:	71 05       	cpc	r23, r1
 2e6:	19 f4       	brne	.+6      	; 0x2ee <fdevopen+0x1c>
 2e8:	80 e0       	ldi	r24, 0x00	; 0
 2ea:	90 e0       	ldi	r25, 0x00	; 0
 2ec:	38 c0       	rjmp	.+112    	; 0x35e <fdevopen+0x8c>
 2ee:	6e e0       	ldi	r22, 0x0E	; 14
 2f0:	70 e0       	ldi	r23, 0x00	; 0
 2f2:	81 e0       	ldi	r24, 0x01	; 1
 2f4:	90 e0       	ldi	r25, 0x00	; 0
 2f6:	0e 94 c7 03 	call	0x78e	; 0x78e <calloc>
 2fa:	fc 01       	movw	r30, r24
 2fc:	00 97       	sbiw	r24, 0x00	; 0
 2fe:	a1 f3       	breq	.-24     	; 0x2e8 <fdevopen+0x16>
 300:	80 e8       	ldi	r24, 0x80	; 128
 302:	83 83       	std	Z+3, r24	; 0x03
 304:	01 15       	cp	r16, r1
 306:	11 05       	cpc	r17, r1
 308:	71 f0       	breq	.+28     	; 0x326 <fdevopen+0x54>
 30a:	13 87       	std	Z+11, r17	; 0x0b
 30c:	02 87       	std	Z+10, r16	; 0x0a
 30e:	81 e8       	ldi	r24, 0x81	; 129
 310:	83 83       	std	Z+3, r24	; 0x03
 312:	80 91 f0 01 	lds	r24, 0x01F0
 316:	90 91 f1 01 	lds	r25, 0x01F1
 31a:	89 2b       	or	r24, r25
 31c:	21 f4       	brne	.+8      	; 0x326 <fdevopen+0x54>
 31e:	f0 93 f1 01 	sts	0x01F1, r31
 322:	e0 93 f0 01 	sts	0x01F0, r30
 326:	20 97       	sbiw	r28, 0x00	; 0
 328:	c9 f0       	breq	.+50     	; 0x35c <fdevopen+0x8a>
 32a:	d1 87       	std	Z+9, r29	; 0x09
 32c:	c0 87       	std	Z+8, r28	; 0x08
 32e:	83 81       	ldd	r24, Z+3	; 0x03
 330:	82 60       	ori	r24, 0x02	; 2
 332:	83 83       	std	Z+3, r24	; 0x03
 334:	80 91 f2 01 	lds	r24, 0x01F2
 338:	90 91 f3 01 	lds	r25, 0x01F3
 33c:	89 2b       	or	r24, r25
 33e:	71 f4       	brne	.+28     	; 0x35c <fdevopen+0x8a>
 340:	f0 93 f3 01 	sts	0x01F3, r31
 344:	e0 93 f2 01 	sts	0x01F2, r30
 348:	80 91 f4 01 	lds	r24, 0x01F4
 34c:	90 91 f5 01 	lds	r25, 0x01F5
 350:	89 2b       	or	r24, r25
 352:	21 f4       	brne	.+8      	; 0x35c <fdevopen+0x8a>
 354:	f0 93 f5 01 	sts	0x01F5, r31
 358:	e0 93 f4 01 	sts	0x01F4, r30
 35c:	cf 01       	movw	r24, r30
 35e:	df 91       	pop	r29
 360:	cf 91       	pop	r28
 362:	1f 91       	pop	r17
 364:	0f 91       	pop	r16
 366:	08 95       	ret

00000368 <printf>:
 368:	a0 e0       	ldi	r26, 0x00	; 0
 36a:	b0 e0       	ldi	r27, 0x00	; 0
 36c:	ea eb       	ldi	r30, 0xBA	; 186
 36e:	f1 e0       	ldi	r31, 0x01	; 1
 370:	0c 94 f9 05 	jmp	0xbf2	; 0xbf2 <__prologue_saves__+0x20>
 374:	fe 01       	movw	r30, r28
 376:	35 96       	adiw	r30, 0x05	; 5
 378:	61 91       	ld	r22, Z+
 37a:	71 91       	ld	r23, Z+
 37c:	af 01       	movw	r20, r30
 37e:	80 91 f2 01 	lds	r24, 0x01F2
 382:	90 91 f3 01 	lds	r25, 0x01F3
 386:	0e 94 f5 01 	call	0x3ea	; 0x3ea <vfprintf>
 38a:	e2 e0       	ldi	r30, 0x02	; 2
 38c:	0c 94 15 06 	jmp	0xc2a	; 0xc2a <__epilogue_restores__+0x20>

00000390 <puts>:
 390:	0f 93       	push	r16
 392:	1f 93       	push	r17
 394:	cf 93       	push	r28
 396:	df 93       	push	r29
 398:	e0 91 f2 01 	lds	r30, 0x01F2
 39c:	f0 91 f3 01 	lds	r31, 0x01F3
 3a0:	23 81       	ldd	r18, Z+3	; 0x03
 3a2:	21 ff       	sbrs	r18, 1
 3a4:	1b c0       	rjmp	.+54     	; 0x3dc <puts+0x4c>
 3a6:	ec 01       	movw	r28, r24
 3a8:	00 e0       	ldi	r16, 0x00	; 0
 3aa:	10 e0       	ldi	r17, 0x00	; 0
 3ac:	89 91       	ld	r24, Y+
 3ae:	60 91 f2 01 	lds	r22, 0x01F2
 3b2:	70 91 f3 01 	lds	r23, 0x01F3
 3b6:	db 01       	movw	r26, r22
 3b8:	18 96       	adiw	r26, 0x08	; 8
 3ba:	ed 91       	ld	r30, X+
 3bc:	fc 91       	ld	r31, X
 3be:	19 97       	sbiw	r26, 0x09	; 9
 3c0:	88 23       	and	r24, r24
 3c2:	31 f0       	breq	.+12     	; 0x3d0 <puts+0x40>
 3c4:	09 95       	icall
 3c6:	89 2b       	or	r24, r25
 3c8:	89 f3       	breq	.-30     	; 0x3ac <puts+0x1c>
 3ca:	0f ef       	ldi	r16, 0xFF	; 255
 3cc:	1f ef       	ldi	r17, 0xFF	; 255
 3ce:	ee cf       	rjmp	.-36     	; 0x3ac <puts+0x1c>
 3d0:	8a e0       	ldi	r24, 0x0A	; 10
 3d2:	09 95       	icall
 3d4:	89 2b       	or	r24, r25
 3d6:	11 f4       	brne	.+4      	; 0x3dc <puts+0x4c>
 3d8:	c8 01       	movw	r24, r16
 3da:	02 c0       	rjmp	.+4      	; 0x3e0 <puts+0x50>
 3dc:	8f ef       	ldi	r24, 0xFF	; 255
 3de:	9f ef       	ldi	r25, 0xFF	; 255
 3e0:	df 91       	pop	r29
 3e2:	cf 91       	pop	r28
 3e4:	1f 91       	pop	r17
 3e6:	0f 91       	pop	r16
 3e8:	08 95       	ret

000003ea <vfprintf>:
 3ea:	ac e0       	ldi	r26, 0x0C	; 12
 3ec:	b0 e0       	ldi	r27, 0x00	; 0
 3ee:	eb ef       	ldi	r30, 0xFB	; 251
 3f0:	f1 e0       	ldi	r31, 0x01	; 1
 3f2:	0c 94 e9 05 	jmp	0xbd2	; 0xbd2 <__prologue_saves__>
 3f6:	7c 01       	movw	r14, r24
 3f8:	6b 01       	movw	r12, r22
 3fa:	8a 01       	movw	r16, r20
 3fc:	fc 01       	movw	r30, r24
 3fe:	17 82       	std	Z+7, r1	; 0x07
 400:	16 82       	std	Z+6, r1	; 0x06
 402:	83 81       	ldd	r24, Z+3	; 0x03
 404:	81 ff       	sbrs	r24, 1
 406:	bd c1       	rjmp	.+890    	; 0x782 <__stack+0x283>
 408:	ce 01       	movw	r24, r28
 40a:	01 96       	adiw	r24, 0x01	; 1
 40c:	4c 01       	movw	r8, r24
 40e:	f7 01       	movw	r30, r14
 410:	93 81       	ldd	r25, Z+3	; 0x03
 412:	f6 01       	movw	r30, r12
 414:	93 fd       	sbrc	r25, 3
 416:	85 91       	lpm	r24, Z+
 418:	93 ff       	sbrs	r25, 3
 41a:	81 91       	ld	r24, Z+
 41c:	6f 01       	movw	r12, r30
 41e:	88 23       	and	r24, r24
 420:	09 f4       	brne	.+2      	; 0x424 <vfprintf+0x3a>
 422:	ab c1       	rjmp	.+854    	; 0x77a <__stack+0x27b>
 424:	85 32       	cpi	r24, 0x25	; 37
 426:	39 f4       	brne	.+14     	; 0x436 <vfprintf+0x4c>
 428:	93 fd       	sbrc	r25, 3
 42a:	85 91       	lpm	r24, Z+
 42c:	93 ff       	sbrs	r25, 3
 42e:	81 91       	ld	r24, Z+
 430:	6f 01       	movw	r12, r30
 432:	85 32       	cpi	r24, 0x25	; 37
 434:	29 f4       	brne	.+10     	; 0x440 <vfprintf+0x56>
 436:	b7 01       	movw	r22, r14
 438:	90 e0       	ldi	r25, 0x00	; 0
 43a:	0e 94 27 05 	call	0xa4e	; 0xa4e <fputc>
 43e:	e7 cf       	rjmp	.-50     	; 0x40e <vfprintf+0x24>
 440:	51 2c       	mov	r5, r1
 442:	31 2c       	mov	r3, r1
 444:	20 e0       	ldi	r18, 0x00	; 0
 446:	20 32       	cpi	r18, 0x20	; 32
 448:	a0 f4       	brcc	.+40     	; 0x472 <vfprintf+0x88>
 44a:	8b 32       	cpi	r24, 0x2B	; 43
 44c:	69 f0       	breq	.+26     	; 0x468 <vfprintf+0x7e>
 44e:	30 f4       	brcc	.+12     	; 0x45c <vfprintf+0x72>
 450:	80 32       	cpi	r24, 0x20	; 32
 452:	59 f0       	breq	.+22     	; 0x46a <vfprintf+0x80>
 454:	83 32       	cpi	r24, 0x23	; 35
 456:	69 f4       	brne	.+26     	; 0x472 <vfprintf+0x88>
 458:	20 61       	ori	r18, 0x10	; 16
 45a:	2c c0       	rjmp	.+88     	; 0x4b4 <vfprintf+0xca>
 45c:	8d 32       	cpi	r24, 0x2D	; 45
 45e:	39 f0       	breq	.+14     	; 0x46e <vfprintf+0x84>
 460:	80 33       	cpi	r24, 0x30	; 48
 462:	39 f4       	brne	.+14     	; 0x472 <vfprintf+0x88>
 464:	21 60       	ori	r18, 0x01	; 1
 466:	26 c0       	rjmp	.+76     	; 0x4b4 <vfprintf+0xca>
 468:	22 60       	ori	r18, 0x02	; 2
 46a:	24 60       	ori	r18, 0x04	; 4
 46c:	23 c0       	rjmp	.+70     	; 0x4b4 <vfprintf+0xca>
 46e:	28 60       	ori	r18, 0x08	; 8
 470:	21 c0       	rjmp	.+66     	; 0x4b4 <vfprintf+0xca>
 472:	27 fd       	sbrc	r18, 7
 474:	27 c0       	rjmp	.+78     	; 0x4c4 <vfprintf+0xda>
 476:	30 ed       	ldi	r19, 0xD0	; 208
 478:	38 0f       	add	r19, r24
 47a:	3a 30       	cpi	r19, 0x0A	; 10
 47c:	78 f4       	brcc	.+30     	; 0x49c <vfprintf+0xb2>
 47e:	26 ff       	sbrs	r18, 6
 480:	06 c0       	rjmp	.+12     	; 0x48e <vfprintf+0xa4>
 482:	fa e0       	ldi	r31, 0x0A	; 10
 484:	5f 9e       	mul	r5, r31
 486:	30 0d       	add	r19, r0
 488:	11 24       	eor	r1, r1
 48a:	53 2e       	mov	r5, r19
 48c:	13 c0       	rjmp	.+38     	; 0x4b4 <vfprintf+0xca>
 48e:	8a e0       	ldi	r24, 0x0A	; 10
 490:	38 9e       	mul	r3, r24
 492:	30 0d       	add	r19, r0
 494:	11 24       	eor	r1, r1
 496:	33 2e       	mov	r3, r19
 498:	20 62       	ori	r18, 0x20	; 32
 49a:	0c c0       	rjmp	.+24     	; 0x4b4 <vfprintf+0xca>
 49c:	8e 32       	cpi	r24, 0x2E	; 46
 49e:	21 f4       	brne	.+8      	; 0x4a8 <vfprintf+0xbe>
 4a0:	26 fd       	sbrc	r18, 6
 4a2:	6b c1       	rjmp	.+726    	; 0x77a <__stack+0x27b>
 4a4:	20 64       	ori	r18, 0x40	; 64
 4a6:	06 c0       	rjmp	.+12     	; 0x4b4 <vfprintf+0xca>
 4a8:	8c 36       	cpi	r24, 0x6C	; 108
 4aa:	11 f4       	brne	.+4      	; 0x4b0 <vfprintf+0xc6>
 4ac:	20 68       	ori	r18, 0x80	; 128
 4ae:	02 c0       	rjmp	.+4      	; 0x4b4 <vfprintf+0xca>
 4b0:	88 36       	cpi	r24, 0x68	; 104
 4b2:	41 f4       	brne	.+16     	; 0x4c4 <vfprintf+0xda>
 4b4:	f6 01       	movw	r30, r12
 4b6:	93 fd       	sbrc	r25, 3
 4b8:	85 91       	lpm	r24, Z+
 4ba:	93 ff       	sbrs	r25, 3
 4bc:	81 91       	ld	r24, Z+
 4be:	6f 01       	movw	r12, r30
 4c0:	81 11       	cpse	r24, r1
 4c2:	c1 cf       	rjmp	.-126    	; 0x446 <vfprintf+0x5c>
 4c4:	98 2f       	mov	r25, r24
 4c6:	9f 7d       	andi	r25, 0xDF	; 223
 4c8:	95 54       	subi	r25, 0x45	; 69
 4ca:	93 30       	cpi	r25, 0x03	; 3
 4cc:	28 f4       	brcc	.+10     	; 0x4d8 <vfprintf+0xee>
 4ce:	0c 5f       	subi	r16, 0xFC	; 252
 4d0:	1f 4f       	sbci	r17, 0xFF	; 255
 4d2:	ff e3       	ldi	r31, 0x3F	; 63
 4d4:	f9 83       	std	Y+1, r31	; 0x01
 4d6:	0d c0       	rjmp	.+26     	; 0x4f2 <vfprintf+0x108>
 4d8:	83 36       	cpi	r24, 0x63	; 99
 4da:	31 f0       	breq	.+12     	; 0x4e8 <vfprintf+0xfe>
 4dc:	83 37       	cpi	r24, 0x73	; 115
 4de:	71 f0       	breq	.+28     	; 0x4fc <vfprintf+0x112>
 4e0:	83 35       	cpi	r24, 0x53	; 83
 4e2:	09 f0       	breq	.+2      	; 0x4e6 <vfprintf+0xfc>
 4e4:	5b c0       	rjmp	.+182    	; 0x59c <__stack+0x9d>
 4e6:	22 c0       	rjmp	.+68     	; 0x52c <__stack+0x2d>
 4e8:	f8 01       	movw	r30, r16
 4ea:	80 81       	ld	r24, Z
 4ec:	89 83       	std	Y+1, r24	; 0x01
 4ee:	0e 5f       	subi	r16, 0xFE	; 254
 4f0:	1f 4f       	sbci	r17, 0xFF	; 255
 4f2:	44 24       	eor	r4, r4
 4f4:	43 94       	inc	r4
 4f6:	51 2c       	mov	r5, r1
 4f8:	54 01       	movw	r10, r8
 4fa:	15 c0       	rjmp	.+42     	; 0x526 <__stack+0x27>
 4fc:	38 01       	movw	r6, r16
 4fe:	f2 e0       	ldi	r31, 0x02	; 2
 500:	6f 0e       	add	r6, r31
 502:	71 1c       	adc	r7, r1
 504:	f8 01       	movw	r30, r16
 506:	a0 80       	ld	r10, Z
 508:	b1 80       	ldd	r11, Z+1	; 0x01
 50a:	26 ff       	sbrs	r18, 6
 50c:	03 c0       	rjmp	.+6      	; 0x514 <__stack+0x15>
 50e:	65 2d       	mov	r22, r5
 510:	70 e0       	ldi	r23, 0x00	; 0
 512:	02 c0       	rjmp	.+4      	; 0x518 <__stack+0x19>
 514:	6f ef       	ldi	r22, 0xFF	; 255
 516:	7f ef       	ldi	r23, 0xFF	; 255
 518:	c5 01       	movw	r24, r10
 51a:	2c 87       	std	Y+12, r18	; 0x0c
 51c:	0e 94 1c 05 	call	0xa38	; 0xa38 <strnlen>
 520:	2c 01       	movw	r4, r24
 522:	83 01       	movw	r16, r6
 524:	2c 85       	ldd	r18, Y+12	; 0x0c
 526:	2f 77       	andi	r18, 0x7F	; 127
 528:	22 2e       	mov	r2, r18
 52a:	17 c0       	rjmp	.+46     	; 0x55a <__stack+0x5b>
 52c:	38 01       	movw	r6, r16
 52e:	f2 e0       	ldi	r31, 0x02	; 2
 530:	6f 0e       	add	r6, r31
 532:	71 1c       	adc	r7, r1
 534:	f8 01       	movw	r30, r16
 536:	a0 80       	ld	r10, Z
 538:	b1 80       	ldd	r11, Z+1	; 0x01
 53a:	26 ff       	sbrs	r18, 6
 53c:	03 c0       	rjmp	.+6      	; 0x544 <__stack+0x45>
 53e:	65 2d       	mov	r22, r5
 540:	70 e0       	ldi	r23, 0x00	; 0
 542:	02 c0       	rjmp	.+4      	; 0x548 <__stack+0x49>
 544:	6f ef       	ldi	r22, 0xFF	; 255
 546:	7f ef       	ldi	r23, 0xFF	; 255
 548:	c5 01       	movw	r24, r10
 54a:	2c 87       	std	Y+12, r18	; 0x0c
 54c:	0e 94 0a 05 	call	0xa14	; 0xa14 <strnlen_P>
 550:	2c 01       	movw	r4, r24
 552:	2c 85       	ldd	r18, Y+12	; 0x0c
 554:	20 68       	ori	r18, 0x80	; 128
 556:	22 2e       	mov	r2, r18
 558:	83 01       	movw	r16, r6
 55a:	23 fc       	sbrc	r2, 3
 55c:	1b c0       	rjmp	.+54     	; 0x594 <__stack+0x95>
 55e:	83 2d       	mov	r24, r3
 560:	90 e0       	ldi	r25, 0x00	; 0
 562:	48 16       	cp	r4, r24
 564:	59 06       	cpc	r5, r25
 566:	b0 f4       	brcc	.+44     	; 0x594 <__stack+0x95>
 568:	b7 01       	movw	r22, r14
 56a:	80 e2       	ldi	r24, 0x20	; 32
 56c:	90 e0       	ldi	r25, 0x00	; 0
 56e:	0e 94 27 05 	call	0xa4e	; 0xa4e <fputc>
 572:	3a 94       	dec	r3
 574:	f4 cf       	rjmp	.-24     	; 0x55e <__stack+0x5f>
 576:	f5 01       	movw	r30, r10
 578:	27 fc       	sbrc	r2, 7
 57a:	85 91       	lpm	r24, Z+
 57c:	27 fe       	sbrs	r2, 7
 57e:	81 91       	ld	r24, Z+
 580:	5f 01       	movw	r10, r30
 582:	b7 01       	movw	r22, r14
 584:	90 e0       	ldi	r25, 0x00	; 0
 586:	0e 94 27 05 	call	0xa4e	; 0xa4e <fputc>
 58a:	31 10       	cpse	r3, r1
 58c:	3a 94       	dec	r3
 58e:	f1 e0       	ldi	r31, 0x01	; 1
 590:	4f 1a       	sub	r4, r31
 592:	51 08       	sbc	r5, r1
 594:	41 14       	cp	r4, r1
 596:	51 04       	cpc	r5, r1
 598:	71 f7       	brne	.-36     	; 0x576 <__stack+0x77>
 59a:	e5 c0       	rjmp	.+458    	; 0x766 <__stack+0x267>
 59c:	84 36       	cpi	r24, 0x64	; 100
 59e:	11 f0       	breq	.+4      	; 0x5a4 <__stack+0xa5>
 5a0:	89 36       	cpi	r24, 0x69	; 105
 5a2:	39 f5       	brne	.+78     	; 0x5f2 <__stack+0xf3>
 5a4:	f8 01       	movw	r30, r16
 5a6:	27 ff       	sbrs	r18, 7
 5a8:	07 c0       	rjmp	.+14     	; 0x5b8 <__stack+0xb9>
 5aa:	60 81       	ld	r22, Z
 5ac:	71 81       	ldd	r23, Z+1	; 0x01
 5ae:	82 81       	ldd	r24, Z+2	; 0x02
 5b0:	93 81       	ldd	r25, Z+3	; 0x03
 5b2:	0c 5f       	subi	r16, 0xFC	; 252
 5b4:	1f 4f       	sbci	r17, 0xFF	; 255
 5b6:	08 c0       	rjmp	.+16     	; 0x5c8 <__stack+0xc9>
 5b8:	60 81       	ld	r22, Z
 5ba:	71 81       	ldd	r23, Z+1	; 0x01
 5bc:	88 27       	eor	r24, r24
 5be:	77 fd       	sbrc	r23, 7
 5c0:	80 95       	com	r24
 5c2:	98 2f       	mov	r25, r24
 5c4:	0e 5f       	subi	r16, 0xFE	; 254
 5c6:	1f 4f       	sbci	r17, 0xFF	; 255
 5c8:	2f 76       	andi	r18, 0x6F	; 111
 5ca:	b2 2e       	mov	r11, r18
 5cc:	97 ff       	sbrs	r25, 7
 5ce:	09 c0       	rjmp	.+18     	; 0x5e2 <__stack+0xe3>
 5d0:	90 95       	com	r25
 5d2:	80 95       	com	r24
 5d4:	70 95       	com	r23
 5d6:	61 95       	neg	r22
 5d8:	7f 4f       	sbci	r23, 0xFF	; 255
 5da:	8f 4f       	sbci	r24, 0xFF	; 255
 5dc:	9f 4f       	sbci	r25, 0xFF	; 255
 5de:	20 68       	ori	r18, 0x80	; 128
 5e0:	b2 2e       	mov	r11, r18
 5e2:	2a e0       	ldi	r18, 0x0A	; 10
 5e4:	30 e0       	ldi	r19, 0x00	; 0
 5e6:	a4 01       	movw	r20, r8
 5e8:	0e 94 59 05 	call	0xab2	; 0xab2 <__ultoa_invert>
 5ec:	a8 2e       	mov	r10, r24
 5ee:	a8 18       	sub	r10, r8
 5f0:	44 c0       	rjmp	.+136    	; 0x67a <__stack+0x17b>
 5f2:	85 37       	cpi	r24, 0x75	; 117
 5f4:	29 f4       	brne	.+10     	; 0x600 <__stack+0x101>
 5f6:	2f 7e       	andi	r18, 0xEF	; 239
 5f8:	b2 2e       	mov	r11, r18
 5fa:	2a e0       	ldi	r18, 0x0A	; 10
 5fc:	30 e0       	ldi	r19, 0x00	; 0
 5fe:	25 c0       	rjmp	.+74     	; 0x64a <__stack+0x14b>
 600:	f2 2f       	mov	r31, r18
 602:	f9 7f       	andi	r31, 0xF9	; 249
 604:	bf 2e       	mov	r11, r31
 606:	8f 36       	cpi	r24, 0x6F	; 111
 608:	c1 f0       	breq	.+48     	; 0x63a <__stack+0x13b>
 60a:	18 f4       	brcc	.+6      	; 0x612 <__stack+0x113>
 60c:	88 35       	cpi	r24, 0x58	; 88
 60e:	79 f0       	breq	.+30     	; 0x62e <__stack+0x12f>
 610:	b4 c0       	rjmp	.+360    	; 0x77a <__stack+0x27b>
 612:	80 37       	cpi	r24, 0x70	; 112
 614:	19 f0       	breq	.+6      	; 0x61c <__stack+0x11d>
 616:	88 37       	cpi	r24, 0x78	; 120
 618:	21 f0       	breq	.+8      	; 0x622 <__stack+0x123>
 61a:	af c0       	rjmp	.+350    	; 0x77a <__stack+0x27b>
 61c:	2f 2f       	mov	r18, r31
 61e:	20 61       	ori	r18, 0x10	; 16
 620:	b2 2e       	mov	r11, r18
 622:	b4 fe       	sbrs	r11, 4
 624:	0d c0       	rjmp	.+26     	; 0x640 <__stack+0x141>
 626:	8b 2d       	mov	r24, r11
 628:	84 60       	ori	r24, 0x04	; 4
 62a:	b8 2e       	mov	r11, r24
 62c:	09 c0       	rjmp	.+18     	; 0x640 <__stack+0x141>
 62e:	24 ff       	sbrs	r18, 4
 630:	0a c0       	rjmp	.+20     	; 0x646 <__stack+0x147>
 632:	9f 2f       	mov	r25, r31
 634:	96 60       	ori	r25, 0x06	; 6
 636:	b9 2e       	mov	r11, r25
 638:	06 c0       	rjmp	.+12     	; 0x646 <__stack+0x147>
 63a:	28 e0       	ldi	r18, 0x08	; 8
 63c:	30 e0       	ldi	r19, 0x00	; 0
 63e:	05 c0       	rjmp	.+10     	; 0x64a <__stack+0x14b>
 640:	20 e1       	ldi	r18, 0x10	; 16
 642:	30 e0       	ldi	r19, 0x00	; 0
 644:	02 c0       	rjmp	.+4      	; 0x64a <__stack+0x14b>
 646:	20 e1       	ldi	r18, 0x10	; 16
 648:	32 e0       	ldi	r19, 0x02	; 2
 64a:	f8 01       	movw	r30, r16
 64c:	b7 fe       	sbrs	r11, 7
 64e:	07 c0       	rjmp	.+14     	; 0x65e <__stack+0x15f>
 650:	60 81       	ld	r22, Z
 652:	71 81       	ldd	r23, Z+1	; 0x01
 654:	82 81       	ldd	r24, Z+2	; 0x02
 656:	93 81       	ldd	r25, Z+3	; 0x03
 658:	0c 5f       	subi	r16, 0xFC	; 252
 65a:	1f 4f       	sbci	r17, 0xFF	; 255
 65c:	06 c0       	rjmp	.+12     	; 0x66a <__stack+0x16b>
 65e:	60 81       	ld	r22, Z
 660:	71 81       	ldd	r23, Z+1	; 0x01
 662:	80 e0       	ldi	r24, 0x00	; 0
 664:	90 e0       	ldi	r25, 0x00	; 0
 666:	0e 5f       	subi	r16, 0xFE	; 254
 668:	1f 4f       	sbci	r17, 0xFF	; 255
 66a:	a4 01       	movw	r20, r8
 66c:	0e 94 59 05 	call	0xab2	; 0xab2 <__ultoa_invert>
 670:	a8 2e       	mov	r10, r24
 672:	a8 18       	sub	r10, r8
 674:	fb 2d       	mov	r31, r11
 676:	ff 77       	andi	r31, 0x7F	; 127
 678:	bf 2e       	mov	r11, r31
 67a:	b6 fe       	sbrs	r11, 6
 67c:	0b c0       	rjmp	.+22     	; 0x694 <__stack+0x195>
 67e:	2b 2d       	mov	r18, r11
 680:	2e 7f       	andi	r18, 0xFE	; 254
 682:	a5 14       	cp	r10, r5
 684:	50 f4       	brcc	.+20     	; 0x69a <__stack+0x19b>
 686:	b4 fe       	sbrs	r11, 4
 688:	0a c0       	rjmp	.+20     	; 0x69e <__stack+0x19f>
 68a:	b2 fc       	sbrc	r11, 2
 68c:	08 c0       	rjmp	.+16     	; 0x69e <__stack+0x19f>
 68e:	2b 2d       	mov	r18, r11
 690:	2e 7e       	andi	r18, 0xEE	; 238
 692:	05 c0       	rjmp	.+10     	; 0x69e <__stack+0x19f>
 694:	7a 2c       	mov	r7, r10
 696:	2b 2d       	mov	r18, r11
 698:	03 c0       	rjmp	.+6      	; 0x6a0 <__stack+0x1a1>
 69a:	7a 2c       	mov	r7, r10
 69c:	01 c0       	rjmp	.+2      	; 0x6a0 <__stack+0x1a1>
 69e:	75 2c       	mov	r7, r5
 6a0:	24 ff       	sbrs	r18, 4
 6a2:	0d c0       	rjmp	.+26     	; 0x6be <__stack+0x1bf>
 6a4:	fe 01       	movw	r30, r28
 6a6:	ea 0d       	add	r30, r10
 6a8:	f1 1d       	adc	r31, r1
 6aa:	80 81       	ld	r24, Z
 6ac:	80 33       	cpi	r24, 0x30	; 48
 6ae:	11 f4       	brne	.+4      	; 0x6b4 <__stack+0x1b5>
 6b0:	29 7e       	andi	r18, 0xE9	; 233
 6b2:	09 c0       	rjmp	.+18     	; 0x6c6 <__stack+0x1c7>
 6b4:	22 ff       	sbrs	r18, 2
 6b6:	06 c0       	rjmp	.+12     	; 0x6c4 <__stack+0x1c5>
 6b8:	73 94       	inc	r7
 6ba:	73 94       	inc	r7
 6bc:	04 c0       	rjmp	.+8      	; 0x6c6 <__stack+0x1c7>
 6be:	82 2f       	mov	r24, r18
 6c0:	86 78       	andi	r24, 0x86	; 134
 6c2:	09 f0       	breq	.+2      	; 0x6c6 <__stack+0x1c7>
 6c4:	73 94       	inc	r7
 6c6:	23 fd       	sbrc	r18, 3
 6c8:	13 c0       	rjmp	.+38     	; 0x6f0 <__stack+0x1f1>
 6ca:	20 ff       	sbrs	r18, 0
 6cc:	06 c0       	rjmp	.+12     	; 0x6da <__stack+0x1db>
 6ce:	5a 2c       	mov	r5, r10
 6d0:	73 14       	cp	r7, r3
 6d2:	18 f4       	brcc	.+6      	; 0x6da <__stack+0x1db>
 6d4:	53 0c       	add	r5, r3
 6d6:	57 18       	sub	r5, r7
 6d8:	73 2c       	mov	r7, r3
 6da:	73 14       	cp	r7, r3
 6dc:	68 f4       	brcc	.+26     	; 0x6f8 <__stack+0x1f9>
 6de:	b7 01       	movw	r22, r14
 6e0:	80 e2       	ldi	r24, 0x20	; 32
 6e2:	90 e0       	ldi	r25, 0x00	; 0
 6e4:	2c 87       	std	Y+12, r18	; 0x0c
 6e6:	0e 94 27 05 	call	0xa4e	; 0xa4e <fputc>
 6ea:	73 94       	inc	r7
 6ec:	2c 85       	ldd	r18, Y+12	; 0x0c
 6ee:	f5 cf       	rjmp	.-22     	; 0x6da <__stack+0x1db>
 6f0:	73 14       	cp	r7, r3
 6f2:	10 f4       	brcc	.+4      	; 0x6f8 <__stack+0x1f9>
 6f4:	37 18       	sub	r3, r7
 6f6:	01 c0       	rjmp	.+2      	; 0x6fa <__stack+0x1fb>
 6f8:	31 2c       	mov	r3, r1
 6fa:	24 ff       	sbrs	r18, 4
 6fc:	12 c0       	rjmp	.+36     	; 0x722 <__stack+0x223>
 6fe:	b7 01       	movw	r22, r14
 700:	80 e3       	ldi	r24, 0x30	; 48
 702:	90 e0       	ldi	r25, 0x00	; 0
 704:	2c 87       	std	Y+12, r18	; 0x0c
 706:	0e 94 27 05 	call	0xa4e	; 0xa4e <fputc>
 70a:	2c 85       	ldd	r18, Y+12	; 0x0c
 70c:	22 ff       	sbrs	r18, 2
 70e:	17 c0       	rjmp	.+46     	; 0x73e <__stack+0x23f>
 710:	21 ff       	sbrs	r18, 1
 712:	03 c0       	rjmp	.+6      	; 0x71a <__stack+0x21b>
 714:	88 e5       	ldi	r24, 0x58	; 88
 716:	90 e0       	ldi	r25, 0x00	; 0
 718:	02 c0       	rjmp	.+4      	; 0x71e <__stack+0x21f>
 71a:	88 e7       	ldi	r24, 0x78	; 120
 71c:	90 e0       	ldi	r25, 0x00	; 0
 71e:	b7 01       	movw	r22, r14
 720:	0c c0       	rjmp	.+24     	; 0x73a <__stack+0x23b>
 722:	82 2f       	mov	r24, r18
 724:	86 78       	andi	r24, 0x86	; 134
 726:	59 f0       	breq	.+22     	; 0x73e <__stack+0x23f>
 728:	21 fd       	sbrc	r18, 1
 72a:	02 c0       	rjmp	.+4      	; 0x730 <__stack+0x231>
 72c:	80 e2       	ldi	r24, 0x20	; 32
 72e:	01 c0       	rjmp	.+2      	; 0x732 <__stack+0x233>
 730:	8b e2       	ldi	r24, 0x2B	; 43
 732:	27 fd       	sbrc	r18, 7
 734:	8d e2       	ldi	r24, 0x2D	; 45
 736:	b7 01       	movw	r22, r14
 738:	90 e0       	ldi	r25, 0x00	; 0
 73a:	0e 94 27 05 	call	0xa4e	; 0xa4e <fputc>
 73e:	a5 14       	cp	r10, r5
 740:	38 f4       	brcc	.+14     	; 0x750 <__stack+0x251>
 742:	b7 01       	movw	r22, r14
 744:	80 e3       	ldi	r24, 0x30	; 48
 746:	90 e0       	ldi	r25, 0x00	; 0
 748:	0e 94 27 05 	call	0xa4e	; 0xa4e <fputc>
 74c:	5a 94       	dec	r5
 74e:	f7 cf       	rjmp	.-18     	; 0x73e <__stack+0x23f>
 750:	aa 94       	dec	r10
 752:	f4 01       	movw	r30, r8
 754:	ea 0d       	add	r30, r10
 756:	f1 1d       	adc	r31, r1
 758:	80 81       	ld	r24, Z
 75a:	b7 01       	movw	r22, r14
 75c:	90 e0       	ldi	r25, 0x00	; 0
 75e:	0e 94 27 05 	call	0xa4e	; 0xa4e <fputc>
 762:	a1 10       	cpse	r10, r1
 764:	f5 cf       	rjmp	.-22     	; 0x750 <__stack+0x251>
 766:	33 20       	and	r3, r3
 768:	09 f4       	brne	.+2      	; 0x76c <__stack+0x26d>
 76a:	51 ce       	rjmp	.-862    	; 0x40e <vfprintf+0x24>
 76c:	b7 01       	movw	r22, r14
 76e:	80 e2       	ldi	r24, 0x20	; 32
 770:	90 e0       	ldi	r25, 0x00	; 0
 772:	0e 94 27 05 	call	0xa4e	; 0xa4e <fputc>
 776:	3a 94       	dec	r3
 778:	f6 cf       	rjmp	.-20     	; 0x766 <__stack+0x267>
 77a:	f7 01       	movw	r30, r14
 77c:	86 81       	ldd	r24, Z+6	; 0x06
 77e:	97 81       	ldd	r25, Z+7	; 0x07
 780:	02 c0       	rjmp	.+4      	; 0x786 <__stack+0x287>
 782:	8f ef       	ldi	r24, 0xFF	; 255
 784:	9f ef       	ldi	r25, 0xFF	; 255
 786:	2c 96       	adiw	r28, 0x0c	; 12
 788:	e2 e1       	ldi	r30, 0x12	; 18
 78a:	0c 94 05 06 	jmp	0xc0a	; 0xc0a <__epilogue_restores__>

0000078e <calloc>:
 78e:	0f 93       	push	r16
 790:	1f 93       	push	r17
 792:	cf 93       	push	r28
 794:	df 93       	push	r29
 796:	86 9f       	mul	r24, r22
 798:	80 01       	movw	r16, r0
 79a:	87 9f       	mul	r24, r23
 79c:	10 0d       	add	r17, r0
 79e:	96 9f       	mul	r25, r22
 7a0:	10 0d       	add	r17, r0
 7a2:	11 24       	eor	r1, r1
 7a4:	c8 01       	movw	r24, r16
 7a6:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <malloc>
 7aa:	ec 01       	movw	r28, r24
 7ac:	00 97       	sbiw	r24, 0x00	; 0
 7ae:	29 f0       	breq	.+10     	; 0x7ba <calloc+0x2c>
 7b0:	a8 01       	movw	r20, r16
 7b2:	60 e0       	ldi	r22, 0x00	; 0
 7b4:	70 e0       	ldi	r23, 0x00	; 0
 7b6:	0e 94 15 05 	call	0xa2a	; 0xa2a <memset>
 7ba:	ce 01       	movw	r24, r28
 7bc:	df 91       	pop	r29
 7be:	cf 91       	pop	r28
 7c0:	1f 91       	pop	r17
 7c2:	0f 91       	pop	r16
 7c4:	08 95       	ret

000007c6 <malloc>:
 7c6:	cf 93       	push	r28
 7c8:	df 93       	push	r29
 7ca:	82 30       	cpi	r24, 0x02	; 2
 7cc:	91 05       	cpc	r25, r1
 7ce:	10 f4       	brcc	.+4      	; 0x7d4 <malloc+0xe>
 7d0:	82 e0       	ldi	r24, 0x02	; 2
 7d2:	90 e0       	ldi	r25, 0x00	; 0
 7d4:	e0 91 f8 01 	lds	r30, 0x01F8
 7d8:	f0 91 f9 01 	lds	r31, 0x01F9
 7dc:	20 e0       	ldi	r18, 0x00	; 0
 7de:	30 e0       	ldi	r19, 0x00	; 0
 7e0:	a0 e0       	ldi	r26, 0x00	; 0
 7e2:	b0 e0       	ldi	r27, 0x00	; 0
 7e4:	30 97       	sbiw	r30, 0x00	; 0
 7e6:	39 f1       	breq	.+78     	; 0x836 <malloc+0x70>
 7e8:	40 81       	ld	r20, Z
 7ea:	51 81       	ldd	r21, Z+1	; 0x01
 7ec:	48 17       	cp	r20, r24
 7ee:	59 07       	cpc	r21, r25
 7f0:	b8 f0       	brcs	.+46     	; 0x820 <malloc+0x5a>
 7f2:	48 17       	cp	r20, r24
 7f4:	59 07       	cpc	r21, r25
 7f6:	71 f4       	brne	.+28     	; 0x814 <malloc+0x4e>
 7f8:	82 81       	ldd	r24, Z+2	; 0x02
 7fa:	93 81       	ldd	r25, Z+3	; 0x03
 7fc:	10 97       	sbiw	r26, 0x00	; 0
 7fe:	29 f0       	breq	.+10     	; 0x80a <malloc+0x44>
 800:	13 96       	adiw	r26, 0x03	; 3
 802:	9c 93       	st	X, r25
 804:	8e 93       	st	-X, r24
 806:	12 97       	sbiw	r26, 0x02	; 2
 808:	2c c0       	rjmp	.+88     	; 0x862 <malloc+0x9c>
 80a:	90 93 f9 01 	sts	0x01F9, r25
 80e:	80 93 f8 01 	sts	0x01F8, r24
 812:	27 c0       	rjmp	.+78     	; 0x862 <malloc+0x9c>
 814:	21 15       	cp	r18, r1
 816:	31 05       	cpc	r19, r1
 818:	31 f0       	breq	.+12     	; 0x826 <malloc+0x60>
 81a:	42 17       	cp	r20, r18
 81c:	53 07       	cpc	r21, r19
 81e:	18 f0       	brcs	.+6      	; 0x826 <malloc+0x60>
 820:	a9 01       	movw	r20, r18
 822:	db 01       	movw	r26, r22
 824:	01 c0       	rjmp	.+2      	; 0x828 <malloc+0x62>
 826:	ef 01       	movw	r28, r30
 828:	9a 01       	movw	r18, r20
 82a:	bd 01       	movw	r22, r26
 82c:	df 01       	movw	r26, r30
 82e:	02 80       	ldd	r0, Z+2	; 0x02
 830:	f3 81       	ldd	r31, Z+3	; 0x03
 832:	e0 2d       	mov	r30, r0
 834:	d7 cf       	rjmp	.-82     	; 0x7e4 <malloc+0x1e>
 836:	21 15       	cp	r18, r1
 838:	31 05       	cpc	r19, r1
 83a:	f9 f0       	breq	.+62     	; 0x87a <malloc+0xb4>
 83c:	28 1b       	sub	r18, r24
 83e:	39 0b       	sbc	r19, r25
 840:	24 30       	cpi	r18, 0x04	; 4
 842:	31 05       	cpc	r19, r1
 844:	80 f4       	brcc	.+32     	; 0x866 <malloc+0xa0>
 846:	8a 81       	ldd	r24, Y+2	; 0x02
 848:	9b 81       	ldd	r25, Y+3	; 0x03
 84a:	61 15       	cp	r22, r1
 84c:	71 05       	cpc	r23, r1
 84e:	21 f0       	breq	.+8      	; 0x858 <malloc+0x92>
 850:	fb 01       	movw	r30, r22
 852:	93 83       	std	Z+3, r25	; 0x03
 854:	82 83       	std	Z+2, r24	; 0x02
 856:	04 c0       	rjmp	.+8      	; 0x860 <malloc+0x9a>
 858:	90 93 f9 01 	sts	0x01F9, r25
 85c:	80 93 f8 01 	sts	0x01F8, r24
 860:	fe 01       	movw	r30, r28
 862:	32 96       	adiw	r30, 0x02	; 2
 864:	44 c0       	rjmp	.+136    	; 0x8ee <malloc+0x128>
 866:	fe 01       	movw	r30, r28
 868:	e2 0f       	add	r30, r18
 86a:	f3 1f       	adc	r31, r19
 86c:	81 93       	st	Z+, r24
 86e:	91 93       	st	Z+, r25
 870:	22 50       	subi	r18, 0x02	; 2
 872:	31 09       	sbc	r19, r1
 874:	39 83       	std	Y+1, r19	; 0x01
 876:	28 83       	st	Y, r18
 878:	3a c0       	rjmp	.+116    	; 0x8ee <malloc+0x128>
 87a:	20 91 f6 01 	lds	r18, 0x01F6
 87e:	30 91 f7 01 	lds	r19, 0x01F7
 882:	23 2b       	or	r18, r19
 884:	41 f4       	brne	.+16     	; 0x896 <malloc+0xd0>
 886:	20 91 06 01 	lds	r18, 0x0106
 88a:	30 91 07 01 	lds	r19, 0x0107
 88e:	30 93 f7 01 	sts	0x01F7, r19
 892:	20 93 f6 01 	sts	0x01F6, r18
 896:	20 91 04 01 	lds	r18, 0x0104
 89a:	30 91 05 01 	lds	r19, 0x0105
 89e:	21 15       	cp	r18, r1
 8a0:	31 05       	cpc	r19, r1
 8a2:	41 f4       	brne	.+16     	; 0x8b4 <malloc+0xee>
 8a4:	2d b7       	in	r18, 0x3d	; 61
 8a6:	3e b7       	in	r19, 0x3e	; 62
 8a8:	40 91 08 01 	lds	r20, 0x0108
 8ac:	50 91 09 01 	lds	r21, 0x0109
 8b0:	24 1b       	sub	r18, r20
 8b2:	35 0b       	sbc	r19, r21
 8b4:	e0 91 f6 01 	lds	r30, 0x01F6
 8b8:	f0 91 f7 01 	lds	r31, 0x01F7
 8bc:	e2 17       	cp	r30, r18
 8be:	f3 07       	cpc	r31, r19
 8c0:	a0 f4       	brcc	.+40     	; 0x8ea <malloc+0x124>
 8c2:	2e 1b       	sub	r18, r30
 8c4:	3f 0b       	sbc	r19, r31
 8c6:	28 17       	cp	r18, r24
 8c8:	39 07       	cpc	r19, r25
 8ca:	78 f0       	brcs	.+30     	; 0x8ea <malloc+0x124>
 8cc:	ac 01       	movw	r20, r24
 8ce:	4e 5f       	subi	r20, 0xFE	; 254
 8d0:	5f 4f       	sbci	r21, 0xFF	; 255
 8d2:	24 17       	cp	r18, r20
 8d4:	35 07       	cpc	r19, r21
 8d6:	48 f0       	brcs	.+18     	; 0x8ea <malloc+0x124>
 8d8:	4e 0f       	add	r20, r30
 8da:	5f 1f       	adc	r21, r31
 8dc:	50 93 f7 01 	sts	0x01F7, r21
 8e0:	40 93 f6 01 	sts	0x01F6, r20
 8e4:	81 93       	st	Z+, r24
 8e6:	91 93       	st	Z+, r25
 8e8:	02 c0       	rjmp	.+4      	; 0x8ee <malloc+0x128>
 8ea:	e0 e0       	ldi	r30, 0x00	; 0
 8ec:	f0 e0       	ldi	r31, 0x00	; 0
 8ee:	cf 01       	movw	r24, r30
 8f0:	df 91       	pop	r29
 8f2:	cf 91       	pop	r28
 8f4:	08 95       	ret

000008f6 <free>:
 8f6:	cf 93       	push	r28
 8f8:	df 93       	push	r29
 8fa:	00 97       	sbiw	r24, 0x00	; 0
 8fc:	09 f4       	brne	.+2      	; 0x900 <free+0xa>
 8fe:	87 c0       	rjmp	.+270    	; 0xa0e <free+0x118>
 900:	fc 01       	movw	r30, r24
 902:	32 97       	sbiw	r30, 0x02	; 2
 904:	13 82       	std	Z+3, r1	; 0x03
 906:	12 82       	std	Z+2, r1	; 0x02
 908:	c0 91 f8 01 	lds	r28, 0x01F8
 90c:	d0 91 f9 01 	lds	r29, 0x01F9
 910:	20 97       	sbiw	r28, 0x00	; 0
 912:	81 f4       	brne	.+32     	; 0x934 <free+0x3e>
 914:	20 81       	ld	r18, Z
 916:	31 81       	ldd	r19, Z+1	; 0x01
 918:	28 0f       	add	r18, r24
 91a:	39 1f       	adc	r19, r25
 91c:	80 91 f6 01 	lds	r24, 0x01F6
 920:	90 91 f7 01 	lds	r25, 0x01F7
 924:	82 17       	cp	r24, r18
 926:	93 07       	cpc	r25, r19
 928:	79 f5       	brne	.+94     	; 0x988 <free+0x92>
 92a:	f0 93 f7 01 	sts	0x01F7, r31
 92e:	e0 93 f6 01 	sts	0x01F6, r30
 932:	6d c0       	rjmp	.+218    	; 0xa0e <free+0x118>
 934:	de 01       	movw	r26, r28
 936:	20 e0       	ldi	r18, 0x00	; 0
 938:	30 e0       	ldi	r19, 0x00	; 0
 93a:	ae 17       	cp	r26, r30
 93c:	bf 07       	cpc	r27, r31
 93e:	50 f4       	brcc	.+20     	; 0x954 <free+0x5e>
 940:	12 96       	adiw	r26, 0x02	; 2
 942:	4d 91       	ld	r20, X+
 944:	5c 91       	ld	r21, X
 946:	13 97       	sbiw	r26, 0x03	; 3
 948:	9d 01       	movw	r18, r26
 94a:	41 15       	cp	r20, r1
 94c:	51 05       	cpc	r21, r1
 94e:	09 f1       	breq	.+66     	; 0x992 <free+0x9c>
 950:	da 01       	movw	r26, r20
 952:	f3 cf       	rjmp	.-26     	; 0x93a <free+0x44>
 954:	b3 83       	std	Z+3, r27	; 0x03
 956:	a2 83       	std	Z+2, r26	; 0x02
 958:	40 81       	ld	r20, Z
 95a:	51 81       	ldd	r21, Z+1	; 0x01
 95c:	84 0f       	add	r24, r20
 95e:	95 1f       	adc	r25, r21
 960:	8a 17       	cp	r24, r26
 962:	9b 07       	cpc	r25, r27
 964:	71 f4       	brne	.+28     	; 0x982 <free+0x8c>
 966:	8d 91       	ld	r24, X+
 968:	9c 91       	ld	r25, X
 96a:	11 97       	sbiw	r26, 0x01	; 1
 96c:	84 0f       	add	r24, r20
 96e:	95 1f       	adc	r25, r21
 970:	02 96       	adiw	r24, 0x02	; 2
 972:	91 83       	std	Z+1, r25	; 0x01
 974:	80 83       	st	Z, r24
 976:	12 96       	adiw	r26, 0x02	; 2
 978:	8d 91       	ld	r24, X+
 97a:	9c 91       	ld	r25, X
 97c:	13 97       	sbiw	r26, 0x03	; 3
 97e:	93 83       	std	Z+3, r25	; 0x03
 980:	82 83       	std	Z+2, r24	; 0x02
 982:	21 15       	cp	r18, r1
 984:	31 05       	cpc	r19, r1
 986:	29 f4       	brne	.+10     	; 0x992 <free+0x9c>
 988:	f0 93 f9 01 	sts	0x01F9, r31
 98c:	e0 93 f8 01 	sts	0x01F8, r30
 990:	3e c0       	rjmp	.+124    	; 0xa0e <free+0x118>
 992:	d9 01       	movw	r26, r18
 994:	13 96       	adiw	r26, 0x03	; 3
 996:	fc 93       	st	X, r31
 998:	ee 93       	st	-X, r30
 99a:	12 97       	sbiw	r26, 0x02	; 2
 99c:	4d 91       	ld	r20, X+
 99e:	5d 91       	ld	r21, X+
 9a0:	a4 0f       	add	r26, r20
 9a2:	b5 1f       	adc	r27, r21
 9a4:	ea 17       	cp	r30, r26
 9a6:	fb 07       	cpc	r31, r27
 9a8:	79 f4       	brne	.+30     	; 0x9c8 <free+0xd2>
 9aa:	80 81       	ld	r24, Z
 9ac:	91 81       	ldd	r25, Z+1	; 0x01
 9ae:	84 0f       	add	r24, r20
 9b0:	95 1f       	adc	r25, r21
 9b2:	02 96       	adiw	r24, 0x02	; 2
 9b4:	d9 01       	movw	r26, r18
 9b6:	11 96       	adiw	r26, 0x01	; 1
 9b8:	9c 93       	st	X, r25
 9ba:	8e 93       	st	-X, r24
 9bc:	82 81       	ldd	r24, Z+2	; 0x02
 9be:	93 81       	ldd	r25, Z+3	; 0x03
 9c0:	13 96       	adiw	r26, 0x03	; 3
 9c2:	9c 93       	st	X, r25
 9c4:	8e 93       	st	-X, r24
 9c6:	12 97       	sbiw	r26, 0x02	; 2
 9c8:	e0 e0       	ldi	r30, 0x00	; 0
 9ca:	f0 e0       	ldi	r31, 0x00	; 0
 9cc:	8a 81       	ldd	r24, Y+2	; 0x02
 9ce:	9b 81       	ldd	r25, Y+3	; 0x03
 9d0:	00 97       	sbiw	r24, 0x00	; 0
 9d2:	19 f0       	breq	.+6      	; 0x9da <free+0xe4>
 9d4:	fe 01       	movw	r30, r28
 9d6:	ec 01       	movw	r28, r24
 9d8:	f9 cf       	rjmp	.-14     	; 0x9cc <free+0xd6>
 9da:	ce 01       	movw	r24, r28
 9dc:	02 96       	adiw	r24, 0x02	; 2
 9de:	28 81       	ld	r18, Y
 9e0:	39 81       	ldd	r19, Y+1	; 0x01
 9e2:	82 0f       	add	r24, r18
 9e4:	93 1f       	adc	r25, r19
 9e6:	20 91 f6 01 	lds	r18, 0x01F6
 9ea:	30 91 f7 01 	lds	r19, 0x01F7
 9ee:	28 17       	cp	r18, r24
 9f0:	39 07       	cpc	r19, r25
 9f2:	69 f4       	brne	.+26     	; 0xa0e <free+0x118>
 9f4:	30 97       	sbiw	r30, 0x00	; 0
 9f6:	29 f4       	brne	.+10     	; 0xa02 <free+0x10c>
 9f8:	10 92 f9 01 	sts	0x01F9, r1
 9fc:	10 92 f8 01 	sts	0x01F8, r1
 a00:	02 c0       	rjmp	.+4      	; 0xa06 <free+0x110>
 a02:	13 82       	std	Z+3, r1	; 0x03
 a04:	12 82       	std	Z+2, r1	; 0x02
 a06:	d0 93 f7 01 	sts	0x01F7, r29
 a0a:	c0 93 f6 01 	sts	0x01F6, r28
 a0e:	df 91       	pop	r29
 a10:	cf 91       	pop	r28
 a12:	08 95       	ret

00000a14 <strnlen_P>:
 a14:	fc 01       	movw	r30, r24
 a16:	05 90       	lpm	r0, Z+
 a18:	61 50       	subi	r22, 0x01	; 1
 a1a:	70 40       	sbci	r23, 0x00	; 0
 a1c:	01 10       	cpse	r0, r1
 a1e:	d8 f7       	brcc	.-10     	; 0xa16 <strnlen_P+0x2>
 a20:	80 95       	com	r24
 a22:	90 95       	com	r25
 a24:	8e 0f       	add	r24, r30
 a26:	9f 1f       	adc	r25, r31
 a28:	08 95       	ret

00000a2a <memset>:
 a2a:	dc 01       	movw	r26, r24
 a2c:	01 c0       	rjmp	.+2      	; 0xa30 <memset+0x6>
 a2e:	6d 93       	st	X+, r22
 a30:	41 50       	subi	r20, 0x01	; 1
 a32:	50 40       	sbci	r21, 0x00	; 0
 a34:	e0 f7       	brcc	.-8      	; 0xa2e <memset+0x4>
 a36:	08 95       	ret

00000a38 <strnlen>:
 a38:	fc 01       	movw	r30, r24
 a3a:	61 50       	subi	r22, 0x01	; 1
 a3c:	70 40       	sbci	r23, 0x00	; 0
 a3e:	01 90       	ld	r0, Z+
 a40:	01 10       	cpse	r0, r1
 a42:	d8 f7       	brcc	.-10     	; 0xa3a <strnlen+0x2>
 a44:	80 95       	com	r24
 a46:	90 95       	com	r25
 a48:	8e 0f       	add	r24, r30
 a4a:	9f 1f       	adc	r25, r31
 a4c:	08 95       	ret

00000a4e <fputc>:
 a4e:	0f 93       	push	r16
 a50:	1f 93       	push	r17
 a52:	cf 93       	push	r28
 a54:	df 93       	push	r29
 a56:	18 2f       	mov	r17, r24
 a58:	09 2f       	mov	r16, r25
 a5a:	eb 01       	movw	r28, r22
 a5c:	8b 81       	ldd	r24, Y+3	; 0x03
 a5e:	81 fd       	sbrc	r24, 1
 a60:	03 c0       	rjmp	.+6      	; 0xa68 <fputc+0x1a>
 a62:	8f ef       	ldi	r24, 0xFF	; 255
 a64:	9f ef       	ldi	r25, 0xFF	; 255
 a66:	20 c0       	rjmp	.+64     	; 0xaa8 <fputc+0x5a>
 a68:	82 ff       	sbrs	r24, 2
 a6a:	10 c0       	rjmp	.+32     	; 0xa8c <fputc+0x3e>
 a6c:	4e 81       	ldd	r20, Y+6	; 0x06
 a6e:	5f 81       	ldd	r21, Y+7	; 0x07
 a70:	2c 81       	ldd	r18, Y+4	; 0x04
 a72:	3d 81       	ldd	r19, Y+5	; 0x05
 a74:	42 17       	cp	r20, r18
 a76:	53 07       	cpc	r21, r19
 a78:	7c f4       	brge	.+30     	; 0xa98 <fputc+0x4a>
 a7a:	e8 81       	ld	r30, Y
 a7c:	f9 81       	ldd	r31, Y+1	; 0x01
 a7e:	9f 01       	movw	r18, r30
 a80:	2f 5f       	subi	r18, 0xFF	; 255
 a82:	3f 4f       	sbci	r19, 0xFF	; 255
 a84:	39 83       	std	Y+1, r19	; 0x01
 a86:	28 83       	st	Y, r18
 a88:	10 83       	st	Z, r17
 a8a:	06 c0       	rjmp	.+12     	; 0xa98 <fputc+0x4a>
 a8c:	e8 85       	ldd	r30, Y+8	; 0x08
 a8e:	f9 85       	ldd	r31, Y+9	; 0x09
 a90:	81 2f       	mov	r24, r17
 a92:	09 95       	icall
 a94:	89 2b       	or	r24, r25
 a96:	29 f7       	brne	.-54     	; 0xa62 <fputc+0x14>
 a98:	2e 81       	ldd	r18, Y+6	; 0x06
 a9a:	3f 81       	ldd	r19, Y+7	; 0x07
 a9c:	2f 5f       	subi	r18, 0xFF	; 255
 a9e:	3f 4f       	sbci	r19, 0xFF	; 255
 aa0:	3f 83       	std	Y+7, r19	; 0x07
 aa2:	2e 83       	std	Y+6, r18	; 0x06
 aa4:	81 2f       	mov	r24, r17
 aa6:	90 2f       	mov	r25, r16
 aa8:	df 91       	pop	r29
 aaa:	cf 91       	pop	r28
 aac:	1f 91       	pop	r17
 aae:	0f 91       	pop	r16
 ab0:	08 95       	ret

00000ab2 <__ultoa_invert>:
 ab2:	fa 01       	movw	r30, r20
 ab4:	aa 27       	eor	r26, r26
 ab6:	28 30       	cpi	r18, 0x08	; 8
 ab8:	51 f1       	breq	.+84     	; 0xb0e <__ultoa_invert+0x5c>
 aba:	20 31       	cpi	r18, 0x10	; 16
 abc:	81 f1       	breq	.+96     	; 0xb1e <__ultoa_invert+0x6c>
 abe:	e8 94       	clt
 ac0:	6f 93       	push	r22
 ac2:	6e 7f       	andi	r22, 0xFE	; 254
 ac4:	6e 5f       	subi	r22, 0xFE	; 254
 ac6:	7f 4f       	sbci	r23, 0xFF	; 255
 ac8:	8f 4f       	sbci	r24, 0xFF	; 255
 aca:	9f 4f       	sbci	r25, 0xFF	; 255
 acc:	af 4f       	sbci	r26, 0xFF	; 255
 ace:	b1 e0       	ldi	r27, 0x01	; 1
 ad0:	3e d0       	rcall	.+124    	; 0xb4e <__ultoa_invert+0x9c>
 ad2:	b4 e0       	ldi	r27, 0x04	; 4
 ad4:	3c d0       	rcall	.+120    	; 0xb4e <__ultoa_invert+0x9c>
 ad6:	67 0f       	add	r22, r23
 ad8:	78 1f       	adc	r23, r24
 ada:	89 1f       	adc	r24, r25
 adc:	9a 1f       	adc	r25, r26
 ade:	a1 1d       	adc	r26, r1
 ae0:	68 0f       	add	r22, r24
 ae2:	79 1f       	adc	r23, r25
 ae4:	8a 1f       	adc	r24, r26
 ae6:	91 1d       	adc	r25, r1
 ae8:	a1 1d       	adc	r26, r1
 aea:	6a 0f       	add	r22, r26
 aec:	71 1d       	adc	r23, r1
 aee:	81 1d       	adc	r24, r1
 af0:	91 1d       	adc	r25, r1
 af2:	a1 1d       	adc	r26, r1
 af4:	20 d0       	rcall	.+64     	; 0xb36 <__ultoa_invert+0x84>
 af6:	09 f4       	brne	.+2      	; 0xafa <__ultoa_invert+0x48>
 af8:	68 94       	set
 afa:	3f 91       	pop	r19
 afc:	2a e0       	ldi	r18, 0x0A	; 10
 afe:	26 9f       	mul	r18, r22
 b00:	11 24       	eor	r1, r1
 b02:	30 19       	sub	r19, r0
 b04:	30 5d       	subi	r19, 0xD0	; 208
 b06:	31 93       	st	Z+, r19
 b08:	de f6       	brtc	.-74     	; 0xac0 <__ultoa_invert+0xe>
 b0a:	cf 01       	movw	r24, r30
 b0c:	08 95       	ret
 b0e:	46 2f       	mov	r20, r22
 b10:	47 70       	andi	r20, 0x07	; 7
 b12:	40 5d       	subi	r20, 0xD0	; 208
 b14:	41 93       	st	Z+, r20
 b16:	b3 e0       	ldi	r27, 0x03	; 3
 b18:	0f d0       	rcall	.+30     	; 0xb38 <__ultoa_invert+0x86>
 b1a:	c9 f7       	brne	.-14     	; 0xb0e <__ultoa_invert+0x5c>
 b1c:	f6 cf       	rjmp	.-20     	; 0xb0a <__ultoa_invert+0x58>
 b1e:	46 2f       	mov	r20, r22
 b20:	4f 70       	andi	r20, 0x0F	; 15
 b22:	40 5d       	subi	r20, 0xD0	; 208
 b24:	4a 33       	cpi	r20, 0x3A	; 58
 b26:	18 f0       	brcs	.+6      	; 0xb2e <__ultoa_invert+0x7c>
 b28:	49 5d       	subi	r20, 0xD9	; 217
 b2a:	31 fd       	sbrc	r19, 1
 b2c:	40 52       	subi	r20, 0x20	; 32
 b2e:	41 93       	st	Z+, r20
 b30:	02 d0       	rcall	.+4      	; 0xb36 <__ultoa_invert+0x84>
 b32:	a9 f7       	brne	.-22     	; 0xb1e <__ultoa_invert+0x6c>
 b34:	ea cf       	rjmp	.-44     	; 0xb0a <__ultoa_invert+0x58>
 b36:	b4 e0       	ldi	r27, 0x04	; 4
 b38:	a6 95       	lsr	r26
 b3a:	97 95       	ror	r25
 b3c:	87 95       	ror	r24
 b3e:	77 95       	ror	r23
 b40:	67 95       	ror	r22
 b42:	ba 95       	dec	r27
 b44:	c9 f7       	brne	.-14     	; 0xb38 <__ultoa_invert+0x86>
 b46:	00 97       	sbiw	r24, 0x00	; 0
 b48:	61 05       	cpc	r22, r1
 b4a:	71 05       	cpc	r23, r1
 b4c:	08 95       	ret
 b4e:	9b 01       	movw	r18, r22
 b50:	ac 01       	movw	r20, r24
 b52:	0a 2e       	mov	r0, r26
 b54:	06 94       	lsr	r0
 b56:	57 95       	ror	r21
 b58:	47 95       	ror	r20
 b5a:	37 95       	ror	r19
 b5c:	27 95       	ror	r18
 b5e:	ba 95       	dec	r27
 b60:	c9 f7       	brne	.-14     	; 0xb54 <__ultoa_invert+0xa2>
 b62:	62 0f       	add	r22, r18
 b64:	73 1f       	adc	r23, r19
 b66:	84 1f       	adc	r24, r20
 b68:	95 1f       	adc	r25, r21
 b6a:	a0 1d       	adc	r26, r0
 b6c:	08 95       	ret

00000b6e <__divmodsi4>:
 b6e:	05 2e       	mov	r0, r21
 b70:	97 fb       	bst	r25, 7
 b72:	1e f4       	brtc	.+6      	; 0xb7a <__divmodsi4+0xc>
 b74:	00 94       	com	r0
 b76:	0e 94 ce 05 	call	0xb9c	; 0xb9c <__negsi2>
 b7a:	57 fd       	sbrc	r21, 7
 b7c:	07 d0       	rcall	.+14     	; 0xb8c <__divmodsi4_neg2>
 b7e:	0e 94 20 06 	call	0xc40	; 0xc40 <__udivmodsi4>
 b82:	07 fc       	sbrc	r0, 7
 b84:	03 d0       	rcall	.+6      	; 0xb8c <__divmodsi4_neg2>
 b86:	4e f4       	brtc	.+18     	; 0xb9a <__divmodsi4_exit>
 b88:	0c 94 ce 05 	jmp	0xb9c	; 0xb9c <__negsi2>

00000b8c <__divmodsi4_neg2>:
 b8c:	50 95       	com	r21
 b8e:	40 95       	com	r20
 b90:	30 95       	com	r19
 b92:	21 95       	neg	r18
 b94:	3f 4f       	sbci	r19, 0xFF	; 255
 b96:	4f 4f       	sbci	r20, 0xFF	; 255
 b98:	5f 4f       	sbci	r21, 0xFF	; 255

00000b9a <__divmodsi4_exit>:
 b9a:	08 95       	ret

00000b9c <__negsi2>:
 b9c:	90 95       	com	r25
 b9e:	80 95       	com	r24
 ba0:	70 95       	com	r23
 ba2:	61 95       	neg	r22
 ba4:	7f 4f       	sbci	r23, 0xFF	; 255
 ba6:	8f 4f       	sbci	r24, 0xFF	; 255
 ba8:	9f 4f       	sbci	r25, 0xFF	; 255
 baa:	08 95       	ret

00000bac <__muluhisi3>:
 bac:	0e 94 42 06 	call	0xc84	; 0xc84 <__umulhisi3>
 bb0:	a5 9f       	mul	r26, r21
 bb2:	90 0d       	add	r25, r0
 bb4:	b4 9f       	mul	r27, r20
 bb6:	90 0d       	add	r25, r0
 bb8:	a4 9f       	mul	r26, r20
 bba:	80 0d       	add	r24, r0
 bbc:	91 1d       	adc	r25, r1
 bbe:	11 24       	eor	r1, r1
 bc0:	08 95       	ret

00000bc2 <__mulshisi3>:
 bc2:	b7 ff       	sbrs	r27, 7
 bc4:	0c 94 d6 05 	jmp	0xbac	; 0xbac <__muluhisi3>

00000bc8 <__mulohisi3>:
 bc8:	0e 94 d6 05 	call	0xbac	; 0xbac <__muluhisi3>
 bcc:	82 1b       	sub	r24, r18
 bce:	93 0b       	sbc	r25, r19
 bd0:	08 95       	ret

00000bd2 <__prologue_saves__>:
 bd2:	2f 92       	push	r2
 bd4:	3f 92       	push	r3
 bd6:	4f 92       	push	r4
 bd8:	5f 92       	push	r5
 bda:	6f 92       	push	r6
 bdc:	7f 92       	push	r7
 bde:	8f 92       	push	r8
 be0:	9f 92       	push	r9
 be2:	af 92       	push	r10
 be4:	bf 92       	push	r11
 be6:	cf 92       	push	r12
 be8:	df 92       	push	r13
 bea:	ef 92       	push	r14
 bec:	ff 92       	push	r15
 bee:	0f 93       	push	r16
 bf0:	1f 93       	push	r17
 bf2:	cf 93       	push	r28
 bf4:	df 93       	push	r29
 bf6:	cd b7       	in	r28, 0x3d	; 61
 bf8:	de b7       	in	r29, 0x3e	; 62
 bfa:	ca 1b       	sub	r28, r26
 bfc:	db 0b       	sbc	r29, r27
 bfe:	0f b6       	in	r0, 0x3f	; 63
 c00:	f8 94       	cli
 c02:	de bf       	out	0x3e, r29	; 62
 c04:	0f be       	out	0x3f, r0	; 63
 c06:	cd bf       	out	0x3d, r28	; 61
 c08:	09 94       	ijmp

00000c0a <__epilogue_restores__>:
 c0a:	2a 88       	ldd	r2, Y+18	; 0x12
 c0c:	39 88       	ldd	r3, Y+17	; 0x11
 c0e:	48 88       	ldd	r4, Y+16	; 0x10
 c10:	5f 84       	ldd	r5, Y+15	; 0x0f
 c12:	6e 84       	ldd	r6, Y+14	; 0x0e
 c14:	7d 84       	ldd	r7, Y+13	; 0x0d
 c16:	8c 84       	ldd	r8, Y+12	; 0x0c
 c18:	9b 84       	ldd	r9, Y+11	; 0x0b
 c1a:	aa 84       	ldd	r10, Y+10	; 0x0a
 c1c:	b9 84       	ldd	r11, Y+9	; 0x09
 c1e:	c8 84       	ldd	r12, Y+8	; 0x08
 c20:	df 80       	ldd	r13, Y+7	; 0x07
 c22:	ee 80       	ldd	r14, Y+6	; 0x06
 c24:	fd 80       	ldd	r15, Y+5	; 0x05
 c26:	0c 81       	ldd	r16, Y+4	; 0x04
 c28:	1b 81       	ldd	r17, Y+3	; 0x03
 c2a:	aa 81       	ldd	r26, Y+2	; 0x02
 c2c:	b9 81       	ldd	r27, Y+1	; 0x01
 c2e:	ce 0f       	add	r28, r30
 c30:	d1 1d       	adc	r29, r1
 c32:	0f b6       	in	r0, 0x3f	; 63
 c34:	f8 94       	cli
 c36:	de bf       	out	0x3e, r29	; 62
 c38:	0f be       	out	0x3f, r0	; 63
 c3a:	cd bf       	out	0x3d, r28	; 61
 c3c:	ed 01       	movw	r28, r26
 c3e:	08 95       	ret

00000c40 <__udivmodsi4>:
 c40:	a1 e2       	ldi	r26, 0x21	; 33
 c42:	1a 2e       	mov	r1, r26
 c44:	aa 1b       	sub	r26, r26
 c46:	bb 1b       	sub	r27, r27
 c48:	fd 01       	movw	r30, r26
 c4a:	0d c0       	rjmp	.+26     	; 0xc66 <__udivmodsi4_ep>

00000c4c <__udivmodsi4_loop>:
 c4c:	aa 1f       	adc	r26, r26
 c4e:	bb 1f       	adc	r27, r27
 c50:	ee 1f       	adc	r30, r30
 c52:	ff 1f       	adc	r31, r31
 c54:	a2 17       	cp	r26, r18
 c56:	b3 07       	cpc	r27, r19
 c58:	e4 07       	cpc	r30, r20
 c5a:	f5 07       	cpc	r31, r21
 c5c:	20 f0       	brcs	.+8      	; 0xc66 <__udivmodsi4_ep>
 c5e:	a2 1b       	sub	r26, r18
 c60:	b3 0b       	sbc	r27, r19
 c62:	e4 0b       	sbc	r30, r20
 c64:	f5 0b       	sbc	r31, r21

00000c66 <__udivmodsi4_ep>:
 c66:	66 1f       	adc	r22, r22
 c68:	77 1f       	adc	r23, r23
 c6a:	88 1f       	adc	r24, r24
 c6c:	99 1f       	adc	r25, r25
 c6e:	1a 94       	dec	r1
 c70:	69 f7       	brne	.-38     	; 0xc4c <__udivmodsi4_loop>
 c72:	60 95       	com	r22
 c74:	70 95       	com	r23
 c76:	80 95       	com	r24
 c78:	90 95       	com	r25
 c7a:	9b 01       	movw	r18, r22
 c7c:	ac 01       	movw	r20, r24
 c7e:	bd 01       	movw	r22, r26
 c80:	cf 01       	movw	r24, r30
 c82:	08 95       	ret

00000c84 <__umulhisi3>:
 c84:	a2 9f       	mul	r26, r18
 c86:	b0 01       	movw	r22, r0
 c88:	b3 9f       	mul	r27, r19
 c8a:	c0 01       	movw	r24, r0
 c8c:	a3 9f       	mul	r26, r19
 c8e:	70 0d       	add	r23, r0
 c90:	81 1d       	adc	r24, r1
 c92:	11 24       	eor	r1, r1
 c94:	91 1d       	adc	r25, r1
 c96:	b2 9f       	mul	r27, r18
 c98:	70 0d       	add	r23, r0
 c9a:	81 1d       	adc	r24, r1
 c9c:	11 24       	eor	r1, r1
 c9e:	91 1d       	adc	r25, r1
 ca0:	08 95       	ret

00000ca2 <_exit>:
 ca2:	f8 94       	cli

00000ca4 <__stop_program>:
 ca4:	ff cf       	rjmp	.-2      	; 0xca4 <__stop_program>
