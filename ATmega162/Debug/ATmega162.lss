
ATmega162.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002c  00800100  00000a8c  00000b20  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a8c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000e  0080012c  0080012c  00000b4c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000b4c  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000100  00000000  00000000  00000ba8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000009dc  00000000  00000000  00000ca8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000073d  00000000  00000000  00001684  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000064b  00000000  00000000  00001dc1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001bc  00000000  00000000  0000240c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000036b  00000000  00000000  000025c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000460  00000000  00000000  00002933  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000b0  00000000  00000000  00002d93  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ec e8       	ldi	r30, 0x8C	; 140
  84:	fa e0       	ldi	r31, 0x0A	; 10
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	ac 32       	cpi	r26, 0x2C	; 44
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	ac e2       	ldi	r26, 0x2C	; 44
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	aa 33       	cpi	r26, 0x3A	; 58
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 cd 00 	call	0x19a	; 0x19a <main>
  a6:	0c 94 44 05 	jmp	0xa88	; 0xa88 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <ADC_init>:
#include "../memory_mapping.h"
#include <avr/io.h>

int ADC_init(void)
{
	set_bit(MCUCR, SRE);
  ae:	85 b7       	in	r24, 0x35	; 53
  b0:	80 68       	ori	r24, 0x80	; 128
  b2:	85 bf       	out	0x35, r24	; 53
	set_bit(SFIOR, XMM2);
  b4:	80 b7       	in	r24, 0x30	; 48
  b6:	80 62       	ori	r24, 0x20	; 32
  b8:	80 bf       	out	0x30, r24	; 48
	
	// Set the interrupt pin to input
	clear_bit(DDRD, PD3);
  ba:	8b 98       	cbi	0x11, 3	; 17
	return 0;
}
  bc:	80 e0       	ldi	r24, 0x00	; 0
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	08 95       	ret

000000c2 <ADC_read>:

uint8_t ADC_read(uint8_t channel)
{
	volatile uint8_t *ext_adc = (uint8_t *) ADC_DATA_ADDRESS; // Start address for the ADC
	
	if (channel > 3){ return 0; }
  c2:	84 30       	cpi	r24, 0x04	; 4
  c4:	40 f4       	brcc	.+16     	; 0xd6 <ADC_read+0x14>
	*ext_adc = 0x04 | channel; // bitwise OR
  c6:	84 60       	ori	r24, 0x04	; 4
  c8:	80 93 00 14 	sts	0x1400, r24
	
	// wait until interrupt is low, which means we can read the converted data
	loop_until_bit_is_clear(PIND, PD3);
  cc:	83 99       	sbic	0x10, 3	; 16
  ce:	fe cf       	rjmp	.-4      	; 0xcc <ADC_read+0xa>
	
	return *ext_adc;
  d0:	80 91 00 14 	lds	r24, 0x1400
  d4:	08 95       	ret

uint8_t ADC_read(uint8_t channel)
{
	volatile uint8_t *ext_adc = (uint8_t *) ADC_DATA_ADDRESS; // Start address for the ADC
	
	if (channel > 3){ return 0; }
  d6:	80 e0       	ldi	r24, 0x00	; 0
	// wait until interrupt is low, which means we can read the converted data
	loop_until_bit_is_clear(PIND, PD3);
	
	return *ext_adc;
	
}
  d8:	08 95       	ret

000000da <JOY_button>:
void JOY_calibrate( void ){
	neutral_pos = JOY_read_adc();
}

int JOY_button(){
	return !(test_bit(PINB, PINB0));
  da:	96 b3       	in	r25, 0x16	; 22
  dc:	81 e0       	ldi	r24, 0x01	; 1
  de:	89 27       	eor	r24, r25
}
  e0:	81 70       	andi	r24, 0x01	; 1
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	08 95       	ret

000000e6 <JOY_read_adc>:

JOY_position_t JOY_read_adc( void ){
  e6:	cf 93       	push	r28
	JOY_position_t pos;
	pos.y = ADC_read(Y_POS_CHANNEL);
  e8:	80 e0       	ldi	r24, 0x00	; 0
  ea:	0e 94 61 00 	call	0xc2	; 0xc2 <ADC_read>
  ee:	c8 2f       	mov	r28, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  f0:	8c ec       	ldi	r24, 0xCC	; 204
  f2:	94 e0       	ldi	r25, 0x04	; 4
  f4:	01 97       	sbiw	r24, 0x01	; 1
  f6:	f1 f7       	brne	.-4      	; 0xf4 <JOY_read_adc+0xe>
  f8:	00 c0       	rjmp	.+0      	; 0xfa <JOY_read_adc+0x14>
  fa:	00 00       	nop
	_delay_ms(1);
	pos.x = ADC_read(X_POS_CHANNEL);
  fc:	81 e0       	ldi	r24, 0x01	; 1
  fe:	0e 94 61 00 	call	0xc2	; 0xc2 <ADC_read>
 102:	28 2f       	mov	r18, r24
	
	return pos;
 104:	6c 2f       	mov	r22, r28
 106:	70 e0       	ldi	r23, 0x00	; 0
 108:	82 2f       	mov	r24, r18
 10a:	90 e0       	ldi	r25, 0x00	; 0
}
 10c:	cf 91       	pop	r28
 10e:	08 95       	ret

00000110 <JOY_calibrate>:
	set_bit(PORTB, PB0);
	
}

void JOY_calibrate( void ){
	neutral_pos = JOY_read_adc();
 110:	0e 94 73 00 	call	0xe6	; 0xe6 <JOY_read_adc>
 114:	60 93 2c 01 	sts	0x012C, r22
 118:	70 93 2d 01 	sts	0x012D, r23
 11c:	80 93 2e 01 	sts	0x012E, r24
 120:	90 93 2f 01 	sts	0x012F, r25
 124:	08 95       	ret

00000126 <JOY_init>:

JOY_position_t neutral_pos; 


void JOY_init( void ){
	JOY_calibrate();
 126:	0e 94 88 00 	call	0x110	; 0x110 <JOY_calibrate>
	
	// Initialize PORT B, pin 0 (joystick button) as input
	clear_bit(DDRB, PINB0);
 12a:	b8 98       	cbi	0x17, 0	; 23
	
	// Activate pull-up resistor for joystick button
	set_bit(PORTB, PB0);
 12c:	c0 9a       	sbi	0x18, 0	; 24
 12e:	08 95       	ret

00000130 <TOUCH_init>:
#include <util/delay.h>

void TOUCH_init( void ){
	
	// Initialize PORT B, pin 0, 1 and 2 as input
	clear_bit(DDRB, PINB1);
 130:	b9 98       	cbi	0x17, 1	; 23
	clear_bit(DDRB, PINB2);
 132:	ba 98       	cbi	0x17, 2	; 23
 134:	08 95       	ret

00000136 <TOUCH_read_adc>:
		return 0;
	}
	return 0;
}

TOUCH_slider_pos_t TOUCH_read_adc( void ){
 136:	cf 93       	push	r28
	TOUCH_slider_pos_t pos;
	pos.left_slider = ADC_read(LEFT_SLIDER_CHANNEL);
 138:	83 e0       	ldi	r24, 0x03	; 3
 13a:	0e 94 61 00 	call	0xc2	; 0xc2 <ADC_read>
 13e:	c8 2f       	mov	r28, r24
 140:	8c ec       	ldi	r24, 0xCC	; 204
 142:	94 e0       	ldi	r25, 0x04	; 4
 144:	01 97       	sbiw	r24, 0x01	; 1
 146:	f1 f7       	brne	.-4      	; 0x144 <TOUCH_read_adc+0xe>
 148:	00 c0       	rjmp	.+0      	; 0x14a <TOUCH_read_adc+0x14>
 14a:	00 00       	nop
	_delay_ms(1);
	pos.right_slider = ADC_read(RIGHT_SLIDER_CHANNEL);
 14c:	82 e0       	ldi	r24, 0x02	; 2
 14e:	0e 94 61 00 	call	0xc2	; 0xc2 <ADC_read>
 152:	28 2f       	mov	r18, r24
	
	return pos;
 154:	6c 2f       	mov	r22, r28
 156:	70 e0       	ldi	r23, 0x00	; 0
 158:	82 2f       	mov	r24, r18
 15a:	90 e0       	ldi	r25, 0x00	; 0
}
 15c:	cf 91       	pop	r28
 15e:	08 95       	ret

00000160 <TOUCH_get_slider_position>:

TOUCH_slider_pos_t TOUCH_get_slider_position(){
	TOUCH_slider_pos_t current_pos = TOUCH_read_adc();
 160:	0e 94 9b 00 	call	0x136	; 0x136 <TOUCH_read_adc>
	return current_pos;
 164:	08 95       	ret

00000166 <UART_Transmit>:

// transmit data
void UART_Transmit (unsigned char data)
{
	// Wait for empty transmit buffer
	while (!( UCSR0A & (1<<UDRE0))); 
 166:	5d 9b       	sbis	0x0b, 5	; 11
 168:	fe cf       	rjmp	.-4      	; 0x166 <UART_Transmit>
	
	// Put data into buffer, sends the data
	UDR0 = data;  
 16a:	8c b9       	out	0x0c, r24	; 12
 16c:	08 95       	ret

0000016e <UART_Recieve>:

// function to receive data
unsigned char UART_Recieve (void)
{
	//Wait for data to be received
	while(!(UCSR0A) & (1<<RXC0));  
 16e:	8b b1       	in	r24, 0x0b	; 11
	
	//Get and return received data from buffer
	return UDR0;  
 170:	8c b1       	in	r24, 0x0c	; 12
 172:	08 95       	ret

00000174 <UART_Init>:

void UART_Init( unsigned int ubrr ){
	/* 
	Set baud rate
	 */
	UBRR0H |= (unsigned char)(ubrr>>8);
 174:	20 b5       	in	r18, 0x20	; 32
 176:	92 2b       	or	r25, r18
 178:	90 bd       	out	0x20, r25	; 32
	UBRR0L |= (unsigned char)ubrr;
 17a:	99 b1       	in	r25, 0x09	; 9
 17c:	89 2b       	or	r24, r25
 17e:	89 b9       	out	0x09, r24	; 9
	/* 
	Enable receiver and transmitter
	 */
	UCSR0B |= (1<<RXEN0)|(1<<TXEN0);
 180:	8a b1       	in	r24, 0x0a	; 10
 182:	88 61       	ori	r24, 0x18	; 24
 184:	8a b9       	out	0x0a, r24	; 10
	/* 
	Set frame format: 8data, 2stop bit
	 */
	UCSR0C |= (1<<URSEL0)|(1<<USBS0)|(1<<UCSZ00)|(1<<UCSZ01);
 186:	80 b5       	in	r24, 0x20	; 32
 188:	8e 68       	ori	r24, 0x8E	; 142
 18a:	80 bd       	out	0x20, r24	; 32
	
	fdevopen(&UART_Transmit, &UART_Recieve);
 18c:	67 eb       	ldi	r22, 0xB7	; 183
 18e:	70 e0       	ldi	r23, 0x00	; 0
 190:	83 eb       	ldi	r24, 0xB3	; 179
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <fdevopen>
 198:	08 95       	ret

0000019a <main>:
#include <util/delay.h>
//#include <stdio.h>

int main( void ){
	
	UART_Init( MYUBRR );
 19a:	8f e1       	ldi	r24, 0x1F	; 31
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	0e 94 ba 00 	call	0x174	; 0x174 <UART_Init>
	ADC_init();
 1a2:	0e 94 57 00 	call	0xae	; 0xae <ADC_init>
	JOY_init();
 1a6:	0e 94 93 00 	call	0x126	; 0x126 <JOY_init>
	TOUCH_init();
 1aa:	0e 94 98 00 	call	0x130	; 0x130 <TOUCH_init>
		button = JOY_button();
		//test = JOY_get_direction();
		slider = TOUCH_get_slider_position();
		//printf("Button pressed: %d \n",button);
		//printf("Button pressed: %d, \t Direction: %d \n",button, test);
		printf("Slider left: %d \t Slider right: %d \n",slider.left_slider, slider.right_slider);
 1ae:	c6 e0       	ldi	r28, 0x06	; 6
 1b0:	d1 e0       	ldi	r29, 0x01	; 1
		//}
	
	//OLED_clear_line( 4 );
	while (1)
	{	
		button = JOY_button();
 1b2:	0e 94 6d 00 	call	0xda	; 0xda <JOY_button>
		//test = JOY_get_direction();
		slider = TOUCH_get_slider_position();
 1b6:	0e 94 b0 00 	call	0x160	; 0x160 <TOUCH_get_slider_position>
		//printf("Button pressed: %d \n",button);
		//printf("Button pressed: %d, \t Direction: %d \n",button, test);
		printf("Slider left: %d \t Slider right: %d \n",slider.left_slider, slider.right_slider);
 1ba:	9f 93       	push	r25
 1bc:	8f 93       	push	r24
 1be:	7f 93       	push	r23
 1c0:	6f 93       	push	r22
 1c2:	df 93       	push	r29
 1c4:	cf 93       	push	r28
 1c6:	0e 94 37 01 	call	0x26e	; 0x26e <printf>
 1ca:	0f 90       	pop	r0
 1cc:	0f 90       	pop	r0
 1ce:	0f 90       	pop	r0
 1d0:	0f 90       	pop	r0
 1d2:	0f 90       	pop	r0
 1d4:	0f 90       	pop	r0
 1d6:	ed cf       	rjmp	.-38     	; 0x1b2 <main+0x18>

000001d8 <fdevopen>:
 1d8:	0f 93       	push	r16
 1da:	1f 93       	push	r17
 1dc:	cf 93       	push	r28
 1de:	df 93       	push	r29
 1e0:	ec 01       	movw	r28, r24
 1e2:	8b 01       	movw	r16, r22
 1e4:	00 97       	sbiw	r24, 0x00	; 0
 1e6:	31 f4       	brne	.+12     	; 0x1f4 <fdevopen+0x1c>
 1e8:	61 15       	cp	r22, r1
 1ea:	71 05       	cpc	r23, r1
 1ec:	19 f4       	brne	.+6      	; 0x1f4 <fdevopen+0x1c>
 1ee:	80 e0       	ldi	r24, 0x00	; 0
 1f0:	90 e0       	ldi	r25, 0x00	; 0
 1f2:	38 c0       	rjmp	.+112    	; 0x264 <fdevopen+0x8c>
 1f4:	6e e0       	ldi	r22, 0x0E	; 14
 1f6:	70 e0       	ldi	r23, 0x00	; 0
 1f8:	81 e0       	ldi	r24, 0x01	; 1
 1fa:	90 e0       	ldi	r25, 0x00	; 0
 1fc:	0e 94 1d 03 	call	0x63a	; 0x63a <calloc>
 200:	fc 01       	movw	r30, r24
 202:	00 97       	sbiw	r24, 0x00	; 0
 204:	a1 f3       	breq	.-24     	; 0x1ee <fdevopen+0x16>
 206:	80 e8       	ldi	r24, 0x80	; 128
 208:	83 83       	std	Z+3, r24	; 0x03
 20a:	01 15       	cp	r16, r1
 20c:	11 05       	cpc	r17, r1
 20e:	71 f0       	breq	.+28     	; 0x22c <fdevopen+0x54>
 210:	13 87       	std	Z+11, r17	; 0x0b
 212:	02 87       	std	Z+10, r16	; 0x0a
 214:	81 e8       	ldi	r24, 0x81	; 129
 216:	83 83       	std	Z+3, r24	; 0x03
 218:	80 91 30 01 	lds	r24, 0x0130
 21c:	90 91 31 01 	lds	r25, 0x0131
 220:	89 2b       	or	r24, r25
 222:	21 f4       	brne	.+8      	; 0x22c <fdevopen+0x54>
 224:	f0 93 31 01 	sts	0x0131, r31
 228:	e0 93 30 01 	sts	0x0130, r30
 22c:	20 97       	sbiw	r28, 0x00	; 0
 22e:	c9 f0       	breq	.+50     	; 0x262 <fdevopen+0x8a>
 230:	d1 87       	std	Z+9, r29	; 0x09
 232:	c0 87       	std	Z+8, r28	; 0x08
 234:	83 81       	ldd	r24, Z+3	; 0x03
 236:	82 60       	ori	r24, 0x02	; 2
 238:	83 83       	std	Z+3, r24	; 0x03
 23a:	80 91 32 01 	lds	r24, 0x0132
 23e:	90 91 33 01 	lds	r25, 0x0133
 242:	89 2b       	or	r24, r25
 244:	71 f4       	brne	.+28     	; 0x262 <fdevopen+0x8a>
 246:	f0 93 33 01 	sts	0x0133, r31
 24a:	e0 93 32 01 	sts	0x0132, r30
 24e:	80 91 34 01 	lds	r24, 0x0134
 252:	90 91 35 01 	lds	r25, 0x0135
 256:	89 2b       	or	r24, r25
 258:	21 f4       	brne	.+8      	; 0x262 <fdevopen+0x8a>
 25a:	f0 93 35 01 	sts	0x0135, r31
 25e:	e0 93 34 01 	sts	0x0134, r30
 262:	cf 01       	movw	r24, r30
 264:	df 91       	pop	r29
 266:	cf 91       	pop	r28
 268:	1f 91       	pop	r17
 26a:	0f 91       	pop	r16
 26c:	08 95       	ret

0000026e <printf>:
 26e:	a0 e0       	ldi	r26, 0x00	; 0
 270:	b0 e0       	ldi	r27, 0x00	; 0
 272:	ed e3       	ldi	r30, 0x3D	; 61
 274:	f1 e0       	ldi	r31, 0x01	; 1
 276:	0c 94 1d 05 	jmp	0xa3a	; 0xa3a <__prologue_saves__+0x20>
 27a:	fe 01       	movw	r30, r28
 27c:	35 96       	adiw	r30, 0x05	; 5
 27e:	61 91       	ld	r22, Z+
 280:	71 91       	ld	r23, Z+
 282:	af 01       	movw	r20, r30
 284:	80 91 32 01 	lds	r24, 0x0132
 288:	90 91 33 01 	lds	r25, 0x0133
 28c:	0e 94 4b 01 	call	0x296	; 0x296 <vfprintf>
 290:	e2 e0       	ldi	r30, 0x02	; 2
 292:	0c 94 39 05 	jmp	0xa72	; 0xa72 <__epilogue_restores__+0x20>

00000296 <vfprintf>:
 296:	ac e0       	ldi	r26, 0x0C	; 12
 298:	b0 e0       	ldi	r27, 0x00	; 0
 29a:	e1 e5       	ldi	r30, 0x51	; 81
 29c:	f1 e0       	ldi	r31, 0x01	; 1
 29e:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__prologue_saves__>
 2a2:	7c 01       	movw	r14, r24
 2a4:	6b 01       	movw	r12, r22
 2a6:	8a 01       	movw	r16, r20
 2a8:	fc 01       	movw	r30, r24
 2aa:	17 82       	std	Z+7, r1	; 0x07
 2ac:	16 82       	std	Z+6, r1	; 0x06
 2ae:	83 81       	ldd	r24, Z+3	; 0x03
 2b0:	81 ff       	sbrs	r24, 1
 2b2:	bd c1       	rjmp	.+890    	; 0x62e <__stack+0x12f>
 2b4:	ce 01       	movw	r24, r28
 2b6:	01 96       	adiw	r24, 0x01	; 1
 2b8:	4c 01       	movw	r8, r24
 2ba:	f7 01       	movw	r30, r14
 2bc:	93 81       	ldd	r25, Z+3	; 0x03
 2be:	f6 01       	movw	r30, r12
 2c0:	93 fd       	sbrc	r25, 3
 2c2:	85 91       	lpm	r24, Z+
 2c4:	93 ff       	sbrs	r25, 3
 2c6:	81 91       	ld	r24, Z+
 2c8:	6f 01       	movw	r12, r30
 2ca:	88 23       	and	r24, r24
 2cc:	09 f4       	brne	.+2      	; 0x2d0 <vfprintf+0x3a>
 2ce:	ab c1       	rjmp	.+854    	; 0x626 <__stack+0x127>
 2d0:	85 32       	cpi	r24, 0x25	; 37
 2d2:	39 f4       	brne	.+14     	; 0x2e2 <vfprintf+0x4c>
 2d4:	93 fd       	sbrc	r25, 3
 2d6:	85 91       	lpm	r24, Z+
 2d8:	93 ff       	sbrs	r25, 3
 2da:	81 91       	ld	r24, Z+
 2dc:	6f 01       	movw	r12, r30
 2de:	85 32       	cpi	r24, 0x25	; 37
 2e0:	29 f4       	brne	.+10     	; 0x2ec <vfprintf+0x56>
 2e2:	b7 01       	movw	r22, r14
 2e4:	90 e0       	ldi	r25, 0x00	; 0
 2e6:	0e 94 7d 04 	call	0x8fa	; 0x8fa <fputc>
 2ea:	e7 cf       	rjmp	.-50     	; 0x2ba <vfprintf+0x24>
 2ec:	51 2c       	mov	r5, r1
 2ee:	31 2c       	mov	r3, r1
 2f0:	20 e0       	ldi	r18, 0x00	; 0
 2f2:	20 32       	cpi	r18, 0x20	; 32
 2f4:	a0 f4       	brcc	.+40     	; 0x31e <vfprintf+0x88>
 2f6:	8b 32       	cpi	r24, 0x2B	; 43
 2f8:	69 f0       	breq	.+26     	; 0x314 <vfprintf+0x7e>
 2fa:	30 f4       	brcc	.+12     	; 0x308 <vfprintf+0x72>
 2fc:	80 32       	cpi	r24, 0x20	; 32
 2fe:	59 f0       	breq	.+22     	; 0x316 <vfprintf+0x80>
 300:	83 32       	cpi	r24, 0x23	; 35
 302:	69 f4       	brne	.+26     	; 0x31e <vfprintf+0x88>
 304:	20 61       	ori	r18, 0x10	; 16
 306:	2c c0       	rjmp	.+88     	; 0x360 <vfprintf+0xca>
 308:	8d 32       	cpi	r24, 0x2D	; 45
 30a:	39 f0       	breq	.+14     	; 0x31a <vfprintf+0x84>
 30c:	80 33       	cpi	r24, 0x30	; 48
 30e:	39 f4       	brne	.+14     	; 0x31e <vfprintf+0x88>
 310:	21 60       	ori	r18, 0x01	; 1
 312:	26 c0       	rjmp	.+76     	; 0x360 <vfprintf+0xca>
 314:	22 60       	ori	r18, 0x02	; 2
 316:	24 60       	ori	r18, 0x04	; 4
 318:	23 c0       	rjmp	.+70     	; 0x360 <vfprintf+0xca>
 31a:	28 60       	ori	r18, 0x08	; 8
 31c:	21 c0       	rjmp	.+66     	; 0x360 <vfprintf+0xca>
 31e:	27 fd       	sbrc	r18, 7
 320:	27 c0       	rjmp	.+78     	; 0x370 <vfprintf+0xda>
 322:	30 ed       	ldi	r19, 0xD0	; 208
 324:	38 0f       	add	r19, r24
 326:	3a 30       	cpi	r19, 0x0A	; 10
 328:	78 f4       	brcc	.+30     	; 0x348 <vfprintf+0xb2>
 32a:	26 ff       	sbrs	r18, 6
 32c:	06 c0       	rjmp	.+12     	; 0x33a <vfprintf+0xa4>
 32e:	fa e0       	ldi	r31, 0x0A	; 10
 330:	5f 9e       	mul	r5, r31
 332:	30 0d       	add	r19, r0
 334:	11 24       	eor	r1, r1
 336:	53 2e       	mov	r5, r19
 338:	13 c0       	rjmp	.+38     	; 0x360 <vfprintf+0xca>
 33a:	8a e0       	ldi	r24, 0x0A	; 10
 33c:	38 9e       	mul	r3, r24
 33e:	30 0d       	add	r19, r0
 340:	11 24       	eor	r1, r1
 342:	33 2e       	mov	r3, r19
 344:	20 62       	ori	r18, 0x20	; 32
 346:	0c c0       	rjmp	.+24     	; 0x360 <vfprintf+0xca>
 348:	8e 32       	cpi	r24, 0x2E	; 46
 34a:	21 f4       	brne	.+8      	; 0x354 <vfprintf+0xbe>
 34c:	26 fd       	sbrc	r18, 6
 34e:	6b c1       	rjmp	.+726    	; 0x626 <__stack+0x127>
 350:	20 64       	ori	r18, 0x40	; 64
 352:	06 c0       	rjmp	.+12     	; 0x360 <vfprintf+0xca>
 354:	8c 36       	cpi	r24, 0x6C	; 108
 356:	11 f4       	brne	.+4      	; 0x35c <vfprintf+0xc6>
 358:	20 68       	ori	r18, 0x80	; 128
 35a:	02 c0       	rjmp	.+4      	; 0x360 <vfprintf+0xca>
 35c:	88 36       	cpi	r24, 0x68	; 104
 35e:	41 f4       	brne	.+16     	; 0x370 <vfprintf+0xda>
 360:	f6 01       	movw	r30, r12
 362:	93 fd       	sbrc	r25, 3
 364:	85 91       	lpm	r24, Z+
 366:	93 ff       	sbrs	r25, 3
 368:	81 91       	ld	r24, Z+
 36a:	6f 01       	movw	r12, r30
 36c:	81 11       	cpse	r24, r1
 36e:	c1 cf       	rjmp	.-126    	; 0x2f2 <vfprintf+0x5c>
 370:	98 2f       	mov	r25, r24
 372:	9f 7d       	andi	r25, 0xDF	; 223
 374:	95 54       	subi	r25, 0x45	; 69
 376:	93 30       	cpi	r25, 0x03	; 3
 378:	28 f4       	brcc	.+10     	; 0x384 <vfprintf+0xee>
 37a:	0c 5f       	subi	r16, 0xFC	; 252
 37c:	1f 4f       	sbci	r17, 0xFF	; 255
 37e:	ff e3       	ldi	r31, 0x3F	; 63
 380:	f9 83       	std	Y+1, r31	; 0x01
 382:	0d c0       	rjmp	.+26     	; 0x39e <vfprintf+0x108>
 384:	83 36       	cpi	r24, 0x63	; 99
 386:	31 f0       	breq	.+12     	; 0x394 <vfprintf+0xfe>
 388:	83 37       	cpi	r24, 0x73	; 115
 38a:	71 f0       	breq	.+28     	; 0x3a8 <vfprintf+0x112>
 38c:	83 35       	cpi	r24, 0x53	; 83
 38e:	09 f0       	breq	.+2      	; 0x392 <vfprintf+0xfc>
 390:	5b c0       	rjmp	.+182    	; 0x448 <vfprintf+0x1b2>
 392:	22 c0       	rjmp	.+68     	; 0x3d8 <vfprintf+0x142>
 394:	f8 01       	movw	r30, r16
 396:	80 81       	ld	r24, Z
 398:	89 83       	std	Y+1, r24	; 0x01
 39a:	0e 5f       	subi	r16, 0xFE	; 254
 39c:	1f 4f       	sbci	r17, 0xFF	; 255
 39e:	44 24       	eor	r4, r4
 3a0:	43 94       	inc	r4
 3a2:	51 2c       	mov	r5, r1
 3a4:	54 01       	movw	r10, r8
 3a6:	15 c0       	rjmp	.+42     	; 0x3d2 <vfprintf+0x13c>
 3a8:	38 01       	movw	r6, r16
 3aa:	f2 e0       	ldi	r31, 0x02	; 2
 3ac:	6f 0e       	add	r6, r31
 3ae:	71 1c       	adc	r7, r1
 3b0:	f8 01       	movw	r30, r16
 3b2:	a0 80       	ld	r10, Z
 3b4:	b1 80       	ldd	r11, Z+1	; 0x01
 3b6:	26 ff       	sbrs	r18, 6
 3b8:	03 c0       	rjmp	.+6      	; 0x3c0 <vfprintf+0x12a>
 3ba:	65 2d       	mov	r22, r5
 3bc:	70 e0       	ldi	r23, 0x00	; 0
 3be:	02 c0       	rjmp	.+4      	; 0x3c4 <vfprintf+0x12e>
 3c0:	6f ef       	ldi	r22, 0xFF	; 255
 3c2:	7f ef       	ldi	r23, 0xFF	; 255
 3c4:	c5 01       	movw	r24, r10
 3c6:	2c 87       	std	Y+12, r18	; 0x0c
 3c8:	0e 94 72 04 	call	0x8e4	; 0x8e4 <strnlen>
 3cc:	2c 01       	movw	r4, r24
 3ce:	83 01       	movw	r16, r6
 3d0:	2c 85       	ldd	r18, Y+12	; 0x0c
 3d2:	2f 77       	andi	r18, 0x7F	; 127
 3d4:	22 2e       	mov	r2, r18
 3d6:	17 c0       	rjmp	.+46     	; 0x406 <vfprintf+0x170>
 3d8:	38 01       	movw	r6, r16
 3da:	f2 e0       	ldi	r31, 0x02	; 2
 3dc:	6f 0e       	add	r6, r31
 3de:	71 1c       	adc	r7, r1
 3e0:	f8 01       	movw	r30, r16
 3e2:	a0 80       	ld	r10, Z
 3e4:	b1 80       	ldd	r11, Z+1	; 0x01
 3e6:	26 ff       	sbrs	r18, 6
 3e8:	03 c0       	rjmp	.+6      	; 0x3f0 <vfprintf+0x15a>
 3ea:	65 2d       	mov	r22, r5
 3ec:	70 e0       	ldi	r23, 0x00	; 0
 3ee:	02 c0       	rjmp	.+4      	; 0x3f4 <vfprintf+0x15e>
 3f0:	6f ef       	ldi	r22, 0xFF	; 255
 3f2:	7f ef       	ldi	r23, 0xFF	; 255
 3f4:	c5 01       	movw	r24, r10
 3f6:	2c 87       	std	Y+12, r18	; 0x0c
 3f8:	0e 94 60 04 	call	0x8c0	; 0x8c0 <strnlen_P>
 3fc:	2c 01       	movw	r4, r24
 3fe:	2c 85       	ldd	r18, Y+12	; 0x0c
 400:	20 68       	ori	r18, 0x80	; 128
 402:	22 2e       	mov	r2, r18
 404:	83 01       	movw	r16, r6
 406:	23 fc       	sbrc	r2, 3
 408:	1b c0       	rjmp	.+54     	; 0x440 <vfprintf+0x1aa>
 40a:	83 2d       	mov	r24, r3
 40c:	90 e0       	ldi	r25, 0x00	; 0
 40e:	48 16       	cp	r4, r24
 410:	59 06       	cpc	r5, r25
 412:	b0 f4       	brcc	.+44     	; 0x440 <vfprintf+0x1aa>
 414:	b7 01       	movw	r22, r14
 416:	80 e2       	ldi	r24, 0x20	; 32
 418:	90 e0       	ldi	r25, 0x00	; 0
 41a:	0e 94 7d 04 	call	0x8fa	; 0x8fa <fputc>
 41e:	3a 94       	dec	r3
 420:	f4 cf       	rjmp	.-24     	; 0x40a <vfprintf+0x174>
 422:	f5 01       	movw	r30, r10
 424:	27 fc       	sbrc	r2, 7
 426:	85 91       	lpm	r24, Z+
 428:	27 fe       	sbrs	r2, 7
 42a:	81 91       	ld	r24, Z+
 42c:	5f 01       	movw	r10, r30
 42e:	b7 01       	movw	r22, r14
 430:	90 e0       	ldi	r25, 0x00	; 0
 432:	0e 94 7d 04 	call	0x8fa	; 0x8fa <fputc>
 436:	31 10       	cpse	r3, r1
 438:	3a 94       	dec	r3
 43a:	f1 e0       	ldi	r31, 0x01	; 1
 43c:	4f 1a       	sub	r4, r31
 43e:	51 08       	sbc	r5, r1
 440:	41 14       	cp	r4, r1
 442:	51 04       	cpc	r5, r1
 444:	71 f7       	brne	.-36     	; 0x422 <vfprintf+0x18c>
 446:	e5 c0       	rjmp	.+458    	; 0x612 <__stack+0x113>
 448:	84 36       	cpi	r24, 0x64	; 100
 44a:	11 f0       	breq	.+4      	; 0x450 <vfprintf+0x1ba>
 44c:	89 36       	cpi	r24, 0x69	; 105
 44e:	39 f5       	brne	.+78     	; 0x49e <vfprintf+0x208>
 450:	f8 01       	movw	r30, r16
 452:	27 ff       	sbrs	r18, 7
 454:	07 c0       	rjmp	.+14     	; 0x464 <vfprintf+0x1ce>
 456:	60 81       	ld	r22, Z
 458:	71 81       	ldd	r23, Z+1	; 0x01
 45a:	82 81       	ldd	r24, Z+2	; 0x02
 45c:	93 81       	ldd	r25, Z+3	; 0x03
 45e:	0c 5f       	subi	r16, 0xFC	; 252
 460:	1f 4f       	sbci	r17, 0xFF	; 255
 462:	08 c0       	rjmp	.+16     	; 0x474 <vfprintf+0x1de>
 464:	60 81       	ld	r22, Z
 466:	71 81       	ldd	r23, Z+1	; 0x01
 468:	88 27       	eor	r24, r24
 46a:	77 fd       	sbrc	r23, 7
 46c:	80 95       	com	r24
 46e:	98 2f       	mov	r25, r24
 470:	0e 5f       	subi	r16, 0xFE	; 254
 472:	1f 4f       	sbci	r17, 0xFF	; 255
 474:	2f 76       	andi	r18, 0x6F	; 111
 476:	b2 2e       	mov	r11, r18
 478:	97 ff       	sbrs	r25, 7
 47a:	09 c0       	rjmp	.+18     	; 0x48e <vfprintf+0x1f8>
 47c:	90 95       	com	r25
 47e:	80 95       	com	r24
 480:	70 95       	com	r23
 482:	61 95       	neg	r22
 484:	7f 4f       	sbci	r23, 0xFF	; 255
 486:	8f 4f       	sbci	r24, 0xFF	; 255
 488:	9f 4f       	sbci	r25, 0xFF	; 255
 48a:	20 68       	ori	r18, 0x80	; 128
 48c:	b2 2e       	mov	r11, r18
 48e:	2a e0       	ldi	r18, 0x0A	; 10
 490:	30 e0       	ldi	r19, 0x00	; 0
 492:	a4 01       	movw	r20, r8
 494:	0e 94 af 04 	call	0x95e	; 0x95e <__ultoa_invert>
 498:	a8 2e       	mov	r10, r24
 49a:	a8 18       	sub	r10, r8
 49c:	44 c0       	rjmp	.+136    	; 0x526 <__stack+0x27>
 49e:	85 37       	cpi	r24, 0x75	; 117
 4a0:	29 f4       	brne	.+10     	; 0x4ac <vfprintf+0x216>
 4a2:	2f 7e       	andi	r18, 0xEF	; 239
 4a4:	b2 2e       	mov	r11, r18
 4a6:	2a e0       	ldi	r18, 0x0A	; 10
 4a8:	30 e0       	ldi	r19, 0x00	; 0
 4aa:	25 c0       	rjmp	.+74     	; 0x4f6 <vfprintf+0x260>
 4ac:	f2 2f       	mov	r31, r18
 4ae:	f9 7f       	andi	r31, 0xF9	; 249
 4b0:	bf 2e       	mov	r11, r31
 4b2:	8f 36       	cpi	r24, 0x6F	; 111
 4b4:	c1 f0       	breq	.+48     	; 0x4e6 <vfprintf+0x250>
 4b6:	18 f4       	brcc	.+6      	; 0x4be <vfprintf+0x228>
 4b8:	88 35       	cpi	r24, 0x58	; 88
 4ba:	79 f0       	breq	.+30     	; 0x4da <vfprintf+0x244>
 4bc:	b4 c0       	rjmp	.+360    	; 0x626 <__stack+0x127>
 4be:	80 37       	cpi	r24, 0x70	; 112
 4c0:	19 f0       	breq	.+6      	; 0x4c8 <vfprintf+0x232>
 4c2:	88 37       	cpi	r24, 0x78	; 120
 4c4:	21 f0       	breq	.+8      	; 0x4ce <vfprintf+0x238>
 4c6:	af c0       	rjmp	.+350    	; 0x626 <__stack+0x127>
 4c8:	2f 2f       	mov	r18, r31
 4ca:	20 61       	ori	r18, 0x10	; 16
 4cc:	b2 2e       	mov	r11, r18
 4ce:	b4 fe       	sbrs	r11, 4
 4d0:	0d c0       	rjmp	.+26     	; 0x4ec <vfprintf+0x256>
 4d2:	8b 2d       	mov	r24, r11
 4d4:	84 60       	ori	r24, 0x04	; 4
 4d6:	b8 2e       	mov	r11, r24
 4d8:	09 c0       	rjmp	.+18     	; 0x4ec <vfprintf+0x256>
 4da:	24 ff       	sbrs	r18, 4
 4dc:	0a c0       	rjmp	.+20     	; 0x4f2 <vfprintf+0x25c>
 4de:	9f 2f       	mov	r25, r31
 4e0:	96 60       	ori	r25, 0x06	; 6
 4e2:	b9 2e       	mov	r11, r25
 4e4:	06 c0       	rjmp	.+12     	; 0x4f2 <vfprintf+0x25c>
 4e6:	28 e0       	ldi	r18, 0x08	; 8
 4e8:	30 e0       	ldi	r19, 0x00	; 0
 4ea:	05 c0       	rjmp	.+10     	; 0x4f6 <vfprintf+0x260>
 4ec:	20 e1       	ldi	r18, 0x10	; 16
 4ee:	30 e0       	ldi	r19, 0x00	; 0
 4f0:	02 c0       	rjmp	.+4      	; 0x4f6 <vfprintf+0x260>
 4f2:	20 e1       	ldi	r18, 0x10	; 16
 4f4:	32 e0       	ldi	r19, 0x02	; 2
 4f6:	f8 01       	movw	r30, r16
 4f8:	b7 fe       	sbrs	r11, 7
 4fa:	07 c0       	rjmp	.+14     	; 0x50a <__stack+0xb>
 4fc:	60 81       	ld	r22, Z
 4fe:	71 81       	ldd	r23, Z+1	; 0x01
 500:	82 81       	ldd	r24, Z+2	; 0x02
 502:	93 81       	ldd	r25, Z+3	; 0x03
 504:	0c 5f       	subi	r16, 0xFC	; 252
 506:	1f 4f       	sbci	r17, 0xFF	; 255
 508:	06 c0       	rjmp	.+12     	; 0x516 <__stack+0x17>
 50a:	60 81       	ld	r22, Z
 50c:	71 81       	ldd	r23, Z+1	; 0x01
 50e:	80 e0       	ldi	r24, 0x00	; 0
 510:	90 e0       	ldi	r25, 0x00	; 0
 512:	0e 5f       	subi	r16, 0xFE	; 254
 514:	1f 4f       	sbci	r17, 0xFF	; 255
 516:	a4 01       	movw	r20, r8
 518:	0e 94 af 04 	call	0x95e	; 0x95e <__ultoa_invert>
 51c:	a8 2e       	mov	r10, r24
 51e:	a8 18       	sub	r10, r8
 520:	fb 2d       	mov	r31, r11
 522:	ff 77       	andi	r31, 0x7F	; 127
 524:	bf 2e       	mov	r11, r31
 526:	b6 fe       	sbrs	r11, 6
 528:	0b c0       	rjmp	.+22     	; 0x540 <__stack+0x41>
 52a:	2b 2d       	mov	r18, r11
 52c:	2e 7f       	andi	r18, 0xFE	; 254
 52e:	a5 14       	cp	r10, r5
 530:	50 f4       	brcc	.+20     	; 0x546 <__stack+0x47>
 532:	b4 fe       	sbrs	r11, 4
 534:	0a c0       	rjmp	.+20     	; 0x54a <__stack+0x4b>
 536:	b2 fc       	sbrc	r11, 2
 538:	08 c0       	rjmp	.+16     	; 0x54a <__stack+0x4b>
 53a:	2b 2d       	mov	r18, r11
 53c:	2e 7e       	andi	r18, 0xEE	; 238
 53e:	05 c0       	rjmp	.+10     	; 0x54a <__stack+0x4b>
 540:	7a 2c       	mov	r7, r10
 542:	2b 2d       	mov	r18, r11
 544:	03 c0       	rjmp	.+6      	; 0x54c <__stack+0x4d>
 546:	7a 2c       	mov	r7, r10
 548:	01 c0       	rjmp	.+2      	; 0x54c <__stack+0x4d>
 54a:	75 2c       	mov	r7, r5
 54c:	24 ff       	sbrs	r18, 4
 54e:	0d c0       	rjmp	.+26     	; 0x56a <__stack+0x6b>
 550:	fe 01       	movw	r30, r28
 552:	ea 0d       	add	r30, r10
 554:	f1 1d       	adc	r31, r1
 556:	80 81       	ld	r24, Z
 558:	80 33       	cpi	r24, 0x30	; 48
 55a:	11 f4       	brne	.+4      	; 0x560 <__stack+0x61>
 55c:	29 7e       	andi	r18, 0xE9	; 233
 55e:	09 c0       	rjmp	.+18     	; 0x572 <__stack+0x73>
 560:	22 ff       	sbrs	r18, 2
 562:	06 c0       	rjmp	.+12     	; 0x570 <__stack+0x71>
 564:	73 94       	inc	r7
 566:	73 94       	inc	r7
 568:	04 c0       	rjmp	.+8      	; 0x572 <__stack+0x73>
 56a:	82 2f       	mov	r24, r18
 56c:	86 78       	andi	r24, 0x86	; 134
 56e:	09 f0       	breq	.+2      	; 0x572 <__stack+0x73>
 570:	73 94       	inc	r7
 572:	23 fd       	sbrc	r18, 3
 574:	13 c0       	rjmp	.+38     	; 0x59c <__stack+0x9d>
 576:	20 ff       	sbrs	r18, 0
 578:	06 c0       	rjmp	.+12     	; 0x586 <__stack+0x87>
 57a:	5a 2c       	mov	r5, r10
 57c:	73 14       	cp	r7, r3
 57e:	18 f4       	brcc	.+6      	; 0x586 <__stack+0x87>
 580:	53 0c       	add	r5, r3
 582:	57 18       	sub	r5, r7
 584:	73 2c       	mov	r7, r3
 586:	73 14       	cp	r7, r3
 588:	68 f4       	brcc	.+26     	; 0x5a4 <__stack+0xa5>
 58a:	b7 01       	movw	r22, r14
 58c:	80 e2       	ldi	r24, 0x20	; 32
 58e:	90 e0       	ldi	r25, 0x00	; 0
 590:	2c 87       	std	Y+12, r18	; 0x0c
 592:	0e 94 7d 04 	call	0x8fa	; 0x8fa <fputc>
 596:	73 94       	inc	r7
 598:	2c 85       	ldd	r18, Y+12	; 0x0c
 59a:	f5 cf       	rjmp	.-22     	; 0x586 <__stack+0x87>
 59c:	73 14       	cp	r7, r3
 59e:	10 f4       	brcc	.+4      	; 0x5a4 <__stack+0xa5>
 5a0:	37 18       	sub	r3, r7
 5a2:	01 c0       	rjmp	.+2      	; 0x5a6 <__stack+0xa7>
 5a4:	31 2c       	mov	r3, r1
 5a6:	24 ff       	sbrs	r18, 4
 5a8:	12 c0       	rjmp	.+36     	; 0x5ce <__stack+0xcf>
 5aa:	b7 01       	movw	r22, r14
 5ac:	80 e3       	ldi	r24, 0x30	; 48
 5ae:	90 e0       	ldi	r25, 0x00	; 0
 5b0:	2c 87       	std	Y+12, r18	; 0x0c
 5b2:	0e 94 7d 04 	call	0x8fa	; 0x8fa <fputc>
 5b6:	2c 85       	ldd	r18, Y+12	; 0x0c
 5b8:	22 ff       	sbrs	r18, 2
 5ba:	17 c0       	rjmp	.+46     	; 0x5ea <__stack+0xeb>
 5bc:	21 ff       	sbrs	r18, 1
 5be:	03 c0       	rjmp	.+6      	; 0x5c6 <__stack+0xc7>
 5c0:	88 e5       	ldi	r24, 0x58	; 88
 5c2:	90 e0       	ldi	r25, 0x00	; 0
 5c4:	02 c0       	rjmp	.+4      	; 0x5ca <__stack+0xcb>
 5c6:	88 e7       	ldi	r24, 0x78	; 120
 5c8:	90 e0       	ldi	r25, 0x00	; 0
 5ca:	b7 01       	movw	r22, r14
 5cc:	0c c0       	rjmp	.+24     	; 0x5e6 <__stack+0xe7>
 5ce:	82 2f       	mov	r24, r18
 5d0:	86 78       	andi	r24, 0x86	; 134
 5d2:	59 f0       	breq	.+22     	; 0x5ea <__stack+0xeb>
 5d4:	21 fd       	sbrc	r18, 1
 5d6:	02 c0       	rjmp	.+4      	; 0x5dc <__stack+0xdd>
 5d8:	80 e2       	ldi	r24, 0x20	; 32
 5da:	01 c0       	rjmp	.+2      	; 0x5de <__stack+0xdf>
 5dc:	8b e2       	ldi	r24, 0x2B	; 43
 5de:	27 fd       	sbrc	r18, 7
 5e0:	8d e2       	ldi	r24, 0x2D	; 45
 5e2:	b7 01       	movw	r22, r14
 5e4:	90 e0       	ldi	r25, 0x00	; 0
 5e6:	0e 94 7d 04 	call	0x8fa	; 0x8fa <fputc>
 5ea:	a5 14       	cp	r10, r5
 5ec:	38 f4       	brcc	.+14     	; 0x5fc <__stack+0xfd>
 5ee:	b7 01       	movw	r22, r14
 5f0:	80 e3       	ldi	r24, 0x30	; 48
 5f2:	90 e0       	ldi	r25, 0x00	; 0
 5f4:	0e 94 7d 04 	call	0x8fa	; 0x8fa <fputc>
 5f8:	5a 94       	dec	r5
 5fa:	f7 cf       	rjmp	.-18     	; 0x5ea <__stack+0xeb>
 5fc:	aa 94       	dec	r10
 5fe:	f4 01       	movw	r30, r8
 600:	ea 0d       	add	r30, r10
 602:	f1 1d       	adc	r31, r1
 604:	80 81       	ld	r24, Z
 606:	b7 01       	movw	r22, r14
 608:	90 e0       	ldi	r25, 0x00	; 0
 60a:	0e 94 7d 04 	call	0x8fa	; 0x8fa <fputc>
 60e:	a1 10       	cpse	r10, r1
 610:	f5 cf       	rjmp	.-22     	; 0x5fc <__stack+0xfd>
 612:	33 20       	and	r3, r3
 614:	09 f4       	brne	.+2      	; 0x618 <__stack+0x119>
 616:	51 ce       	rjmp	.-862    	; 0x2ba <vfprintf+0x24>
 618:	b7 01       	movw	r22, r14
 61a:	80 e2       	ldi	r24, 0x20	; 32
 61c:	90 e0       	ldi	r25, 0x00	; 0
 61e:	0e 94 7d 04 	call	0x8fa	; 0x8fa <fputc>
 622:	3a 94       	dec	r3
 624:	f6 cf       	rjmp	.-20     	; 0x612 <__stack+0x113>
 626:	f7 01       	movw	r30, r14
 628:	86 81       	ldd	r24, Z+6	; 0x06
 62a:	97 81       	ldd	r25, Z+7	; 0x07
 62c:	02 c0       	rjmp	.+4      	; 0x632 <__stack+0x133>
 62e:	8f ef       	ldi	r24, 0xFF	; 255
 630:	9f ef       	ldi	r25, 0xFF	; 255
 632:	2c 96       	adiw	r28, 0x0c	; 12
 634:	e2 e1       	ldi	r30, 0x12	; 18
 636:	0c 94 29 05 	jmp	0xa52	; 0xa52 <__epilogue_restores__>

0000063a <calloc>:
 63a:	0f 93       	push	r16
 63c:	1f 93       	push	r17
 63e:	cf 93       	push	r28
 640:	df 93       	push	r29
 642:	86 9f       	mul	r24, r22
 644:	80 01       	movw	r16, r0
 646:	87 9f       	mul	r24, r23
 648:	10 0d       	add	r17, r0
 64a:	96 9f       	mul	r25, r22
 64c:	10 0d       	add	r17, r0
 64e:	11 24       	eor	r1, r1
 650:	c8 01       	movw	r24, r16
 652:	0e 94 39 03 	call	0x672	; 0x672 <malloc>
 656:	ec 01       	movw	r28, r24
 658:	00 97       	sbiw	r24, 0x00	; 0
 65a:	29 f0       	breq	.+10     	; 0x666 <calloc+0x2c>
 65c:	a8 01       	movw	r20, r16
 65e:	60 e0       	ldi	r22, 0x00	; 0
 660:	70 e0       	ldi	r23, 0x00	; 0
 662:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <memset>
 666:	ce 01       	movw	r24, r28
 668:	df 91       	pop	r29
 66a:	cf 91       	pop	r28
 66c:	1f 91       	pop	r17
 66e:	0f 91       	pop	r16
 670:	08 95       	ret

00000672 <malloc>:
 672:	cf 93       	push	r28
 674:	df 93       	push	r29
 676:	82 30       	cpi	r24, 0x02	; 2
 678:	91 05       	cpc	r25, r1
 67a:	10 f4       	brcc	.+4      	; 0x680 <malloc+0xe>
 67c:	82 e0       	ldi	r24, 0x02	; 2
 67e:	90 e0       	ldi	r25, 0x00	; 0
 680:	e0 91 38 01 	lds	r30, 0x0138
 684:	f0 91 39 01 	lds	r31, 0x0139
 688:	20 e0       	ldi	r18, 0x00	; 0
 68a:	30 e0       	ldi	r19, 0x00	; 0
 68c:	a0 e0       	ldi	r26, 0x00	; 0
 68e:	b0 e0       	ldi	r27, 0x00	; 0
 690:	30 97       	sbiw	r30, 0x00	; 0
 692:	39 f1       	breq	.+78     	; 0x6e2 <malloc+0x70>
 694:	40 81       	ld	r20, Z
 696:	51 81       	ldd	r21, Z+1	; 0x01
 698:	48 17       	cp	r20, r24
 69a:	59 07       	cpc	r21, r25
 69c:	b8 f0       	brcs	.+46     	; 0x6cc <malloc+0x5a>
 69e:	48 17       	cp	r20, r24
 6a0:	59 07       	cpc	r21, r25
 6a2:	71 f4       	brne	.+28     	; 0x6c0 <malloc+0x4e>
 6a4:	82 81       	ldd	r24, Z+2	; 0x02
 6a6:	93 81       	ldd	r25, Z+3	; 0x03
 6a8:	10 97       	sbiw	r26, 0x00	; 0
 6aa:	29 f0       	breq	.+10     	; 0x6b6 <malloc+0x44>
 6ac:	13 96       	adiw	r26, 0x03	; 3
 6ae:	9c 93       	st	X, r25
 6b0:	8e 93       	st	-X, r24
 6b2:	12 97       	sbiw	r26, 0x02	; 2
 6b4:	2c c0       	rjmp	.+88     	; 0x70e <malloc+0x9c>
 6b6:	90 93 39 01 	sts	0x0139, r25
 6ba:	80 93 38 01 	sts	0x0138, r24
 6be:	27 c0       	rjmp	.+78     	; 0x70e <malloc+0x9c>
 6c0:	21 15       	cp	r18, r1
 6c2:	31 05       	cpc	r19, r1
 6c4:	31 f0       	breq	.+12     	; 0x6d2 <malloc+0x60>
 6c6:	42 17       	cp	r20, r18
 6c8:	53 07       	cpc	r21, r19
 6ca:	18 f0       	brcs	.+6      	; 0x6d2 <malloc+0x60>
 6cc:	a9 01       	movw	r20, r18
 6ce:	db 01       	movw	r26, r22
 6d0:	01 c0       	rjmp	.+2      	; 0x6d4 <malloc+0x62>
 6d2:	ef 01       	movw	r28, r30
 6d4:	9a 01       	movw	r18, r20
 6d6:	bd 01       	movw	r22, r26
 6d8:	df 01       	movw	r26, r30
 6da:	02 80       	ldd	r0, Z+2	; 0x02
 6dc:	f3 81       	ldd	r31, Z+3	; 0x03
 6de:	e0 2d       	mov	r30, r0
 6e0:	d7 cf       	rjmp	.-82     	; 0x690 <malloc+0x1e>
 6e2:	21 15       	cp	r18, r1
 6e4:	31 05       	cpc	r19, r1
 6e6:	f9 f0       	breq	.+62     	; 0x726 <malloc+0xb4>
 6e8:	28 1b       	sub	r18, r24
 6ea:	39 0b       	sbc	r19, r25
 6ec:	24 30       	cpi	r18, 0x04	; 4
 6ee:	31 05       	cpc	r19, r1
 6f0:	80 f4       	brcc	.+32     	; 0x712 <malloc+0xa0>
 6f2:	8a 81       	ldd	r24, Y+2	; 0x02
 6f4:	9b 81       	ldd	r25, Y+3	; 0x03
 6f6:	61 15       	cp	r22, r1
 6f8:	71 05       	cpc	r23, r1
 6fa:	21 f0       	breq	.+8      	; 0x704 <malloc+0x92>
 6fc:	fb 01       	movw	r30, r22
 6fe:	93 83       	std	Z+3, r25	; 0x03
 700:	82 83       	std	Z+2, r24	; 0x02
 702:	04 c0       	rjmp	.+8      	; 0x70c <malloc+0x9a>
 704:	90 93 39 01 	sts	0x0139, r25
 708:	80 93 38 01 	sts	0x0138, r24
 70c:	fe 01       	movw	r30, r28
 70e:	32 96       	adiw	r30, 0x02	; 2
 710:	44 c0       	rjmp	.+136    	; 0x79a <malloc+0x128>
 712:	fe 01       	movw	r30, r28
 714:	e2 0f       	add	r30, r18
 716:	f3 1f       	adc	r31, r19
 718:	81 93       	st	Z+, r24
 71a:	91 93       	st	Z+, r25
 71c:	22 50       	subi	r18, 0x02	; 2
 71e:	31 09       	sbc	r19, r1
 720:	39 83       	std	Y+1, r19	; 0x01
 722:	28 83       	st	Y, r18
 724:	3a c0       	rjmp	.+116    	; 0x79a <malloc+0x128>
 726:	20 91 36 01 	lds	r18, 0x0136
 72a:	30 91 37 01 	lds	r19, 0x0137
 72e:	23 2b       	or	r18, r19
 730:	41 f4       	brne	.+16     	; 0x742 <malloc+0xd0>
 732:	20 91 02 01 	lds	r18, 0x0102
 736:	30 91 03 01 	lds	r19, 0x0103
 73a:	30 93 37 01 	sts	0x0137, r19
 73e:	20 93 36 01 	sts	0x0136, r18
 742:	20 91 00 01 	lds	r18, 0x0100
 746:	30 91 01 01 	lds	r19, 0x0101
 74a:	21 15       	cp	r18, r1
 74c:	31 05       	cpc	r19, r1
 74e:	41 f4       	brne	.+16     	; 0x760 <malloc+0xee>
 750:	2d b7       	in	r18, 0x3d	; 61
 752:	3e b7       	in	r19, 0x3e	; 62
 754:	40 91 04 01 	lds	r20, 0x0104
 758:	50 91 05 01 	lds	r21, 0x0105
 75c:	24 1b       	sub	r18, r20
 75e:	35 0b       	sbc	r19, r21
 760:	e0 91 36 01 	lds	r30, 0x0136
 764:	f0 91 37 01 	lds	r31, 0x0137
 768:	e2 17       	cp	r30, r18
 76a:	f3 07       	cpc	r31, r19
 76c:	a0 f4       	brcc	.+40     	; 0x796 <malloc+0x124>
 76e:	2e 1b       	sub	r18, r30
 770:	3f 0b       	sbc	r19, r31
 772:	28 17       	cp	r18, r24
 774:	39 07       	cpc	r19, r25
 776:	78 f0       	brcs	.+30     	; 0x796 <malloc+0x124>
 778:	ac 01       	movw	r20, r24
 77a:	4e 5f       	subi	r20, 0xFE	; 254
 77c:	5f 4f       	sbci	r21, 0xFF	; 255
 77e:	24 17       	cp	r18, r20
 780:	35 07       	cpc	r19, r21
 782:	48 f0       	brcs	.+18     	; 0x796 <malloc+0x124>
 784:	4e 0f       	add	r20, r30
 786:	5f 1f       	adc	r21, r31
 788:	50 93 37 01 	sts	0x0137, r21
 78c:	40 93 36 01 	sts	0x0136, r20
 790:	81 93       	st	Z+, r24
 792:	91 93       	st	Z+, r25
 794:	02 c0       	rjmp	.+4      	; 0x79a <malloc+0x128>
 796:	e0 e0       	ldi	r30, 0x00	; 0
 798:	f0 e0       	ldi	r31, 0x00	; 0
 79a:	cf 01       	movw	r24, r30
 79c:	df 91       	pop	r29
 79e:	cf 91       	pop	r28
 7a0:	08 95       	ret

000007a2 <free>:
 7a2:	cf 93       	push	r28
 7a4:	df 93       	push	r29
 7a6:	00 97       	sbiw	r24, 0x00	; 0
 7a8:	09 f4       	brne	.+2      	; 0x7ac <free+0xa>
 7aa:	87 c0       	rjmp	.+270    	; 0x8ba <free+0x118>
 7ac:	fc 01       	movw	r30, r24
 7ae:	32 97       	sbiw	r30, 0x02	; 2
 7b0:	13 82       	std	Z+3, r1	; 0x03
 7b2:	12 82       	std	Z+2, r1	; 0x02
 7b4:	c0 91 38 01 	lds	r28, 0x0138
 7b8:	d0 91 39 01 	lds	r29, 0x0139
 7bc:	20 97       	sbiw	r28, 0x00	; 0
 7be:	81 f4       	brne	.+32     	; 0x7e0 <free+0x3e>
 7c0:	20 81       	ld	r18, Z
 7c2:	31 81       	ldd	r19, Z+1	; 0x01
 7c4:	28 0f       	add	r18, r24
 7c6:	39 1f       	adc	r19, r25
 7c8:	80 91 36 01 	lds	r24, 0x0136
 7cc:	90 91 37 01 	lds	r25, 0x0137
 7d0:	82 17       	cp	r24, r18
 7d2:	93 07       	cpc	r25, r19
 7d4:	79 f5       	brne	.+94     	; 0x834 <free+0x92>
 7d6:	f0 93 37 01 	sts	0x0137, r31
 7da:	e0 93 36 01 	sts	0x0136, r30
 7de:	6d c0       	rjmp	.+218    	; 0x8ba <free+0x118>
 7e0:	de 01       	movw	r26, r28
 7e2:	20 e0       	ldi	r18, 0x00	; 0
 7e4:	30 e0       	ldi	r19, 0x00	; 0
 7e6:	ae 17       	cp	r26, r30
 7e8:	bf 07       	cpc	r27, r31
 7ea:	50 f4       	brcc	.+20     	; 0x800 <free+0x5e>
 7ec:	12 96       	adiw	r26, 0x02	; 2
 7ee:	4d 91       	ld	r20, X+
 7f0:	5c 91       	ld	r21, X
 7f2:	13 97       	sbiw	r26, 0x03	; 3
 7f4:	9d 01       	movw	r18, r26
 7f6:	41 15       	cp	r20, r1
 7f8:	51 05       	cpc	r21, r1
 7fa:	09 f1       	breq	.+66     	; 0x83e <free+0x9c>
 7fc:	da 01       	movw	r26, r20
 7fe:	f3 cf       	rjmp	.-26     	; 0x7e6 <free+0x44>
 800:	b3 83       	std	Z+3, r27	; 0x03
 802:	a2 83       	std	Z+2, r26	; 0x02
 804:	40 81       	ld	r20, Z
 806:	51 81       	ldd	r21, Z+1	; 0x01
 808:	84 0f       	add	r24, r20
 80a:	95 1f       	adc	r25, r21
 80c:	8a 17       	cp	r24, r26
 80e:	9b 07       	cpc	r25, r27
 810:	71 f4       	brne	.+28     	; 0x82e <free+0x8c>
 812:	8d 91       	ld	r24, X+
 814:	9c 91       	ld	r25, X
 816:	11 97       	sbiw	r26, 0x01	; 1
 818:	84 0f       	add	r24, r20
 81a:	95 1f       	adc	r25, r21
 81c:	02 96       	adiw	r24, 0x02	; 2
 81e:	91 83       	std	Z+1, r25	; 0x01
 820:	80 83       	st	Z, r24
 822:	12 96       	adiw	r26, 0x02	; 2
 824:	8d 91       	ld	r24, X+
 826:	9c 91       	ld	r25, X
 828:	13 97       	sbiw	r26, 0x03	; 3
 82a:	93 83       	std	Z+3, r25	; 0x03
 82c:	82 83       	std	Z+2, r24	; 0x02
 82e:	21 15       	cp	r18, r1
 830:	31 05       	cpc	r19, r1
 832:	29 f4       	brne	.+10     	; 0x83e <free+0x9c>
 834:	f0 93 39 01 	sts	0x0139, r31
 838:	e0 93 38 01 	sts	0x0138, r30
 83c:	3e c0       	rjmp	.+124    	; 0x8ba <free+0x118>
 83e:	d9 01       	movw	r26, r18
 840:	13 96       	adiw	r26, 0x03	; 3
 842:	fc 93       	st	X, r31
 844:	ee 93       	st	-X, r30
 846:	12 97       	sbiw	r26, 0x02	; 2
 848:	4d 91       	ld	r20, X+
 84a:	5d 91       	ld	r21, X+
 84c:	a4 0f       	add	r26, r20
 84e:	b5 1f       	adc	r27, r21
 850:	ea 17       	cp	r30, r26
 852:	fb 07       	cpc	r31, r27
 854:	79 f4       	brne	.+30     	; 0x874 <free+0xd2>
 856:	80 81       	ld	r24, Z
 858:	91 81       	ldd	r25, Z+1	; 0x01
 85a:	84 0f       	add	r24, r20
 85c:	95 1f       	adc	r25, r21
 85e:	02 96       	adiw	r24, 0x02	; 2
 860:	d9 01       	movw	r26, r18
 862:	11 96       	adiw	r26, 0x01	; 1
 864:	9c 93       	st	X, r25
 866:	8e 93       	st	-X, r24
 868:	82 81       	ldd	r24, Z+2	; 0x02
 86a:	93 81       	ldd	r25, Z+3	; 0x03
 86c:	13 96       	adiw	r26, 0x03	; 3
 86e:	9c 93       	st	X, r25
 870:	8e 93       	st	-X, r24
 872:	12 97       	sbiw	r26, 0x02	; 2
 874:	e0 e0       	ldi	r30, 0x00	; 0
 876:	f0 e0       	ldi	r31, 0x00	; 0
 878:	8a 81       	ldd	r24, Y+2	; 0x02
 87a:	9b 81       	ldd	r25, Y+3	; 0x03
 87c:	00 97       	sbiw	r24, 0x00	; 0
 87e:	19 f0       	breq	.+6      	; 0x886 <free+0xe4>
 880:	fe 01       	movw	r30, r28
 882:	ec 01       	movw	r28, r24
 884:	f9 cf       	rjmp	.-14     	; 0x878 <free+0xd6>
 886:	ce 01       	movw	r24, r28
 888:	02 96       	adiw	r24, 0x02	; 2
 88a:	28 81       	ld	r18, Y
 88c:	39 81       	ldd	r19, Y+1	; 0x01
 88e:	82 0f       	add	r24, r18
 890:	93 1f       	adc	r25, r19
 892:	20 91 36 01 	lds	r18, 0x0136
 896:	30 91 37 01 	lds	r19, 0x0137
 89a:	28 17       	cp	r18, r24
 89c:	39 07       	cpc	r19, r25
 89e:	69 f4       	brne	.+26     	; 0x8ba <free+0x118>
 8a0:	30 97       	sbiw	r30, 0x00	; 0
 8a2:	29 f4       	brne	.+10     	; 0x8ae <free+0x10c>
 8a4:	10 92 39 01 	sts	0x0139, r1
 8a8:	10 92 38 01 	sts	0x0138, r1
 8ac:	02 c0       	rjmp	.+4      	; 0x8b2 <free+0x110>
 8ae:	13 82       	std	Z+3, r1	; 0x03
 8b0:	12 82       	std	Z+2, r1	; 0x02
 8b2:	d0 93 37 01 	sts	0x0137, r29
 8b6:	c0 93 36 01 	sts	0x0136, r28
 8ba:	df 91       	pop	r29
 8bc:	cf 91       	pop	r28
 8be:	08 95       	ret

000008c0 <strnlen_P>:
 8c0:	fc 01       	movw	r30, r24
 8c2:	05 90       	lpm	r0, Z+
 8c4:	61 50       	subi	r22, 0x01	; 1
 8c6:	70 40       	sbci	r23, 0x00	; 0
 8c8:	01 10       	cpse	r0, r1
 8ca:	d8 f7       	brcc	.-10     	; 0x8c2 <strnlen_P+0x2>
 8cc:	80 95       	com	r24
 8ce:	90 95       	com	r25
 8d0:	8e 0f       	add	r24, r30
 8d2:	9f 1f       	adc	r25, r31
 8d4:	08 95       	ret

000008d6 <memset>:
 8d6:	dc 01       	movw	r26, r24
 8d8:	01 c0       	rjmp	.+2      	; 0x8dc <memset+0x6>
 8da:	6d 93       	st	X+, r22
 8dc:	41 50       	subi	r20, 0x01	; 1
 8de:	50 40       	sbci	r21, 0x00	; 0
 8e0:	e0 f7       	brcc	.-8      	; 0x8da <memset+0x4>
 8e2:	08 95       	ret

000008e4 <strnlen>:
 8e4:	fc 01       	movw	r30, r24
 8e6:	61 50       	subi	r22, 0x01	; 1
 8e8:	70 40       	sbci	r23, 0x00	; 0
 8ea:	01 90       	ld	r0, Z+
 8ec:	01 10       	cpse	r0, r1
 8ee:	d8 f7       	brcc	.-10     	; 0x8e6 <strnlen+0x2>
 8f0:	80 95       	com	r24
 8f2:	90 95       	com	r25
 8f4:	8e 0f       	add	r24, r30
 8f6:	9f 1f       	adc	r25, r31
 8f8:	08 95       	ret

000008fa <fputc>:
 8fa:	0f 93       	push	r16
 8fc:	1f 93       	push	r17
 8fe:	cf 93       	push	r28
 900:	df 93       	push	r29
 902:	18 2f       	mov	r17, r24
 904:	09 2f       	mov	r16, r25
 906:	eb 01       	movw	r28, r22
 908:	8b 81       	ldd	r24, Y+3	; 0x03
 90a:	81 fd       	sbrc	r24, 1
 90c:	03 c0       	rjmp	.+6      	; 0x914 <fputc+0x1a>
 90e:	8f ef       	ldi	r24, 0xFF	; 255
 910:	9f ef       	ldi	r25, 0xFF	; 255
 912:	20 c0       	rjmp	.+64     	; 0x954 <fputc+0x5a>
 914:	82 ff       	sbrs	r24, 2
 916:	10 c0       	rjmp	.+32     	; 0x938 <fputc+0x3e>
 918:	4e 81       	ldd	r20, Y+6	; 0x06
 91a:	5f 81       	ldd	r21, Y+7	; 0x07
 91c:	2c 81       	ldd	r18, Y+4	; 0x04
 91e:	3d 81       	ldd	r19, Y+5	; 0x05
 920:	42 17       	cp	r20, r18
 922:	53 07       	cpc	r21, r19
 924:	7c f4       	brge	.+30     	; 0x944 <fputc+0x4a>
 926:	e8 81       	ld	r30, Y
 928:	f9 81       	ldd	r31, Y+1	; 0x01
 92a:	9f 01       	movw	r18, r30
 92c:	2f 5f       	subi	r18, 0xFF	; 255
 92e:	3f 4f       	sbci	r19, 0xFF	; 255
 930:	39 83       	std	Y+1, r19	; 0x01
 932:	28 83       	st	Y, r18
 934:	10 83       	st	Z, r17
 936:	06 c0       	rjmp	.+12     	; 0x944 <fputc+0x4a>
 938:	e8 85       	ldd	r30, Y+8	; 0x08
 93a:	f9 85       	ldd	r31, Y+9	; 0x09
 93c:	81 2f       	mov	r24, r17
 93e:	09 95       	icall
 940:	89 2b       	or	r24, r25
 942:	29 f7       	brne	.-54     	; 0x90e <fputc+0x14>
 944:	2e 81       	ldd	r18, Y+6	; 0x06
 946:	3f 81       	ldd	r19, Y+7	; 0x07
 948:	2f 5f       	subi	r18, 0xFF	; 255
 94a:	3f 4f       	sbci	r19, 0xFF	; 255
 94c:	3f 83       	std	Y+7, r19	; 0x07
 94e:	2e 83       	std	Y+6, r18	; 0x06
 950:	81 2f       	mov	r24, r17
 952:	90 2f       	mov	r25, r16
 954:	df 91       	pop	r29
 956:	cf 91       	pop	r28
 958:	1f 91       	pop	r17
 95a:	0f 91       	pop	r16
 95c:	08 95       	ret

0000095e <__ultoa_invert>:
 95e:	fa 01       	movw	r30, r20
 960:	aa 27       	eor	r26, r26
 962:	28 30       	cpi	r18, 0x08	; 8
 964:	51 f1       	breq	.+84     	; 0x9ba <__ultoa_invert+0x5c>
 966:	20 31       	cpi	r18, 0x10	; 16
 968:	81 f1       	breq	.+96     	; 0x9ca <__ultoa_invert+0x6c>
 96a:	e8 94       	clt
 96c:	6f 93       	push	r22
 96e:	6e 7f       	andi	r22, 0xFE	; 254
 970:	6e 5f       	subi	r22, 0xFE	; 254
 972:	7f 4f       	sbci	r23, 0xFF	; 255
 974:	8f 4f       	sbci	r24, 0xFF	; 255
 976:	9f 4f       	sbci	r25, 0xFF	; 255
 978:	af 4f       	sbci	r26, 0xFF	; 255
 97a:	b1 e0       	ldi	r27, 0x01	; 1
 97c:	3e d0       	rcall	.+124    	; 0x9fa <__ultoa_invert+0x9c>
 97e:	b4 e0       	ldi	r27, 0x04	; 4
 980:	3c d0       	rcall	.+120    	; 0x9fa <__ultoa_invert+0x9c>
 982:	67 0f       	add	r22, r23
 984:	78 1f       	adc	r23, r24
 986:	89 1f       	adc	r24, r25
 988:	9a 1f       	adc	r25, r26
 98a:	a1 1d       	adc	r26, r1
 98c:	68 0f       	add	r22, r24
 98e:	79 1f       	adc	r23, r25
 990:	8a 1f       	adc	r24, r26
 992:	91 1d       	adc	r25, r1
 994:	a1 1d       	adc	r26, r1
 996:	6a 0f       	add	r22, r26
 998:	71 1d       	adc	r23, r1
 99a:	81 1d       	adc	r24, r1
 99c:	91 1d       	adc	r25, r1
 99e:	a1 1d       	adc	r26, r1
 9a0:	20 d0       	rcall	.+64     	; 0x9e2 <__ultoa_invert+0x84>
 9a2:	09 f4       	brne	.+2      	; 0x9a6 <__ultoa_invert+0x48>
 9a4:	68 94       	set
 9a6:	3f 91       	pop	r19
 9a8:	2a e0       	ldi	r18, 0x0A	; 10
 9aa:	26 9f       	mul	r18, r22
 9ac:	11 24       	eor	r1, r1
 9ae:	30 19       	sub	r19, r0
 9b0:	30 5d       	subi	r19, 0xD0	; 208
 9b2:	31 93       	st	Z+, r19
 9b4:	de f6       	brtc	.-74     	; 0x96c <__ultoa_invert+0xe>
 9b6:	cf 01       	movw	r24, r30
 9b8:	08 95       	ret
 9ba:	46 2f       	mov	r20, r22
 9bc:	47 70       	andi	r20, 0x07	; 7
 9be:	40 5d       	subi	r20, 0xD0	; 208
 9c0:	41 93       	st	Z+, r20
 9c2:	b3 e0       	ldi	r27, 0x03	; 3
 9c4:	0f d0       	rcall	.+30     	; 0x9e4 <__ultoa_invert+0x86>
 9c6:	c9 f7       	brne	.-14     	; 0x9ba <__ultoa_invert+0x5c>
 9c8:	f6 cf       	rjmp	.-20     	; 0x9b6 <__ultoa_invert+0x58>
 9ca:	46 2f       	mov	r20, r22
 9cc:	4f 70       	andi	r20, 0x0F	; 15
 9ce:	40 5d       	subi	r20, 0xD0	; 208
 9d0:	4a 33       	cpi	r20, 0x3A	; 58
 9d2:	18 f0       	brcs	.+6      	; 0x9da <__ultoa_invert+0x7c>
 9d4:	49 5d       	subi	r20, 0xD9	; 217
 9d6:	31 fd       	sbrc	r19, 1
 9d8:	40 52       	subi	r20, 0x20	; 32
 9da:	41 93       	st	Z+, r20
 9dc:	02 d0       	rcall	.+4      	; 0x9e2 <__ultoa_invert+0x84>
 9de:	a9 f7       	brne	.-22     	; 0x9ca <__ultoa_invert+0x6c>
 9e0:	ea cf       	rjmp	.-44     	; 0x9b6 <__ultoa_invert+0x58>
 9e2:	b4 e0       	ldi	r27, 0x04	; 4
 9e4:	a6 95       	lsr	r26
 9e6:	97 95       	ror	r25
 9e8:	87 95       	ror	r24
 9ea:	77 95       	ror	r23
 9ec:	67 95       	ror	r22
 9ee:	ba 95       	dec	r27
 9f0:	c9 f7       	brne	.-14     	; 0x9e4 <__ultoa_invert+0x86>
 9f2:	00 97       	sbiw	r24, 0x00	; 0
 9f4:	61 05       	cpc	r22, r1
 9f6:	71 05       	cpc	r23, r1
 9f8:	08 95       	ret
 9fa:	9b 01       	movw	r18, r22
 9fc:	ac 01       	movw	r20, r24
 9fe:	0a 2e       	mov	r0, r26
 a00:	06 94       	lsr	r0
 a02:	57 95       	ror	r21
 a04:	47 95       	ror	r20
 a06:	37 95       	ror	r19
 a08:	27 95       	ror	r18
 a0a:	ba 95       	dec	r27
 a0c:	c9 f7       	brne	.-14     	; 0xa00 <__ultoa_invert+0xa2>
 a0e:	62 0f       	add	r22, r18
 a10:	73 1f       	adc	r23, r19
 a12:	84 1f       	adc	r24, r20
 a14:	95 1f       	adc	r25, r21
 a16:	a0 1d       	adc	r26, r0
 a18:	08 95       	ret

00000a1a <__prologue_saves__>:
 a1a:	2f 92       	push	r2
 a1c:	3f 92       	push	r3
 a1e:	4f 92       	push	r4
 a20:	5f 92       	push	r5
 a22:	6f 92       	push	r6
 a24:	7f 92       	push	r7
 a26:	8f 92       	push	r8
 a28:	9f 92       	push	r9
 a2a:	af 92       	push	r10
 a2c:	bf 92       	push	r11
 a2e:	cf 92       	push	r12
 a30:	df 92       	push	r13
 a32:	ef 92       	push	r14
 a34:	ff 92       	push	r15
 a36:	0f 93       	push	r16
 a38:	1f 93       	push	r17
 a3a:	cf 93       	push	r28
 a3c:	df 93       	push	r29
 a3e:	cd b7       	in	r28, 0x3d	; 61
 a40:	de b7       	in	r29, 0x3e	; 62
 a42:	ca 1b       	sub	r28, r26
 a44:	db 0b       	sbc	r29, r27
 a46:	0f b6       	in	r0, 0x3f	; 63
 a48:	f8 94       	cli
 a4a:	de bf       	out	0x3e, r29	; 62
 a4c:	0f be       	out	0x3f, r0	; 63
 a4e:	cd bf       	out	0x3d, r28	; 61
 a50:	09 94       	ijmp

00000a52 <__epilogue_restores__>:
 a52:	2a 88       	ldd	r2, Y+18	; 0x12
 a54:	39 88       	ldd	r3, Y+17	; 0x11
 a56:	48 88       	ldd	r4, Y+16	; 0x10
 a58:	5f 84       	ldd	r5, Y+15	; 0x0f
 a5a:	6e 84       	ldd	r6, Y+14	; 0x0e
 a5c:	7d 84       	ldd	r7, Y+13	; 0x0d
 a5e:	8c 84       	ldd	r8, Y+12	; 0x0c
 a60:	9b 84       	ldd	r9, Y+11	; 0x0b
 a62:	aa 84       	ldd	r10, Y+10	; 0x0a
 a64:	b9 84       	ldd	r11, Y+9	; 0x09
 a66:	c8 84       	ldd	r12, Y+8	; 0x08
 a68:	df 80       	ldd	r13, Y+7	; 0x07
 a6a:	ee 80       	ldd	r14, Y+6	; 0x06
 a6c:	fd 80       	ldd	r15, Y+5	; 0x05
 a6e:	0c 81       	ldd	r16, Y+4	; 0x04
 a70:	1b 81       	ldd	r17, Y+3	; 0x03
 a72:	aa 81       	ldd	r26, Y+2	; 0x02
 a74:	b9 81       	ldd	r27, Y+1	; 0x01
 a76:	ce 0f       	add	r28, r30
 a78:	d1 1d       	adc	r29, r1
 a7a:	0f b6       	in	r0, 0x3f	; 63
 a7c:	f8 94       	cli
 a7e:	de bf       	out	0x3e, r29	; 62
 a80:	0f be       	out	0x3f, r0	; 63
 a82:	cd bf       	out	0x3d, r28	; 61
 a84:	ed 01       	movw	r28, r26
 a86:	08 95       	ret

00000a88 <_exit>:
 a88:	f8 94       	cli

00000a8a <__stop_program>:
 a8a:	ff cf       	rjmp	.-2      	; 0xa8a <__stop_program>
