
ATmega162.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002c  00800100  00000aa8  00000b3c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000aa8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000e  0080012c  0080012c  00000b68  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000b68  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000100  00000000  00000000  00000bc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000afa  00000000  00000000  00000cc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007a9  00000000  00000000  000017be  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000646  00000000  00000000  00001f67  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001bc  00000000  00000000  000025b0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000398  00000000  00000000  0000276c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000460  00000000  00000000  00002b04  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000b0  00000000  00000000  00002f64  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e8 ea       	ldi	r30, 0xA8	; 168
  84:	fa e0       	ldi	r31, 0x0A	; 10
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	ac 32       	cpi	r26, 0x2C	; 44
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	ac e2       	ldi	r26, 0x2C	; 44
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	aa 33       	cpi	r26, 0x3A	; 58
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <main>
  a6:	0c 94 52 05 	jmp	0xaa4	; 0xaa4 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <ADC_init>:
#include "../bit_manipulation.h"
#include <avr/io.h>

int ADC_init(void)
{
	set_bit(MCUCR, SRE);
  ae:	85 b7       	in	r24, 0x35	; 53
  b0:	80 68       	ori	r24, 0x80	; 128
  b2:	85 bf       	out	0x35, r24	; 53
	set_bit(SFIOR, XMM2);
  b4:	80 b7       	in	r24, 0x30	; 48
  b6:	80 62       	ori	r24, 0x20	; 32
  b8:	80 bf       	out	0x30, r24	; 48
	
	// Set the interrupt pin to input
	clear_bit(DDRD, PD3);
  ba:	8b 98       	cbi	0x11, 3	; 17
	return 0;
}
  bc:	80 e0       	ldi	r24, 0x00	; 0
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	08 95       	ret

000000c2 <ADC_read>:

uint8_t ADC_read(uint8_t channel)
{
	volatile uint8_t *ext_adc = (uint8_t *) 0x1400; // Start address for the ADC
	
	if (channel > 3){ return 0; }
  c2:	84 30       	cpi	r24, 0x04	; 4
  c4:	40 f4       	brcc	.+16     	; 0xd6 <ADC_read+0x14>
	*ext_adc = 0x04 | channel; // bitwise OR
  c6:	84 60       	ori	r24, 0x04	; 4
  c8:	80 93 00 14 	sts	0x1400, r24
	
	// wait until interrupt is low, which means we can read the converted data
	loop_until_bit_is_clear(PIND, PD3);
  cc:	83 99       	sbic	0x10, 3	; 16
  ce:	fe cf       	rjmp	.-4      	; 0xcc <ADC_read+0xa>
	
	return *ext_adc;
  d0:	80 91 00 14 	lds	r24, 0x1400
  d4:	08 95       	ret

uint8_t ADC_read(uint8_t channel)
{
	volatile uint8_t *ext_adc = (uint8_t *) 0x1400; // Start address for the ADC
	
	if (channel > 3){ return 0; }
  d6:	80 e0       	ldi	r24, 0x00	; 0
	// wait until interrupt is low, which means we can read the converted data
	loop_until_bit_is_clear(PIND, PD3);
	
	return *ext_adc;
	
}
  d8:	08 95       	ret

000000da <JOY_read_adc>:

int JOY_button(){
	return !(test_bit(PINB, PINB0));
}

JOY_position_t JOY_read_adc( void ){
  da:	cf 93       	push	r28
	JOY_position_t pos;
	pos.y = ADC_read(Y_POS_CHANNEL);
  dc:	80 e0       	ldi	r24, 0x00	; 0
  de:	0e 94 61 00 	call	0xc2	; 0xc2 <ADC_read>
  e2:	c8 2f       	mov	r28, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  e4:	8c ec       	ldi	r24, 0xCC	; 204
  e6:	94 e0       	ldi	r25, 0x04	; 4
  e8:	01 97       	sbiw	r24, 0x01	; 1
  ea:	f1 f7       	brne	.-4      	; 0xe8 <JOY_read_adc+0xe>
  ec:	00 c0       	rjmp	.+0      	; 0xee <JOY_read_adc+0x14>
  ee:	00 00       	nop
	_delay_ms(1);
	pos.x = ADC_read(X_POS_CHANNEL);
  f0:	81 e0       	ldi	r24, 0x01	; 1
  f2:	0e 94 61 00 	call	0xc2	; 0xc2 <ADC_read>
  f6:	28 2f       	mov	r18, r24
	
	return pos;
  f8:	6c 2f       	mov	r22, r28
  fa:	70 e0       	ldi	r23, 0x00	; 0
  fc:	82 2f       	mov	r24, r18
  fe:	90 e0       	ldi	r25, 0x00	; 0
}
 100:	cf 91       	pop	r28
 102:	08 95       	ret

00000104 <JOY_calibrate>:
	set_bit(PORTB, PB0);
	
}

void JOY_calibrate( void ){
	neutral_pos = JOY_read_adc();
 104:	0e 94 6d 00 	call	0xda	; 0xda <JOY_read_adc>
 108:	60 93 2c 01 	sts	0x012C, r22
 10c:	70 93 2d 01 	sts	0x012D, r23
 110:	80 93 2e 01 	sts	0x012E, r24
 114:	90 93 2f 01 	sts	0x012F, r25
 118:	08 95       	ret

0000011a <JOY_init>:

JOY_position_t neutral_pos; 


void JOY_init( void ){
	ADC_init();
 11a:	0e 94 57 00 	call	0xae	; 0xae <ADC_init>
	JOY_calibrate();
 11e:	0e 94 82 00 	call	0x104	; 0x104 <JOY_calibrate>
	
	// Initialize PORT B, pin 0 (joystick button) as input
	clear_bit(DDRB, PINB0);
 122:	b8 98       	cbi	0x17, 0	; 23
	
	// Activate pull-up resistor for joystick button
	set_bit(PORTB, PB0);
 124:	c0 9a       	sbi	0x18, 0	; 24
 126:	08 95       	ret

00000128 <TOUCH_button>:
	clear_bit(DDRB, PINB2);
	
}

int TOUCH_button( int button ){
	switch (button) {
 128:	00 97       	sbiw	r24, 0x00	; 0
 12a:	19 f0       	breq	.+6      	; 0x132 <TOUCH_button+0xa>
 12c:	01 97       	sbiw	r24, 0x01	; 1
 12e:	31 f0       	breq	.+12     	; 0x13c <TOUCH_button+0x14>
 130:	0b c0       	rjmp	.+22     	; 0x148 <TOUCH_button+0x20>
		case LEFT_BUTTON:
		if(test_bit(PINB, PB1)) { return 1; }
 132:	86 b3       	in	r24, 0x16	; 22
 134:	86 95       	lsr	r24
 136:	81 70       	andi	r24, 0x01	; 1
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	08 95       	ret
		break;
		case RIGHT_BUTTON:
		if(test_bit(PINB, PB2)) { return 1; }
 13c:	86 b3       	in	r24, 0x16	; 22
}

int TOUCH_button( int button ){
	switch (button) {
		case LEFT_BUTTON:
		if(test_bit(PINB, PB1)) { return 1; }
 13e:	82 fb       	bst	r24, 2
 140:	88 27       	eor	r24, r24
 142:	80 f9       	bld	r24, 0
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	08 95       	ret
		break;
		case RIGHT_BUTTON:
		if(test_bit(PINB, PB2)) { return 1; }
		break;
		default:
		return 0;
 148:	80 e0       	ldi	r24, 0x00	; 0
 14a:	90 e0       	ldi	r25, 0x00	; 0
	}
	return 0;
}
 14c:	08 95       	ret

0000014e <TOUCH_read_adc>:

TOUCH_slider_pos_t TOUCH_read_adc( void ){
 14e:	cf 93       	push	r28
	TOUCH_slider_pos_t pos;
	pos.left_slider = ADC_read(LEFT_SLIDER_CHANNEL);
 150:	83 e0       	ldi	r24, 0x03	; 3
 152:	0e 94 61 00 	call	0xc2	; 0xc2 <ADC_read>
 156:	c8 2f       	mov	r28, r24
 158:	8c ec       	ldi	r24, 0xCC	; 204
 15a:	94 e0       	ldi	r25, 0x04	; 4
 15c:	01 97       	sbiw	r24, 0x01	; 1
 15e:	f1 f7       	brne	.-4      	; 0x15c <TOUCH_read_adc+0xe>
 160:	00 c0       	rjmp	.+0      	; 0x162 <TOUCH_read_adc+0x14>
 162:	00 00       	nop
	_delay_ms(1);
	pos.right_slider = ADC_read(RIGHT_SLIDER_CHANNEL);
 164:	82 e0       	ldi	r24, 0x02	; 2
 166:	0e 94 61 00 	call	0xc2	; 0xc2 <ADC_read>
 16a:	28 2f       	mov	r18, r24
	
	return pos;
 16c:	6c 2f       	mov	r22, r28
 16e:	70 e0       	ldi	r23, 0x00	; 0
 170:	82 2f       	mov	r24, r18
 172:	90 e0       	ldi	r25, 0x00	; 0
}
 174:	cf 91       	pop	r28
 176:	08 95       	ret

00000178 <TOUCH_get_slider_position>:

TOUCH_slider_pos_t TOUCH_get_slider_position(){
	TOUCH_slider_pos_t current_pos = TOUCH_read_adc();
 178:	0e 94 a7 00 	call	0x14e	; 0x14e <TOUCH_read_adc>
	else if (pos_percentage.y < -100) { pos_percentage.y = -100; }

	return pos_percentage;
	*/
	return current_pos;
 17c:	08 95       	ret

0000017e <UART_Transmit>:

// transmit data
void UART_Transmit (unsigned char data)
{
	// Wait for empty transmit buffer
	while (!( UCSR0A & (1<<UDRE0))); 
 17e:	5d 9b       	sbis	0x0b, 5	; 11
 180:	fe cf       	rjmp	.-4      	; 0x17e <UART_Transmit>
	
	// Put data into buffer, sends the data
	UDR0 = data;  
 182:	8c b9       	out	0x0c, r24	; 12
 184:	08 95       	ret

00000186 <UART_Recieve>:

// function to receive data
unsigned char UART_Recieve (void)
{
	//Wait for data to be received
	while(!(UCSR0A) & (1<<RXC0));  
 186:	8b b1       	in	r24, 0x0b	; 11
	
	//Get and return received data from buffer
	return UDR0;  
 188:	8c b1       	in	r24, 0x0c	; 12
 18a:	08 95       	ret

0000018c <UART_Init>:

void UART_Init( unsigned int ubrr ){
	/* 
	Set baud rate
	 */
	UBRR0H |= (unsigned char)(ubrr>>8);
 18c:	20 b5       	in	r18, 0x20	; 32
 18e:	92 2b       	or	r25, r18
 190:	90 bd       	out	0x20, r25	; 32
	UBRR0L |= (unsigned char)ubrr;
 192:	99 b1       	in	r25, 0x09	; 9
 194:	89 2b       	or	r24, r25
 196:	89 b9       	out	0x09, r24	; 9
	/* 
	Enable receiver and transmitter
	 */
	UCSR0B |= (1<<RXEN0)|(1<<TXEN0);
 198:	8a b1       	in	r24, 0x0a	; 10
 19a:	88 61       	ori	r24, 0x18	; 24
 19c:	8a b9       	out	0x0a, r24	; 10
	/* 
	Set frame format: 8data, 2stop bit
	 */
	UCSR0C |= (1<<URSEL0)|(1<<USBS0)|(1<<UCSZ00)|(1<<UCSZ01);
 19e:	80 b5       	in	r24, 0x20	; 32
 1a0:	8e 68       	ori	r24, 0x8E	; 142
 1a2:	80 bd       	out	0x20, r24	; 32
	
	fdevopen(&UART_Transmit, &UART_Recieve);
 1a4:	63 ec       	ldi	r22, 0xC3	; 195
 1a6:	70 e0       	ldi	r23, 0x00	; 0
 1a8:	8f eb       	ldi	r24, 0xBF	; 191
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <fdevopen>
 1b0:	08 95       	ret

000001b2 <main>:
#include <avr/io.h>
#include <util/delay.h>

int main( void ){
	
	UART_Init( MYUBRR );
 1b2:	8f e1       	ldi	r24, 0x1F	; 31
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	0e 94 c6 00 	call	0x18c	; 0x18c <UART_Init>
	JOY_init();
 1ba:	0e 94 8d 00 	call	0x11a	; 0x11a <JOY_init>
		buttonPress_l = TOUCH_button(LEFT_BUTTON);
		buttonPress_r = TOUCH_button(RIGHT_BUTTON);
		//printf("Left: %d \t Right %d \n", buttonPress_l, buttonPress_r);
		
		slider_pos = TOUCH_get_slider_position();
		printf("Left slider: %d \t Right slider: %d \n", slider_pos.left_slider, slider_pos.right_slider);
 1be:	c6 e0       	ldi	r28, 0x06	; 6
 1c0:	d1 e0       	ldi	r29, 0x01	; 1
		_delay_ms(1);
		int posX = ADC_read(X_POS_CHANNEL);
		printf("Y: %d %% \t X: %d %%\n", (int)posY, (int)posX);
		*/
		
		buttonPress_l = TOUCH_button(LEFT_BUTTON);
 1c2:	80 e0       	ldi	r24, 0x00	; 0
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	0e 94 94 00 	call	0x128	; 0x128 <TOUCH_button>
		buttonPress_r = TOUCH_button(RIGHT_BUTTON);
 1ca:	81 e0       	ldi	r24, 0x01	; 1
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	0e 94 94 00 	call	0x128	; 0x128 <TOUCH_button>
		//printf("Left: %d \t Right %d \n", buttonPress_l, buttonPress_r);
		
		slider_pos = TOUCH_get_slider_position();
 1d2:	0e 94 bc 00 	call	0x178	; 0x178 <TOUCH_get_slider_position>
		printf("Left slider: %d \t Right slider: %d \n", slider_pos.left_slider, slider_pos.right_slider);
 1d6:	9f 93       	push	r25
 1d8:	8f 93       	push	r24
 1da:	7f 93       	push	r23
 1dc:	6f 93       	push	r22
 1de:	df 93       	push	r29
 1e0:	cf 93       	push	r28
 1e2:	0e 94 45 01 	call	0x28a	; 0x28a <printf>
 1e6:	0f 90       	pop	r0
 1e8:	0f 90       	pop	r0
 1ea:	0f 90       	pop	r0
 1ec:	0f 90       	pop	r0
 1ee:	0f 90       	pop	r0
 1f0:	0f 90       	pop	r0
 1f2:	e7 cf       	rjmp	.-50     	; 0x1c2 <main+0x10>

000001f4 <fdevopen>:
 1f4:	0f 93       	push	r16
 1f6:	1f 93       	push	r17
 1f8:	cf 93       	push	r28
 1fa:	df 93       	push	r29
 1fc:	ec 01       	movw	r28, r24
 1fe:	8b 01       	movw	r16, r22
 200:	00 97       	sbiw	r24, 0x00	; 0
 202:	31 f4       	brne	.+12     	; 0x210 <fdevopen+0x1c>
 204:	61 15       	cp	r22, r1
 206:	71 05       	cpc	r23, r1
 208:	19 f4       	brne	.+6      	; 0x210 <fdevopen+0x1c>
 20a:	80 e0       	ldi	r24, 0x00	; 0
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	38 c0       	rjmp	.+112    	; 0x280 <fdevopen+0x8c>
 210:	6e e0       	ldi	r22, 0x0E	; 14
 212:	70 e0       	ldi	r23, 0x00	; 0
 214:	81 e0       	ldi	r24, 0x01	; 1
 216:	90 e0       	ldi	r25, 0x00	; 0
 218:	0e 94 2b 03 	call	0x656	; 0x656 <calloc>
 21c:	fc 01       	movw	r30, r24
 21e:	00 97       	sbiw	r24, 0x00	; 0
 220:	a1 f3       	breq	.-24     	; 0x20a <fdevopen+0x16>
 222:	80 e8       	ldi	r24, 0x80	; 128
 224:	83 83       	std	Z+3, r24	; 0x03
 226:	01 15       	cp	r16, r1
 228:	11 05       	cpc	r17, r1
 22a:	71 f0       	breq	.+28     	; 0x248 <fdevopen+0x54>
 22c:	13 87       	std	Z+11, r17	; 0x0b
 22e:	02 87       	std	Z+10, r16	; 0x0a
 230:	81 e8       	ldi	r24, 0x81	; 129
 232:	83 83       	std	Z+3, r24	; 0x03
 234:	80 91 30 01 	lds	r24, 0x0130
 238:	90 91 31 01 	lds	r25, 0x0131
 23c:	89 2b       	or	r24, r25
 23e:	21 f4       	brne	.+8      	; 0x248 <fdevopen+0x54>
 240:	f0 93 31 01 	sts	0x0131, r31
 244:	e0 93 30 01 	sts	0x0130, r30
 248:	20 97       	sbiw	r28, 0x00	; 0
 24a:	c9 f0       	breq	.+50     	; 0x27e <fdevopen+0x8a>
 24c:	d1 87       	std	Z+9, r29	; 0x09
 24e:	c0 87       	std	Z+8, r28	; 0x08
 250:	83 81       	ldd	r24, Z+3	; 0x03
 252:	82 60       	ori	r24, 0x02	; 2
 254:	83 83       	std	Z+3, r24	; 0x03
 256:	80 91 32 01 	lds	r24, 0x0132
 25a:	90 91 33 01 	lds	r25, 0x0133
 25e:	89 2b       	or	r24, r25
 260:	71 f4       	brne	.+28     	; 0x27e <fdevopen+0x8a>
 262:	f0 93 33 01 	sts	0x0133, r31
 266:	e0 93 32 01 	sts	0x0132, r30
 26a:	80 91 34 01 	lds	r24, 0x0134
 26e:	90 91 35 01 	lds	r25, 0x0135
 272:	89 2b       	or	r24, r25
 274:	21 f4       	brne	.+8      	; 0x27e <fdevopen+0x8a>
 276:	f0 93 35 01 	sts	0x0135, r31
 27a:	e0 93 34 01 	sts	0x0134, r30
 27e:	cf 01       	movw	r24, r30
 280:	df 91       	pop	r29
 282:	cf 91       	pop	r28
 284:	1f 91       	pop	r17
 286:	0f 91       	pop	r16
 288:	08 95       	ret

0000028a <printf>:
 28a:	a0 e0       	ldi	r26, 0x00	; 0
 28c:	b0 e0       	ldi	r27, 0x00	; 0
 28e:	eb e4       	ldi	r30, 0x4B	; 75
 290:	f1 e0       	ldi	r31, 0x01	; 1
 292:	0c 94 2b 05 	jmp	0xa56	; 0xa56 <__prologue_saves__+0x20>
 296:	fe 01       	movw	r30, r28
 298:	35 96       	adiw	r30, 0x05	; 5
 29a:	61 91       	ld	r22, Z+
 29c:	71 91       	ld	r23, Z+
 29e:	af 01       	movw	r20, r30
 2a0:	80 91 32 01 	lds	r24, 0x0132
 2a4:	90 91 33 01 	lds	r25, 0x0133
 2a8:	0e 94 59 01 	call	0x2b2	; 0x2b2 <vfprintf>
 2ac:	e2 e0       	ldi	r30, 0x02	; 2
 2ae:	0c 94 47 05 	jmp	0xa8e	; 0xa8e <__epilogue_restores__+0x20>

000002b2 <vfprintf>:
 2b2:	ac e0       	ldi	r26, 0x0C	; 12
 2b4:	b0 e0       	ldi	r27, 0x00	; 0
 2b6:	ef e5       	ldi	r30, 0x5F	; 95
 2b8:	f1 e0       	ldi	r31, 0x01	; 1
 2ba:	0c 94 1b 05 	jmp	0xa36	; 0xa36 <__prologue_saves__>
 2be:	7c 01       	movw	r14, r24
 2c0:	6b 01       	movw	r12, r22
 2c2:	8a 01       	movw	r16, r20
 2c4:	fc 01       	movw	r30, r24
 2c6:	17 82       	std	Z+7, r1	; 0x07
 2c8:	16 82       	std	Z+6, r1	; 0x06
 2ca:	83 81       	ldd	r24, Z+3	; 0x03
 2cc:	81 ff       	sbrs	r24, 1
 2ce:	bd c1       	rjmp	.+890    	; 0x64a <__stack+0x14b>
 2d0:	ce 01       	movw	r24, r28
 2d2:	01 96       	adiw	r24, 0x01	; 1
 2d4:	4c 01       	movw	r8, r24
 2d6:	f7 01       	movw	r30, r14
 2d8:	93 81       	ldd	r25, Z+3	; 0x03
 2da:	f6 01       	movw	r30, r12
 2dc:	93 fd       	sbrc	r25, 3
 2de:	85 91       	lpm	r24, Z+
 2e0:	93 ff       	sbrs	r25, 3
 2e2:	81 91       	ld	r24, Z+
 2e4:	6f 01       	movw	r12, r30
 2e6:	88 23       	and	r24, r24
 2e8:	09 f4       	brne	.+2      	; 0x2ec <vfprintf+0x3a>
 2ea:	ab c1       	rjmp	.+854    	; 0x642 <__stack+0x143>
 2ec:	85 32       	cpi	r24, 0x25	; 37
 2ee:	39 f4       	brne	.+14     	; 0x2fe <vfprintf+0x4c>
 2f0:	93 fd       	sbrc	r25, 3
 2f2:	85 91       	lpm	r24, Z+
 2f4:	93 ff       	sbrs	r25, 3
 2f6:	81 91       	ld	r24, Z+
 2f8:	6f 01       	movw	r12, r30
 2fa:	85 32       	cpi	r24, 0x25	; 37
 2fc:	29 f4       	brne	.+10     	; 0x308 <vfprintf+0x56>
 2fe:	b7 01       	movw	r22, r14
 300:	90 e0       	ldi	r25, 0x00	; 0
 302:	0e 94 8b 04 	call	0x916	; 0x916 <fputc>
 306:	e7 cf       	rjmp	.-50     	; 0x2d6 <vfprintf+0x24>
 308:	51 2c       	mov	r5, r1
 30a:	31 2c       	mov	r3, r1
 30c:	20 e0       	ldi	r18, 0x00	; 0
 30e:	20 32       	cpi	r18, 0x20	; 32
 310:	a0 f4       	brcc	.+40     	; 0x33a <vfprintf+0x88>
 312:	8b 32       	cpi	r24, 0x2B	; 43
 314:	69 f0       	breq	.+26     	; 0x330 <vfprintf+0x7e>
 316:	30 f4       	brcc	.+12     	; 0x324 <vfprintf+0x72>
 318:	80 32       	cpi	r24, 0x20	; 32
 31a:	59 f0       	breq	.+22     	; 0x332 <vfprintf+0x80>
 31c:	83 32       	cpi	r24, 0x23	; 35
 31e:	69 f4       	brne	.+26     	; 0x33a <vfprintf+0x88>
 320:	20 61       	ori	r18, 0x10	; 16
 322:	2c c0       	rjmp	.+88     	; 0x37c <vfprintf+0xca>
 324:	8d 32       	cpi	r24, 0x2D	; 45
 326:	39 f0       	breq	.+14     	; 0x336 <vfprintf+0x84>
 328:	80 33       	cpi	r24, 0x30	; 48
 32a:	39 f4       	brne	.+14     	; 0x33a <vfprintf+0x88>
 32c:	21 60       	ori	r18, 0x01	; 1
 32e:	26 c0       	rjmp	.+76     	; 0x37c <vfprintf+0xca>
 330:	22 60       	ori	r18, 0x02	; 2
 332:	24 60       	ori	r18, 0x04	; 4
 334:	23 c0       	rjmp	.+70     	; 0x37c <vfprintf+0xca>
 336:	28 60       	ori	r18, 0x08	; 8
 338:	21 c0       	rjmp	.+66     	; 0x37c <vfprintf+0xca>
 33a:	27 fd       	sbrc	r18, 7
 33c:	27 c0       	rjmp	.+78     	; 0x38c <vfprintf+0xda>
 33e:	30 ed       	ldi	r19, 0xD0	; 208
 340:	38 0f       	add	r19, r24
 342:	3a 30       	cpi	r19, 0x0A	; 10
 344:	78 f4       	brcc	.+30     	; 0x364 <vfprintf+0xb2>
 346:	26 ff       	sbrs	r18, 6
 348:	06 c0       	rjmp	.+12     	; 0x356 <vfprintf+0xa4>
 34a:	fa e0       	ldi	r31, 0x0A	; 10
 34c:	5f 9e       	mul	r5, r31
 34e:	30 0d       	add	r19, r0
 350:	11 24       	eor	r1, r1
 352:	53 2e       	mov	r5, r19
 354:	13 c0       	rjmp	.+38     	; 0x37c <vfprintf+0xca>
 356:	8a e0       	ldi	r24, 0x0A	; 10
 358:	38 9e       	mul	r3, r24
 35a:	30 0d       	add	r19, r0
 35c:	11 24       	eor	r1, r1
 35e:	33 2e       	mov	r3, r19
 360:	20 62       	ori	r18, 0x20	; 32
 362:	0c c0       	rjmp	.+24     	; 0x37c <vfprintf+0xca>
 364:	8e 32       	cpi	r24, 0x2E	; 46
 366:	21 f4       	brne	.+8      	; 0x370 <vfprintf+0xbe>
 368:	26 fd       	sbrc	r18, 6
 36a:	6b c1       	rjmp	.+726    	; 0x642 <__stack+0x143>
 36c:	20 64       	ori	r18, 0x40	; 64
 36e:	06 c0       	rjmp	.+12     	; 0x37c <vfprintf+0xca>
 370:	8c 36       	cpi	r24, 0x6C	; 108
 372:	11 f4       	brne	.+4      	; 0x378 <vfprintf+0xc6>
 374:	20 68       	ori	r18, 0x80	; 128
 376:	02 c0       	rjmp	.+4      	; 0x37c <vfprintf+0xca>
 378:	88 36       	cpi	r24, 0x68	; 104
 37a:	41 f4       	brne	.+16     	; 0x38c <vfprintf+0xda>
 37c:	f6 01       	movw	r30, r12
 37e:	93 fd       	sbrc	r25, 3
 380:	85 91       	lpm	r24, Z+
 382:	93 ff       	sbrs	r25, 3
 384:	81 91       	ld	r24, Z+
 386:	6f 01       	movw	r12, r30
 388:	81 11       	cpse	r24, r1
 38a:	c1 cf       	rjmp	.-126    	; 0x30e <vfprintf+0x5c>
 38c:	98 2f       	mov	r25, r24
 38e:	9f 7d       	andi	r25, 0xDF	; 223
 390:	95 54       	subi	r25, 0x45	; 69
 392:	93 30       	cpi	r25, 0x03	; 3
 394:	28 f4       	brcc	.+10     	; 0x3a0 <vfprintf+0xee>
 396:	0c 5f       	subi	r16, 0xFC	; 252
 398:	1f 4f       	sbci	r17, 0xFF	; 255
 39a:	ff e3       	ldi	r31, 0x3F	; 63
 39c:	f9 83       	std	Y+1, r31	; 0x01
 39e:	0d c0       	rjmp	.+26     	; 0x3ba <vfprintf+0x108>
 3a0:	83 36       	cpi	r24, 0x63	; 99
 3a2:	31 f0       	breq	.+12     	; 0x3b0 <vfprintf+0xfe>
 3a4:	83 37       	cpi	r24, 0x73	; 115
 3a6:	71 f0       	breq	.+28     	; 0x3c4 <vfprintf+0x112>
 3a8:	83 35       	cpi	r24, 0x53	; 83
 3aa:	09 f0       	breq	.+2      	; 0x3ae <vfprintf+0xfc>
 3ac:	5b c0       	rjmp	.+182    	; 0x464 <vfprintf+0x1b2>
 3ae:	22 c0       	rjmp	.+68     	; 0x3f4 <vfprintf+0x142>
 3b0:	f8 01       	movw	r30, r16
 3b2:	80 81       	ld	r24, Z
 3b4:	89 83       	std	Y+1, r24	; 0x01
 3b6:	0e 5f       	subi	r16, 0xFE	; 254
 3b8:	1f 4f       	sbci	r17, 0xFF	; 255
 3ba:	44 24       	eor	r4, r4
 3bc:	43 94       	inc	r4
 3be:	51 2c       	mov	r5, r1
 3c0:	54 01       	movw	r10, r8
 3c2:	15 c0       	rjmp	.+42     	; 0x3ee <vfprintf+0x13c>
 3c4:	38 01       	movw	r6, r16
 3c6:	f2 e0       	ldi	r31, 0x02	; 2
 3c8:	6f 0e       	add	r6, r31
 3ca:	71 1c       	adc	r7, r1
 3cc:	f8 01       	movw	r30, r16
 3ce:	a0 80       	ld	r10, Z
 3d0:	b1 80       	ldd	r11, Z+1	; 0x01
 3d2:	26 ff       	sbrs	r18, 6
 3d4:	03 c0       	rjmp	.+6      	; 0x3dc <vfprintf+0x12a>
 3d6:	65 2d       	mov	r22, r5
 3d8:	70 e0       	ldi	r23, 0x00	; 0
 3da:	02 c0       	rjmp	.+4      	; 0x3e0 <vfprintf+0x12e>
 3dc:	6f ef       	ldi	r22, 0xFF	; 255
 3de:	7f ef       	ldi	r23, 0xFF	; 255
 3e0:	c5 01       	movw	r24, r10
 3e2:	2c 87       	std	Y+12, r18	; 0x0c
 3e4:	0e 94 80 04 	call	0x900	; 0x900 <strnlen>
 3e8:	2c 01       	movw	r4, r24
 3ea:	83 01       	movw	r16, r6
 3ec:	2c 85       	ldd	r18, Y+12	; 0x0c
 3ee:	2f 77       	andi	r18, 0x7F	; 127
 3f0:	22 2e       	mov	r2, r18
 3f2:	17 c0       	rjmp	.+46     	; 0x422 <vfprintf+0x170>
 3f4:	38 01       	movw	r6, r16
 3f6:	f2 e0       	ldi	r31, 0x02	; 2
 3f8:	6f 0e       	add	r6, r31
 3fa:	71 1c       	adc	r7, r1
 3fc:	f8 01       	movw	r30, r16
 3fe:	a0 80       	ld	r10, Z
 400:	b1 80       	ldd	r11, Z+1	; 0x01
 402:	26 ff       	sbrs	r18, 6
 404:	03 c0       	rjmp	.+6      	; 0x40c <vfprintf+0x15a>
 406:	65 2d       	mov	r22, r5
 408:	70 e0       	ldi	r23, 0x00	; 0
 40a:	02 c0       	rjmp	.+4      	; 0x410 <vfprintf+0x15e>
 40c:	6f ef       	ldi	r22, 0xFF	; 255
 40e:	7f ef       	ldi	r23, 0xFF	; 255
 410:	c5 01       	movw	r24, r10
 412:	2c 87       	std	Y+12, r18	; 0x0c
 414:	0e 94 6e 04 	call	0x8dc	; 0x8dc <strnlen_P>
 418:	2c 01       	movw	r4, r24
 41a:	2c 85       	ldd	r18, Y+12	; 0x0c
 41c:	20 68       	ori	r18, 0x80	; 128
 41e:	22 2e       	mov	r2, r18
 420:	83 01       	movw	r16, r6
 422:	23 fc       	sbrc	r2, 3
 424:	1b c0       	rjmp	.+54     	; 0x45c <vfprintf+0x1aa>
 426:	83 2d       	mov	r24, r3
 428:	90 e0       	ldi	r25, 0x00	; 0
 42a:	48 16       	cp	r4, r24
 42c:	59 06       	cpc	r5, r25
 42e:	b0 f4       	brcc	.+44     	; 0x45c <vfprintf+0x1aa>
 430:	b7 01       	movw	r22, r14
 432:	80 e2       	ldi	r24, 0x20	; 32
 434:	90 e0       	ldi	r25, 0x00	; 0
 436:	0e 94 8b 04 	call	0x916	; 0x916 <fputc>
 43a:	3a 94       	dec	r3
 43c:	f4 cf       	rjmp	.-24     	; 0x426 <vfprintf+0x174>
 43e:	f5 01       	movw	r30, r10
 440:	27 fc       	sbrc	r2, 7
 442:	85 91       	lpm	r24, Z+
 444:	27 fe       	sbrs	r2, 7
 446:	81 91       	ld	r24, Z+
 448:	5f 01       	movw	r10, r30
 44a:	b7 01       	movw	r22, r14
 44c:	90 e0       	ldi	r25, 0x00	; 0
 44e:	0e 94 8b 04 	call	0x916	; 0x916 <fputc>
 452:	31 10       	cpse	r3, r1
 454:	3a 94       	dec	r3
 456:	f1 e0       	ldi	r31, 0x01	; 1
 458:	4f 1a       	sub	r4, r31
 45a:	51 08       	sbc	r5, r1
 45c:	41 14       	cp	r4, r1
 45e:	51 04       	cpc	r5, r1
 460:	71 f7       	brne	.-36     	; 0x43e <vfprintf+0x18c>
 462:	e5 c0       	rjmp	.+458    	; 0x62e <__stack+0x12f>
 464:	84 36       	cpi	r24, 0x64	; 100
 466:	11 f0       	breq	.+4      	; 0x46c <vfprintf+0x1ba>
 468:	89 36       	cpi	r24, 0x69	; 105
 46a:	39 f5       	brne	.+78     	; 0x4ba <vfprintf+0x208>
 46c:	f8 01       	movw	r30, r16
 46e:	27 ff       	sbrs	r18, 7
 470:	07 c0       	rjmp	.+14     	; 0x480 <vfprintf+0x1ce>
 472:	60 81       	ld	r22, Z
 474:	71 81       	ldd	r23, Z+1	; 0x01
 476:	82 81       	ldd	r24, Z+2	; 0x02
 478:	93 81       	ldd	r25, Z+3	; 0x03
 47a:	0c 5f       	subi	r16, 0xFC	; 252
 47c:	1f 4f       	sbci	r17, 0xFF	; 255
 47e:	08 c0       	rjmp	.+16     	; 0x490 <vfprintf+0x1de>
 480:	60 81       	ld	r22, Z
 482:	71 81       	ldd	r23, Z+1	; 0x01
 484:	88 27       	eor	r24, r24
 486:	77 fd       	sbrc	r23, 7
 488:	80 95       	com	r24
 48a:	98 2f       	mov	r25, r24
 48c:	0e 5f       	subi	r16, 0xFE	; 254
 48e:	1f 4f       	sbci	r17, 0xFF	; 255
 490:	2f 76       	andi	r18, 0x6F	; 111
 492:	b2 2e       	mov	r11, r18
 494:	97 ff       	sbrs	r25, 7
 496:	09 c0       	rjmp	.+18     	; 0x4aa <vfprintf+0x1f8>
 498:	90 95       	com	r25
 49a:	80 95       	com	r24
 49c:	70 95       	com	r23
 49e:	61 95       	neg	r22
 4a0:	7f 4f       	sbci	r23, 0xFF	; 255
 4a2:	8f 4f       	sbci	r24, 0xFF	; 255
 4a4:	9f 4f       	sbci	r25, 0xFF	; 255
 4a6:	20 68       	ori	r18, 0x80	; 128
 4a8:	b2 2e       	mov	r11, r18
 4aa:	2a e0       	ldi	r18, 0x0A	; 10
 4ac:	30 e0       	ldi	r19, 0x00	; 0
 4ae:	a4 01       	movw	r20, r8
 4b0:	0e 94 bd 04 	call	0x97a	; 0x97a <__ultoa_invert>
 4b4:	a8 2e       	mov	r10, r24
 4b6:	a8 18       	sub	r10, r8
 4b8:	44 c0       	rjmp	.+136    	; 0x542 <__stack+0x43>
 4ba:	85 37       	cpi	r24, 0x75	; 117
 4bc:	29 f4       	brne	.+10     	; 0x4c8 <vfprintf+0x216>
 4be:	2f 7e       	andi	r18, 0xEF	; 239
 4c0:	b2 2e       	mov	r11, r18
 4c2:	2a e0       	ldi	r18, 0x0A	; 10
 4c4:	30 e0       	ldi	r19, 0x00	; 0
 4c6:	25 c0       	rjmp	.+74     	; 0x512 <__stack+0x13>
 4c8:	f2 2f       	mov	r31, r18
 4ca:	f9 7f       	andi	r31, 0xF9	; 249
 4cc:	bf 2e       	mov	r11, r31
 4ce:	8f 36       	cpi	r24, 0x6F	; 111
 4d0:	c1 f0       	breq	.+48     	; 0x502 <__stack+0x3>
 4d2:	18 f4       	brcc	.+6      	; 0x4da <vfprintf+0x228>
 4d4:	88 35       	cpi	r24, 0x58	; 88
 4d6:	79 f0       	breq	.+30     	; 0x4f6 <vfprintf+0x244>
 4d8:	b4 c0       	rjmp	.+360    	; 0x642 <__stack+0x143>
 4da:	80 37       	cpi	r24, 0x70	; 112
 4dc:	19 f0       	breq	.+6      	; 0x4e4 <vfprintf+0x232>
 4de:	88 37       	cpi	r24, 0x78	; 120
 4e0:	21 f0       	breq	.+8      	; 0x4ea <vfprintf+0x238>
 4e2:	af c0       	rjmp	.+350    	; 0x642 <__stack+0x143>
 4e4:	2f 2f       	mov	r18, r31
 4e6:	20 61       	ori	r18, 0x10	; 16
 4e8:	b2 2e       	mov	r11, r18
 4ea:	b4 fe       	sbrs	r11, 4
 4ec:	0d c0       	rjmp	.+26     	; 0x508 <__stack+0x9>
 4ee:	8b 2d       	mov	r24, r11
 4f0:	84 60       	ori	r24, 0x04	; 4
 4f2:	b8 2e       	mov	r11, r24
 4f4:	09 c0       	rjmp	.+18     	; 0x508 <__stack+0x9>
 4f6:	24 ff       	sbrs	r18, 4
 4f8:	0a c0       	rjmp	.+20     	; 0x50e <__stack+0xf>
 4fa:	9f 2f       	mov	r25, r31
 4fc:	96 60       	ori	r25, 0x06	; 6
 4fe:	b9 2e       	mov	r11, r25
 500:	06 c0       	rjmp	.+12     	; 0x50e <__stack+0xf>
 502:	28 e0       	ldi	r18, 0x08	; 8
 504:	30 e0       	ldi	r19, 0x00	; 0
 506:	05 c0       	rjmp	.+10     	; 0x512 <__stack+0x13>
 508:	20 e1       	ldi	r18, 0x10	; 16
 50a:	30 e0       	ldi	r19, 0x00	; 0
 50c:	02 c0       	rjmp	.+4      	; 0x512 <__stack+0x13>
 50e:	20 e1       	ldi	r18, 0x10	; 16
 510:	32 e0       	ldi	r19, 0x02	; 2
 512:	f8 01       	movw	r30, r16
 514:	b7 fe       	sbrs	r11, 7
 516:	07 c0       	rjmp	.+14     	; 0x526 <__stack+0x27>
 518:	60 81       	ld	r22, Z
 51a:	71 81       	ldd	r23, Z+1	; 0x01
 51c:	82 81       	ldd	r24, Z+2	; 0x02
 51e:	93 81       	ldd	r25, Z+3	; 0x03
 520:	0c 5f       	subi	r16, 0xFC	; 252
 522:	1f 4f       	sbci	r17, 0xFF	; 255
 524:	06 c0       	rjmp	.+12     	; 0x532 <__stack+0x33>
 526:	60 81       	ld	r22, Z
 528:	71 81       	ldd	r23, Z+1	; 0x01
 52a:	80 e0       	ldi	r24, 0x00	; 0
 52c:	90 e0       	ldi	r25, 0x00	; 0
 52e:	0e 5f       	subi	r16, 0xFE	; 254
 530:	1f 4f       	sbci	r17, 0xFF	; 255
 532:	a4 01       	movw	r20, r8
 534:	0e 94 bd 04 	call	0x97a	; 0x97a <__ultoa_invert>
 538:	a8 2e       	mov	r10, r24
 53a:	a8 18       	sub	r10, r8
 53c:	fb 2d       	mov	r31, r11
 53e:	ff 77       	andi	r31, 0x7F	; 127
 540:	bf 2e       	mov	r11, r31
 542:	b6 fe       	sbrs	r11, 6
 544:	0b c0       	rjmp	.+22     	; 0x55c <__stack+0x5d>
 546:	2b 2d       	mov	r18, r11
 548:	2e 7f       	andi	r18, 0xFE	; 254
 54a:	a5 14       	cp	r10, r5
 54c:	50 f4       	brcc	.+20     	; 0x562 <__stack+0x63>
 54e:	b4 fe       	sbrs	r11, 4
 550:	0a c0       	rjmp	.+20     	; 0x566 <__stack+0x67>
 552:	b2 fc       	sbrc	r11, 2
 554:	08 c0       	rjmp	.+16     	; 0x566 <__stack+0x67>
 556:	2b 2d       	mov	r18, r11
 558:	2e 7e       	andi	r18, 0xEE	; 238
 55a:	05 c0       	rjmp	.+10     	; 0x566 <__stack+0x67>
 55c:	7a 2c       	mov	r7, r10
 55e:	2b 2d       	mov	r18, r11
 560:	03 c0       	rjmp	.+6      	; 0x568 <__stack+0x69>
 562:	7a 2c       	mov	r7, r10
 564:	01 c0       	rjmp	.+2      	; 0x568 <__stack+0x69>
 566:	75 2c       	mov	r7, r5
 568:	24 ff       	sbrs	r18, 4
 56a:	0d c0       	rjmp	.+26     	; 0x586 <__stack+0x87>
 56c:	fe 01       	movw	r30, r28
 56e:	ea 0d       	add	r30, r10
 570:	f1 1d       	adc	r31, r1
 572:	80 81       	ld	r24, Z
 574:	80 33       	cpi	r24, 0x30	; 48
 576:	11 f4       	brne	.+4      	; 0x57c <__stack+0x7d>
 578:	29 7e       	andi	r18, 0xE9	; 233
 57a:	09 c0       	rjmp	.+18     	; 0x58e <__stack+0x8f>
 57c:	22 ff       	sbrs	r18, 2
 57e:	06 c0       	rjmp	.+12     	; 0x58c <__stack+0x8d>
 580:	73 94       	inc	r7
 582:	73 94       	inc	r7
 584:	04 c0       	rjmp	.+8      	; 0x58e <__stack+0x8f>
 586:	82 2f       	mov	r24, r18
 588:	86 78       	andi	r24, 0x86	; 134
 58a:	09 f0       	breq	.+2      	; 0x58e <__stack+0x8f>
 58c:	73 94       	inc	r7
 58e:	23 fd       	sbrc	r18, 3
 590:	13 c0       	rjmp	.+38     	; 0x5b8 <__stack+0xb9>
 592:	20 ff       	sbrs	r18, 0
 594:	06 c0       	rjmp	.+12     	; 0x5a2 <__stack+0xa3>
 596:	5a 2c       	mov	r5, r10
 598:	73 14       	cp	r7, r3
 59a:	18 f4       	brcc	.+6      	; 0x5a2 <__stack+0xa3>
 59c:	53 0c       	add	r5, r3
 59e:	57 18       	sub	r5, r7
 5a0:	73 2c       	mov	r7, r3
 5a2:	73 14       	cp	r7, r3
 5a4:	68 f4       	brcc	.+26     	; 0x5c0 <__stack+0xc1>
 5a6:	b7 01       	movw	r22, r14
 5a8:	80 e2       	ldi	r24, 0x20	; 32
 5aa:	90 e0       	ldi	r25, 0x00	; 0
 5ac:	2c 87       	std	Y+12, r18	; 0x0c
 5ae:	0e 94 8b 04 	call	0x916	; 0x916 <fputc>
 5b2:	73 94       	inc	r7
 5b4:	2c 85       	ldd	r18, Y+12	; 0x0c
 5b6:	f5 cf       	rjmp	.-22     	; 0x5a2 <__stack+0xa3>
 5b8:	73 14       	cp	r7, r3
 5ba:	10 f4       	brcc	.+4      	; 0x5c0 <__stack+0xc1>
 5bc:	37 18       	sub	r3, r7
 5be:	01 c0       	rjmp	.+2      	; 0x5c2 <__stack+0xc3>
 5c0:	31 2c       	mov	r3, r1
 5c2:	24 ff       	sbrs	r18, 4
 5c4:	12 c0       	rjmp	.+36     	; 0x5ea <__stack+0xeb>
 5c6:	b7 01       	movw	r22, r14
 5c8:	80 e3       	ldi	r24, 0x30	; 48
 5ca:	90 e0       	ldi	r25, 0x00	; 0
 5cc:	2c 87       	std	Y+12, r18	; 0x0c
 5ce:	0e 94 8b 04 	call	0x916	; 0x916 <fputc>
 5d2:	2c 85       	ldd	r18, Y+12	; 0x0c
 5d4:	22 ff       	sbrs	r18, 2
 5d6:	17 c0       	rjmp	.+46     	; 0x606 <__stack+0x107>
 5d8:	21 ff       	sbrs	r18, 1
 5da:	03 c0       	rjmp	.+6      	; 0x5e2 <__stack+0xe3>
 5dc:	88 e5       	ldi	r24, 0x58	; 88
 5de:	90 e0       	ldi	r25, 0x00	; 0
 5e0:	02 c0       	rjmp	.+4      	; 0x5e6 <__stack+0xe7>
 5e2:	88 e7       	ldi	r24, 0x78	; 120
 5e4:	90 e0       	ldi	r25, 0x00	; 0
 5e6:	b7 01       	movw	r22, r14
 5e8:	0c c0       	rjmp	.+24     	; 0x602 <__stack+0x103>
 5ea:	82 2f       	mov	r24, r18
 5ec:	86 78       	andi	r24, 0x86	; 134
 5ee:	59 f0       	breq	.+22     	; 0x606 <__stack+0x107>
 5f0:	21 fd       	sbrc	r18, 1
 5f2:	02 c0       	rjmp	.+4      	; 0x5f8 <__stack+0xf9>
 5f4:	80 e2       	ldi	r24, 0x20	; 32
 5f6:	01 c0       	rjmp	.+2      	; 0x5fa <__stack+0xfb>
 5f8:	8b e2       	ldi	r24, 0x2B	; 43
 5fa:	27 fd       	sbrc	r18, 7
 5fc:	8d e2       	ldi	r24, 0x2D	; 45
 5fe:	b7 01       	movw	r22, r14
 600:	90 e0       	ldi	r25, 0x00	; 0
 602:	0e 94 8b 04 	call	0x916	; 0x916 <fputc>
 606:	a5 14       	cp	r10, r5
 608:	38 f4       	brcc	.+14     	; 0x618 <__stack+0x119>
 60a:	b7 01       	movw	r22, r14
 60c:	80 e3       	ldi	r24, 0x30	; 48
 60e:	90 e0       	ldi	r25, 0x00	; 0
 610:	0e 94 8b 04 	call	0x916	; 0x916 <fputc>
 614:	5a 94       	dec	r5
 616:	f7 cf       	rjmp	.-18     	; 0x606 <__stack+0x107>
 618:	aa 94       	dec	r10
 61a:	f4 01       	movw	r30, r8
 61c:	ea 0d       	add	r30, r10
 61e:	f1 1d       	adc	r31, r1
 620:	80 81       	ld	r24, Z
 622:	b7 01       	movw	r22, r14
 624:	90 e0       	ldi	r25, 0x00	; 0
 626:	0e 94 8b 04 	call	0x916	; 0x916 <fputc>
 62a:	a1 10       	cpse	r10, r1
 62c:	f5 cf       	rjmp	.-22     	; 0x618 <__stack+0x119>
 62e:	33 20       	and	r3, r3
 630:	09 f4       	brne	.+2      	; 0x634 <__stack+0x135>
 632:	51 ce       	rjmp	.-862    	; 0x2d6 <vfprintf+0x24>
 634:	b7 01       	movw	r22, r14
 636:	80 e2       	ldi	r24, 0x20	; 32
 638:	90 e0       	ldi	r25, 0x00	; 0
 63a:	0e 94 8b 04 	call	0x916	; 0x916 <fputc>
 63e:	3a 94       	dec	r3
 640:	f6 cf       	rjmp	.-20     	; 0x62e <__stack+0x12f>
 642:	f7 01       	movw	r30, r14
 644:	86 81       	ldd	r24, Z+6	; 0x06
 646:	97 81       	ldd	r25, Z+7	; 0x07
 648:	02 c0       	rjmp	.+4      	; 0x64e <__stack+0x14f>
 64a:	8f ef       	ldi	r24, 0xFF	; 255
 64c:	9f ef       	ldi	r25, 0xFF	; 255
 64e:	2c 96       	adiw	r28, 0x0c	; 12
 650:	e2 e1       	ldi	r30, 0x12	; 18
 652:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__epilogue_restores__>

00000656 <calloc>:
 656:	0f 93       	push	r16
 658:	1f 93       	push	r17
 65a:	cf 93       	push	r28
 65c:	df 93       	push	r29
 65e:	86 9f       	mul	r24, r22
 660:	80 01       	movw	r16, r0
 662:	87 9f       	mul	r24, r23
 664:	10 0d       	add	r17, r0
 666:	96 9f       	mul	r25, r22
 668:	10 0d       	add	r17, r0
 66a:	11 24       	eor	r1, r1
 66c:	c8 01       	movw	r24, r16
 66e:	0e 94 47 03 	call	0x68e	; 0x68e <malloc>
 672:	ec 01       	movw	r28, r24
 674:	00 97       	sbiw	r24, 0x00	; 0
 676:	29 f0       	breq	.+10     	; 0x682 <calloc+0x2c>
 678:	a8 01       	movw	r20, r16
 67a:	60 e0       	ldi	r22, 0x00	; 0
 67c:	70 e0       	ldi	r23, 0x00	; 0
 67e:	0e 94 79 04 	call	0x8f2	; 0x8f2 <memset>
 682:	ce 01       	movw	r24, r28
 684:	df 91       	pop	r29
 686:	cf 91       	pop	r28
 688:	1f 91       	pop	r17
 68a:	0f 91       	pop	r16
 68c:	08 95       	ret

0000068e <malloc>:
 68e:	cf 93       	push	r28
 690:	df 93       	push	r29
 692:	82 30       	cpi	r24, 0x02	; 2
 694:	91 05       	cpc	r25, r1
 696:	10 f4       	brcc	.+4      	; 0x69c <malloc+0xe>
 698:	82 e0       	ldi	r24, 0x02	; 2
 69a:	90 e0       	ldi	r25, 0x00	; 0
 69c:	e0 91 38 01 	lds	r30, 0x0138
 6a0:	f0 91 39 01 	lds	r31, 0x0139
 6a4:	20 e0       	ldi	r18, 0x00	; 0
 6a6:	30 e0       	ldi	r19, 0x00	; 0
 6a8:	a0 e0       	ldi	r26, 0x00	; 0
 6aa:	b0 e0       	ldi	r27, 0x00	; 0
 6ac:	30 97       	sbiw	r30, 0x00	; 0
 6ae:	39 f1       	breq	.+78     	; 0x6fe <malloc+0x70>
 6b0:	40 81       	ld	r20, Z
 6b2:	51 81       	ldd	r21, Z+1	; 0x01
 6b4:	48 17       	cp	r20, r24
 6b6:	59 07       	cpc	r21, r25
 6b8:	b8 f0       	brcs	.+46     	; 0x6e8 <malloc+0x5a>
 6ba:	48 17       	cp	r20, r24
 6bc:	59 07       	cpc	r21, r25
 6be:	71 f4       	brne	.+28     	; 0x6dc <malloc+0x4e>
 6c0:	82 81       	ldd	r24, Z+2	; 0x02
 6c2:	93 81       	ldd	r25, Z+3	; 0x03
 6c4:	10 97       	sbiw	r26, 0x00	; 0
 6c6:	29 f0       	breq	.+10     	; 0x6d2 <malloc+0x44>
 6c8:	13 96       	adiw	r26, 0x03	; 3
 6ca:	9c 93       	st	X, r25
 6cc:	8e 93       	st	-X, r24
 6ce:	12 97       	sbiw	r26, 0x02	; 2
 6d0:	2c c0       	rjmp	.+88     	; 0x72a <malloc+0x9c>
 6d2:	90 93 39 01 	sts	0x0139, r25
 6d6:	80 93 38 01 	sts	0x0138, r24
 6da:	27 c0       	rjmp	.+78     	; 0x72a <malloc+0x9c>
 6dc:	21 15       	cp	r18, r1
 6de:	31 05       	cpc	r19, r1
 6e0:	31 f0       	breq	.+12     	; 0x6ee <malloc+0x60>
 6e2:	42 17       	cp	r20, r18
 6e4:	53 07       	cpc	r21, r19
 6e6:	18 f0       	brcs	.+6      	; 0x6ee <malloc+0x60>
 6e8:	a9 01       	movw	r20, r18
 6ea:	db 01       	movw	r26, r22
 6ec:	01 c0       	rjmp	.+2      	; 0x6f0 <malloc+0x62>
 6ee:	ef 01       	movw	r28, r30
 6f0:	9a 01       	movw	r18, r20
 6f2:	bd 01       	movw	r22, r26
 6f4:	df 01       	movw	r26, r30
 6f6:	02 80       	ldd	r0, Z+2	; 0x02
 6f8:	f3 81       	ldd	r31, Z+3	; 0x03
 6fa:	e0 2d       	mov	r30, r0
 6fc:	d7 cf       	rjmp	.-82     	; 0x6ac <malloc+0x1e>
 6fe:	21 15       	cp	r18, r1
 700:	31 05       	cpc	r19, r1
 702:	f9 f0       	breq	.+62     	; 0x742 <malloc+0xb4>
 704:	28 1b       	sub	r18, r24
 706:	39 0b       	sbc	r19, r25
 708:	24 30       	cpi	r18, 0x04	; 4
 70a:	31 05       	cpc	r19, r1
 70c:	80 f4       	brcc	.+32     	; 0x72e <malloc+0xa0>
 70e:	8a 81       	ldd	r24, Y+2	; 0x02
 710:	9b 81       	ldd	r25, Y+3	; 0x03
 712:	61 15       	cp	r22, r1
 714:	71 05       	cpc	r23, r1
 716:	21 f0       	breq	.+8      	; 0x720 <malloc+0x92>
 718:	fb 01       	movw	r30, r22
 71a:	93 83       	std	Z+3, r25	; 0x03
 71c:	82 83       	std	Z+2, r24	; 0x02
 71e:	04 c0       	rjmp	.+8      	; 0x728 <malloc+0x9a>
 720:	90 93 39 01 	sts	0x0139, r25
 724:	80 93 38 01 	sts	0x0138, r24
 728:	fe 01       	movw	r30, r28
 72a:	32 96       	adiw	r30, 0x02	; 2
 72c:	44 c0       	rjmp	.+136    	; 0x7b6 <malloc+0x128>
 72e:	fe 01       	movw	r30, r28
 730:	e2 0f       	add	r30, r18
 732:	f3 1f       	adc	r31, r19
 734:	81 93       	st	Z+, r24
 736:	91 93       	st	Z+, r25
 738:	22 50       	subi	r18, 0x02	; 2
 73a:	31 09       	sbc	r19, r1
 73c:	39 83       	std	Y+1, r19	; 0x01
 73e:	28 83       	st	Y, r18
 740:	3a c0       	rjmp	.+116    	; 0x7b6 <malloc+0x128>
 742:	20 91 36 01 	lds	r18, 0x0136
 746:	30 91 37 01 	lds	r19, 0x0137
 74a:	23 2b       	or	r18, r19
 74c:	41 f4       	brne	.+16     	; 0x75e <malloc+0xd0>
 74e:	20 91 02 01 	lds	r18, 0x0102
 752:	30 91 03 01 	lds	r19, 0x0103
 756:	30 93 37 01 	sts	0x0137, r19
 75a:	20 93 36 01 	sts	0x0136, r18
 75e:	20 91 00 01 	lds	r18, 0x0100
 762:	30 91 01 01 	lds	r19, 0x0101
 766:	21 15       	cp	r18, r1
 768:	31 05       	cpc	r19, r1
 76a:	41 f4       	brne	.+16     	; 0x77c <malloc+0xee>
 76c:	2d b7       	in	r18, 0x3d	; 61
 76e:	3e b7       	in	r19, 0x3e	; 62
 770:	40 91 04 01 	lds	r20, 0x0104
 774:	50 91 05 01 	lds	r21, 0x0105
 778:	24 1b       	sub	r18, r20
 77a:	35 0b       	sbc	r19, r21
 77c:	e0 91 36 01 	lds	r30, 0x0136
 780:	f0 91 37 01 	lds	r31, 0x0137
 784:	e2 17       	cp	r30, r18
 786:	f3 07       	cpc	r31, r19
 788:	a0 f4       	brcc	.+40     	; 0x7b2 <malloc+0x124>
 78a:	2e 1b       	sub	r18, r30
 78c:	3f 0b       	sbc	r19, r31
 78e:	28 17       	cp	r18, r24
 790:	39 07       	cpc	r19, r25
 792:	78 f0       	brcs	.+30     	; 0x7b2 <malloc+0x124>
 794:	ac 01       	movw	r20, r24
 796:	4e 5f       	subi	r20, 0xFE	; 254
 798:	5f 4f       	sbci	r21, 0xFF	; 255
 79a:	24 17       	cp	r18, r20
 79c:	35 07       	cpc	r19, r21
 79e:	48 f0       	brcs	.+18     	; 0x7b2 <malloc+0x124>
 7a0:	4e 0f       	add	r20, r30
 7a2:	5f 1f       	adc	r21, r31
 7a4:	50 93 37 01 	sts	0x0137, r21
 7a8:	40 93 36 01 	sts	0x0136, r20
 7ac:	81 93       	st	Z+, r24
 7ae:	91 93       	st	Z+, r25
 7b0:	02 c0       	rjmp	.+4      	; 0x7b6 <malloc+0x128>
 7b2:	e0 e0       	ldi	r30, 0x00	; 0
 7b4:	f0 e0       	ldi	r31, 0x00	; 0
 7b6:	cf 01       	movw	r24, r30
 7b8:	df 91       	pop	r29
 7ba:	cf 91       	pop	r28
 7bc:	08 95       	ret

000007be <free>:
 7be:	cf 93       	push	r28
 7c0:	df 93       	push	r29
 7c2:	00 97       	sbiw	r24, 0x00	; 0
 7c4:	09 f4       	brne	.+2      	; 0x7c8 <free+0xa>
 7c6:	87 c0       	rjmp	.+270    	; 0x8d6 <free+0x118>
 7c8:	fc 01       	movw	r30, r24
 7ca:	32 97       	sbiw	r30, 0x02	; 2
 7cc:	13 82       	std	Z+3, r1	; 0x03
 7ce:	12 82       	std	Z+2, r1	; 0x02
 7d0:	c0 91 38 01 	lds	r28, 0x0138
 7d4:	d0 91 39 01 	lds	r29, 0x0139
 7d8:	20 97       	sbiw	r28, 0x00	; 0
 7da:	81 f4       	brne	.+32     	; 0x7fc <free+0x3e>
 7dc:	20 81       	ld	r18, Z
 7de:	31 81       	ldd	r19, Z+1	; 0x01
 7e0:	28 0f       	add	r18, r24
 7e2:	39 1f       	adc	r19, r25
 7e4:	80 91 36 01 	lds	r24, 0x0136
 7e8:	90 91 37 01 	lds	r25, 0x0137
 7ec:	82 17       	cp	r24, r18
 7ee:	93 07       	cpc	r25, r19
 7f0:	79 f5       	brne	.+94     	; 0x850 <free+0x92>
 7f2:	f0 93 37 01 	sts	0x0137, r31
 7f6:	e0 93 36 01 	sts	0x0136, r30
 7fa:	6d c0       	rjmp	.+218    	; 0x8d6 <free+0x118>
 7fc:	de 01       	movw	r26, r28
 7fe:	20 e0       	ldi	r18, 0x00	; 0
 800:	30 e0       	ldi	r19, 0x00	; 0
 802:	ae 17       	cp	r26, r30
 804:	bf 07       	cpc	r27, r31
 806:	50 f4       	brcc	.+20     	; 0x81c <free+0x5e>
 808:	12 96       	adiw	r26, 0x02	; 2
 80a:	4d 91       	ld	r20, X+
 80c:	5c 91       	ld	r21, X
 80e:	13 97       	sbiw	r26, 0x03	; 3
 810:	9d 01       	movw	r18, r26
 812:	41 15       	cp	r20, r1
 814:	51 05       	cpc	r21, r1
 816:	09 f1       	breq	.+66     	; 0x85a <free+0x9c>
 818:	da 01       	movw	r26, r20
 81a:	f3 cf       	rjmp	.-26     	; 0x802 <free+0x44>
 81c:	b3 83       	std	Z+3, r27	; 0x03
 81e:	a2 83       	std	Z+2, r26	; 0x02
 820:	40 81       	ld	r20, Z
 822:	51 81       	ldd	r21, Z+1	; 0x01
 824:	84 0f       	add	r24, r20
 826:	95 1f       	adc	r25, r21
 828:	8a 17       	cp	r24, r26
 82a:	9b 07       	cpc	r25, r27
 82c:	71 f4       	brne	.+28     	; 0x84a <free+0x8c>
 82e:	8d 91       	ld	r24, X+
 830:	9c 91       	ld	r25, X
 832:	11 97       	sbiw	r26, 0x01	; 1
 834:	84 0f       	add	r24, r20
 836:	95 1f       	adc	r25, r21
 838:	02 96       	adiw	r24, 0x02	; 2
 83a:	91 83       	std	Z+1, r25	; 0x01
 83c:	80 83       	st	Z, r24
 83e:	12 96       	adiw	r26, 0x02	; 2
 840:	8d 91       	ld	r24, X+
 842:	9c 91       	ld	r25, X
 844:	13 97       	sbiw	r26, 0x03	; 3
 846:	93 83       	std	Z+3, r25	; 0x03
 848:	82 83       	std	Z+2, r24	; 0x02
 84a:	21 15       	cp	r18, r1
 84c:	31 05       	cpc	r19, r1
 84e:	29 f4       	brne	.+10     	; 0x85a <free+0x9c>
 850:	f0 93 39 01 	sts	0x0139, r31
 854:	e0 93 38 01 	sts	0x0138, r30
 858:	3e c0       	rjmp	.+124    	; 0x8d6 <free+0x118>
 85a:	d9 01       	movw	r26, r18
 85c:	13 96       	adiw	r26, 0x03	; 3
 85e:	fc 93       	st	X, r31
 860:	ee 93       	st	-X, r30
 862:	12 97       	sbiw	r26, 0x02	; 2
 864:	4d 91       	ld	r20, X+
 866:	5d 91       	ld	r21, X+
 868:	a4 0f       	add	r26, r20
 86a:	b5 1f       	adc	r27, r21
 86c:	ea 17       	cp	r30, r26
 86e:	fb 07       	cpc	r31, r27
 870:	79 f4       	brne	.+30     	; 0x890 <free+0xd2>
 872:	80 81       	ld	r24, Z
 874:	91 81       	ldd	r25, Z+1	; 0x01
 876:	84 0f       	add	r24, r20
 878:	95 1f       	adc	r25, r21
 87a:	02 96       	adiw	r24, 0x02	; 2
 87c:	d9 01       	movw	r26, r18
 87e:	11 96       	adiw	r26, 0x01	; 1
 880:	9c 93       	st	X, r25
 882:	8e 93       	st	-X, r24
 884:	82 81       	ldd	r24, Z+2	; 0x02
 886:	93 81       	ldd	r25, Z+3	; 0x03
 888:	13 96       	adiw	r26, 0x03	; 3
 88a:	9c 93       	st	X, r25
 88c:	8e 93       	st	-X, r24
 88e:	12 97       	sbiw	r26, 0x02	; 2
 890:	e0 e0       	ldi	r30, 0x00	; 0
 892:	f0 e0       	ldi	r31, 0x00	; 0
 894:	8a 81       	ldd	r24, Y+2	; 0x02
 896:	9b 81       	ldd	r25, Y+3	; 0x03
 898:	00 97       	sbiw	r24, 0x00	; 0
 89a:	19 f0       	breq	.+6      	; 0x8a2 <free+0xe4>
 89c:	fe 01       	movw	r30, r28
 89e:	ec 01       	movw	r28, r24
 8a0:	f9 cf       	rjmp	.-14     	; 0x894 <free+0xd6>
 8a2:	ce 01       	movw	r24, r28
 8a4:	02 96       	adiw	r24, 0x02	; 2
 8a6:	28 81       	ld	r18, Y
 8a8:	39 81       	ldd	r19, Y+1	; 0x01
 8aa:	82 0f       	add	r24, r18
 8ac:	93 1f       	adc	r25, r19
 8ae:	20 91 36 01 	lds	r18, 0x0136
 8b2:	30 91 37 01 	lds	r19, 0x0137
 8b6:	28 17       	cp	r18, r24
 8b8:	39 07       	cpc	r19, r25
 8ba:	69 f4       	brne	.+26     	; 0x8d6 <free+0x118>
 8bc:	30 97       	sbiw	r30, 0x00	; 0
 8be:	29 f4       	brne	.+10     	; 0x8ca <free+0x10c>
 8c0:	10 92 39 01 	sts	0x0139, r1
 8c4:	10 92 38 01 	sts	0x0138, r1
 8c8:	02 c0       	rjmp	.+4      	; 0x8ce <free+0x110>
 8ca:	13 82       	std	Z+3, r1	; 0x03
 8cc:	12 82       	std	Z+2, r1	; 0x02
 8ce:	d0 93 37 01 	sts	0x0137, r29
 8d2:	c0 93 36 01 	sts	0x0136, r28
 8d6:	df 91       	pop	r29
 8d8:	cf 91       	pop	r28
 8da:	08 95       	ret

000008dc <strnlen_P>:
 8dc:	fc 01       	movw	r30, r24
 8de:	05 90       	lpm	r0, Z+
 8e0:	61 50       	subi	r22, 0x01	; 1
 8e2:	70 40       	sbci	r23, 0x00	; 0
 8e4:	01 10       	cpse	r0, r1
 8e6:	d8 f7       	brcc	.-10     	; 0x8de <strnlen_P+0x2>
 8e8:	80 95       	com	r24
 8ea:	90 95       	com	r25
 8ec:	8e 0f       	add	r24, r30
 8ee:	9f 1f       	adc	r25, r31
 8f0:	08 95       	ret

000008f2 <memset>:
 8f2:	dc 01       	movw	r26, r24
 8f4:	01 c0       	rjmp	.+2      	; 0x8f8 <memset+0x6>
 8f6:	6d 93       	st	X+, r22
 8f8:	41 50       	subi	r20, 0x01	; 1
 8fa:	50 40       	sbci	r21, 0x00	; 0
 8fc:	e0 f7       	brcc	.-8      	; 0x8f6 <memset+0x4>
 8fe:	08 95       	ret

00000900 <strnlen>:
 900:	fc 01       	movw	r30, r24
 902:	61 50       	subi	r22, 0x01	; 1
 904:	70 40       	sbci	r23, 0x00	; 0
 906:	01 90       	ld	r0, Z+
 908:	01 10       	cpse	r0, r1
 90a:	d8 f7       	brcc	.-10     	; 0x902 <strnlen+0x2>
 90c:	80 95       	com	r24
 90e:	90 95       	com	r25
 910:	8e 0f       	add	r24, r30
 912:	9f 1f       	adc	r25, r31
 914:	08 95       	ret

00000916 <fputc>:
 916:	0f 93       	push	r16
 918:	1f 93       	push	r17
 91a:	cf 93       	push	r28
 91c:	df 93       	push	r29
 91e:	18 2f       	mov	r17, r24
 920:	09 2f       	mov	r16, r25
 922:	eb 01       	movw	r28, r22
 924:	8b 81       	ldd	r24, Y+3	; 0x03
 926:	81 fd       	sbrc	r24, 1
 928:	03 c0       	rjmp	.+6      	; 0x930 <fputc+0x1a>
 92a:	8f ef       	ldi	r24, 0xFF	; 255
 92c:	9f ef       	ldi	r25, 0xFF	; 255
 92e:	20 c0       	rjmp	.+64     	; 0x970 <fputc+0x5a>
 930:	82 ff       	sbrs	r24, 2
 932:	10 c0       	rjmp	.+32     	; 0x954 <fputc+0x3e>
 934:	4e 81       	ldd	r20, Y+6	; 0x06
 936:	5f 81       	ldd	r21, Y+7	; 0x07
 938:	2c 81       	ldd	r18, Y+4	; 0x04
 93a:	3d 81       	ldd	r19, Y+5	; 0x05
 93c:	42 17       	cp	r20, r18
 93e:	53 07       	cpc	r21, r19
 940:	7c f4       	brge	.+30     	; 0x960 <fputc+0x4a>
 942:	e8 81       	ld	r30, Y
 944:	f9 81       	ldd	r31, Y+1	; 0x01
 946:	9f 01       	movw	r18, r30
 948:	2f 5f       	subi	r18, 0xFF	; 255
 94a:	3f 4f       	sbci	r19, 0xFF	; 255
 94c:	39 83       	std	Y+1, r19	; 0x01
 94e:	28 83       	st	Y, r18
 950:	10 83       	st	Z, r17
 952:	06 c0       	rjmp	.+12     	; 0x960 <fputc+0x4a>
 954:	e8 85       	ldd	r30, Y+8	; 0x08
 956:	f9 85       	ldd	r31, Y+9	; 0x09
 958:	81 2f       	mov	r24, r17
 95a:	09 95       	icall
 95c:	89 2b       	or	r24, r25
 95e:	29 f7       	brne	.-54     	; 0x92a <fputc+0x14>
 960:	2e 81       	ldd	r18, Y+6	; 0x06
 962:	3f 81       	ldd	r19, Y+7	; 0x07
 964:	2f 5f       	subi	r18, 0xFF	; 255
 966:	3f 4f       	sbci	r19, 0xFF	; 255
 968:	3f 83       	std	Y+7, r19	; 0x07
 96a:	2e 83       	std	Y+6, r18	; 0x06
 96c:	81 2f       	mov	r24, r17
 96e:	90 2f       	mov	r25, r16
 970:	df 91       	pop	r29
 972:	cf 91       	pop	r28
 974:	1f 91       	pop	r17
 976:	0f 91       	pop	r16
 978:	08 95       	ret

0000097a <__ultoa_invert>:
 97a:	fa 01       	movw	r30, r20
 97c:	aa 27       	eor	r26, r26
 97e:	28 30       	cpi	r18, 0x08	; 8
 980:	51 f1       	breq	.+84     	; 0x9d6 <__ultoa_invert+0x5c>
 982:	20 31       	cpi	r18, 0x10	; 16
 984:	81 f1       	breq	.+96     	; 0x9e6 <__ultoa_invert+0x6c>
 986:	e8 94       	clt
 988:	6f 93       	push	r22
 98a:	6e 7f       	andi	r22, 0xFE	; 254
 98c:	6e 5f       	subi	r22, 0xFE	; 254
 98e:	7f 4f       	sbci	r23, 0xFF	; 255
 990:	8f 4f       	sbci	r24, 0xFF	; 255
 992:	9f 4f       	sbci	r25, 0xFF	; 255
 994:	af 4f       	sbci	r26, 0xFF	; 255
 996:	b1 e0       	ldi	r27, 0x01	; 1
 998:	3e d0       	rcall	.+124    	; 0xa16 <__ultoa_invert+0x9c>
 99a:	b4 e0       	ldi	r27, 0x04	; 4
 99c:	3c d0       	rcall	.+120    	; 0xa16 <__ultoa_invert+0x9c>
 99e:	67 0f       	add	r22, r23
 9a0:	78 1f       	adc	r23, r24
 9a2:	89 1f       	adc	r24, r25
 9a4:	9a 1f       	adc	r25, r26
 9a6:	a1 1d       	adc	r26, r1
 9a8:	68 0f       	add	r22, r24
 9aa:	79 1f       	adc	r23, r25
 9ac:	8a 1f       	adc	r24, r26
 9ae:	91 1d       	adc	r25, r1
 9b0:	a1 1d       	adc	r26, r1
 9b2:	6a 0f       	add	r22, r26
 9b4:	71 1d       	adc	r23, r1
 9b6:	81 1d       	adc	r24, r1
 9b8:	91 1d       	adc	r25, r1
 9ba:	a1 1d       	adc	r26, r1
 9bc:	20 d0       	rcall	.+64     	; 0x9fe <__ultoa_invert+0x84>
 9be:	09 f4       	brne	.+2      	; 0x9c2 <__ultoa_invert+0x48>
 9c0:	68 94       	set
 9c2:	3f 91       	pop	r19
 9c4:	2a e0       	ldi	r18, 0x0A	; 10
 9c6:	26 9f       	mul	r18, r22
 9c8:	11 24       	eor	r1, r1
 9ca:	30 19       	sub	r19, r0
 9cc:	30 5d       	subi	r19, 0xD0	; 208
 9ce:	31 93       	st	Z+, r19
 9d0:	de f6       	brtc	.-74     	; 0x988 <__ultoa_invert+0xe>
 9d2:	cf 01       	movw	r24, r30
 9d4:	08 95       	ret
 9d6:	46 2f       	mov	r20, r22
 9d8:	47 70       	andi	r20, 0x07	; 7
 9da:	40 5d       	subi	r20, 0xD0	; 208
 9dc:	41 93       	st	Z+, r20
 9de:	b3 e0       	ldi	r27, 0x03	; 3
 9e0:	0f d0       	rcall	.+30     	; 0xa00 <__ultoa_invert+0x86>
 9e2:	c9 f7       	brne	.-14     	; 0x9d6 <__ultoa_invert+0x5c>
 9e4:	f6 cf       	rjmp	.-20     	; 0x9d2 <__ultoa_invert+0x58>
 9e6:	46 2f       	mov	r20, r22
 9e8:	4f 70       	andi	r20, 0x0F	; 15
 9ea:	40 5d       	subi	r20, 0xD0	; 208
 9ec:	4a 33       	cpi	r20, 0x3A	; 58
 9ee:	18 f0       	brcs	.+6      	; 0x9f6 <__ultoa_invert+0x7c>
 9f0:	49 5d       	subi	r20, 0xD9	; 217
 9f2:	31 fd       	sbrc	r19, 1
 9f4:	40 52       	subi	r20, 0x20	; 32
 9f6:	41 93       	st	Z+, r20
 9f8:	02 d0       	rcall	.+4      	; 0x9fe <__ultoa_invert+0x84>
 9fa:	a9 f7       	brne	.-22     	; 0x9e6 <__ultoa_invert+0x6c>
 9fc:	ea cf       	rjmp	.-44     	; 0x9d2 <__ultoa_invert+0x58>
 9fe:	b4 e0       	ldi	r27, 0x04	; 4
 a00:	a6 95       	lsr	r26
 a02:	97 95       	ror	r25
 a04:	87 95       	ror	r24
 a06:	77 95       	ror	r23
 a08:	67 95       	ror	r22
 a0a:	ba 95       	dec	r27
 a0c:	c9 f7       	brne	.-14     	; 0xa00 <__ultoa_invert+0x86>
 a0e:	00 97       	sbiw	r24, 0x00	; 0
 a10:	61 05       	cpc	r22, r1
 a12:	71 05       	cpc	r23, r1
 a14:	08 95       	ret
 a16:	9b 01       	movw	r18, r22
 a18:	ac 01       	movw	r20, r24
 a1a:	0a 2e       	mov	r0, r26
 a1c:	06 94       	lsr	r0
 a1e:	57 95       	ror	r21
 a20:	47 95       	ror	r20
 a22:	37 95       	ror	r19
 a24:	27 95       	ror	r18
 a26:	ba 95       	dec	r27
 a28:	c9 f7       	brne	.-14     	; 0xa1c <__ultoa_invert+0xa2>
 a2a:	62 0f       	add	r22, r18
 a2c:	73 1f       	adc	r23, r19
 a2e:	84 1f       	adc	r24, r20
 a30:	95 1f       	adc	r25, r21
 a32:	a0 1d       	adc	r26, r0
 a34:	08 95       	ret

00000a36 <__prologue_saves__>:
 a36:	2f 92       	push	r2
 a38:	3f 92       	push	r3
 a3a:	4f 92       	push	r4
 a3c:	5f 92       	push	r5
 a3e:	6f 92       	push	r6
 a40:	7f 92       	push	r7
 a42:	8f 92       	push	r8
 a44:	9f 92       	push	r9
 a46:	af 92       	push	r10
 a48:	bf 92       	push	r11
 a4a:	cf 92       	push	r12
 a4c:	df 92       	push	r13
 a4e:	ef 92       	push	r14
 a50:	ff 92       	push	r15
 a52:	0f 93       	push	r16
 a54:	1f 93       	push	r17
 a56:	cf 93       	push	r28
 a58:	df 93       	push	r29
 a5a:	cd b7       	in	r28, 0x3d	; 61
 a5c:	de b7       	in	r29, 0x3e	; 62
 a5e:	ca 1b       	sub	r28, r26
 a60:	db 0b       	sbc	r29, r27
 a62:	0f b6       	in	r0, 0x3f	; 63
 a64:	f8 94       	cli
 a66:	de bf       	out	0x3e, r29	; 62
 a68:	0f be       	out	0x3f, r0	; 63
 a6a:	cd bf       	out	0x3d, r28	; 61
 a6c:	09 94       	ijmp

00000a6e <__epilogue_restores__>:
 a6e:	2a 88       	ldd	r2, Y+18	; 0x12
 a70:	39 88       	ldd	r3, Y+17	; 0x11
 a72:	48 88       	ldd	r4, Y+16	; 0x10
 a74:	5f 84       	ldd	r5, Y+15	; 0x0f
 a76:	6e 84       	ldd	r6, Y+14	; 0x0e
 a78:	7d 84       	ldd	r7, Y+13	; 0x0d
 a7a:	8c 84       	ldd	r8, Y+12	; 0x0c
 a7c:	9b 84       	ldd	r9, Y+11	; 0x0b
 a7e:	aa 84       	ldd	r10, Y+10	; 0x0a
 a80:	b9 84       	ldd	r11, Y+9	; 0x09
 a82:	c8 84       	ldd	r12, Y+8	; 0x08
 a84:	df 80       	ldd	r13, Y+7	; 0x07
 a86:	ee 80       	ldd	r14, Y+6	; 0x06
 a88:	fd 80       	ldd	r15, Y+5	; 0x05
 a8a:	0c 81       	ldd	r16, Y+4	; 0x04
 a8c:	1b 81       	ldd	r17, Y+3	; 0x03
 a8e:	aa 81       	ldd	r26, Y+2	; 0x02
 a90:	b9 81       	ldd	r27, Y+1	; 0x01
 a92:	ce 0f       	add	r28, r30
 a94:	d1 1d       	adc	r29, r1
 a96:	0f b6       	in	r0, 0x3f	; 63
 a98:	f8 94       	cli
 a9a:	de bf       	out	0x3e, r29	; 62
 a9c:	0f be       	out	0x3f, r0	; 63
 a9e:	cd bf       	out	0x3d, r28	; 61
 aa0:	ed 01       	movw	r28, r26
 aa2:	08 95       	ret

00000aa4 <_exit>:
 aa4:	f8 94       	cli

00000aa6 <__stop_program>:
 aa6:	ff cf       	rjmp	.-2      	; 0xaa6 <__stop_program>
