
ATmega162.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  00000a7a  00000b0e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a7a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000e  0080010c  0080010c  00000b1a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000b1a  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000c8  00000000  00000000  00000b76  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000865  00000000  00000000  00000c3e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005d0  00000000  00000000  000014a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004a6  00000000  00000000  00001a73  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000158  00000000  00000000  00001f1c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002ed  00000000  00000000  00002074  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003ee  00000000  00000000  00002361  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000088  00000000  00000000  0000274f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ea e7       	ldi	r30, 0x7A	; 122
  84:	fa e0       	ldi	r31, 0x0A	; 10
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	ac 30       	cpi	r26, 0x0C	; 12
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	ac e0       	ldi	r26, 0x0C	; 12
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	aa 31       	cpi	r26, 0x1A	; 26
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 cc 00 	call	0x198	; 0x198 <main>
  a6:	0c 94 3b 05 	jmp	0xa76	; 0xa76 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <ADC_init>:
#include "../bit_manipulation.h"
#include <avr/io.h>

int ADC_init(void)
{
	set_bit(MCUCR, SRE);
  ae:	85 b7       	in	r24, 0x35	; 53
  b0:	80 68       	ori	r24, 0x80	; 128
  b2:	85 bf       	out	0x35, r24	; 53
	set_bit(SFIOR, XMM2);
  b4:	80 b7       	in	r24, 0x30	; 48
  b6:	80 62       	ori	r24, 0x20	; 32
  b8:	80 bf       	out	0x30, r24	; 48
	
	// Set the interrupt pin to input
	clear_bit(DDRD, PD3);
  ba:	8b 98       	cbi	0x11, 3	; 17
	return 0;
}
  bc:	80 e0       	ldi	r24, 0x00	; 0
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	08 95       	ret

000000c2 <ADC_read>:

uint8_t ADC_read(uint8_t channel)
{
	volatile uint8_t *ext_adc = (uint8_t *) 0x1400; // Start address for the ADC
	
	if (channel > 3){ return 0; }
  c2:	84 30       	cpi	r24, 0x04	; 4
  c4:	40 f4       	brcc	.+16     	; 0xd6 <ADC_read+0x14>
	*ext_adc = 0x04 | channel; // bitwise OR
  c6:	84 60       	ori	r24, 0x04	; 4
  c8:	80 93 00 14 	sts	0x1400, r24
	
	// wait until interrupt is low, which means we can read the converted data
	loop_until_bit_is_clear(PIND, PD3);
  cc:	83 99       	sbic	0x10, 3	; 16
  ce:	fe cf       	rjmp	.-4      	; 0xcc <ADC_read+0xa>
	
	return *ext_adc;
  d0:	80 91 00 14 	lds	r24, 0x1400
  d4:	08 95       	ret

uint8_t ADC_read(uint8_t channel)
{
	volatile uint8_t *ext_adc = (uint8_t *) 0x1400; // Start address for the ADC
	
	if (channel > 3){ return 0; }
  d6:	80 e0       	ldi	r24, 0x00	; 0
	// wait until interrupt is low, which means we can read the converted data
	loop_until_bit_is_clear(PIND, PD3);
	
	return *ext_adc;
	
}
  d8:	08 95       	ret

000000da <JOY_button>:
void JOY_calibrate( void ){
	neutral_pos = JOY_read_adc();
}

int JOY_button( int button ){
	switch (button) {
  da:	81 30       	cpi	r24, 0x01	; 1
  dc:	91 05       	cpc	r25, r1
  de:	59 f0       	breq	.+22     	; 0xf6 <JOY_button+0x1c>
  e0:	82 30       	cpi	r24, 0x02	; 2
  e2:	91 05       	cpc	r25, r1
  e4:	69 f0       	breq	.+26     	; 0x100 <JOY_button+0x26>
  e6:	89 2b       	or	r24, r25
  e8:	89 f4       	brne	.+34     	; 0x10c <JOY_button+0x32>
		case JOY_BUTTON:
			return !(test_bit(PINB, PINB0));
  ea:	96 b3       	in	r25, 0x16	; 22
  ec:	81 e0       	ldi	r24, 0x01	; 1
  ee:	89 27       	eor	r24, r25
  f0:	81 70       	andi	r24, 0x01	; 1
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	08 95       	ret
			break;
		case LEFT_BUTTON:
			if(test_bit(PINB, PB1)) { return 1; }
  f6:	86 b3       	in	r24, 0x16	; 22
}

int JOY_button( int button ){
	switch (button) {
		case JOY_BUTTON:
			return !(test_bit(PINB, PINB0));
  f8:	86 95       	lsr	r24
  fa:	81 70       	andi	r24, 0x01	; 1
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	08 95       	ret
			break;
		case LEFT_BUTTON:
			if(test_bit(PINB, PB1)) { return 1; }
			break;
		case RIGHT_BUTTON:
			if(test_bit(PINB, PB2)) { return 1; }
 100:	86 b3       	in	r24, 0x16	; 22
}

int JOY_button( int button ){
	switch (button) {
		case JOY_BUTTON:
			return !(test_bit(PINB, PINB0));
 102:	82 fb       	bst	r24, 2
 104:	88 27       	eor	r24, r24
 106:	80 f9       	bld	r24, 0
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	08 95       	ret
			break;
		case RIGHT_BUTTON:
			if(test_bit(PINB, PB2)) { return 1; }
			break;
		default:
			return 0;
 10c:	80 e0       	ldi	r24, 0x00	; 0
 10e:	90 e0       	ldi	r25, 0x00	; 0
	}
	return 0;

}
 110:	08 95       	ret

00000112 <JOY_read_adc>:

JOY_position_t JOY_read_adc( void ){
 112:	cf 93       	push	r28
	JOY_position_t pos;
	pos.y = ADC_read(Y_POS_CHANNEL);
 114:	80 e0       	ldi	r24, 0x00	; 0
 116:	0e 94 61 00 	call	0xc2	; 0xc2 <ADC_read>
 11a:	c8 2f       	mov	r28, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 11c:	8c ec       	ldi	r24, 0xCC	; 204
 11e:	94 e0       	ldi	r25, 0x04	; 4
 120:	01 97       	sbiw	r24, 0x01	; 1
 122:	f1 f7       	brne	.-4      	; 0x120 <JOY_read_adc+0xe>
 124:	00 c0       	rjmp	.+0      	; 0x126 <JOY_read_adc+0x14>
 126:	00 00       	nop
	_delay_ms(1);
	pos.x = ADC_read(X_POS_CHANNEL);
 128:	81 e0       	ldi	r24, 0x01	; 1
 12a:	0e 94 61 00 	call	0xc2	; 0xc2 <ADC_read>
 12e:	28 2f       	mov	r18, r24
	
	return pos;
 130:	6c 2f       	mov	r22, r28
 132:	70 e0       	ldi	r23, 0x00	; 0
 134:	82 2f       	mov	r24, r18
 136:	90 e0       	ldi	r25, 0x00	; 0
}
 138:	cf 91       	pop	r28
 13a:	08 95       	ret

0000013c <JOY_calibrate>:
	
	
}

void JOY_calibrate( void ){
	neutral_pos = JOY_read_adc();
 13c:	0e 94 89 00 	call	0x112	; 0x112 <JOY_read_adc>
 140:	60 93 0c 01 	sts	0x010C, r22
 144:	70 93 0d 01 	sts	0x010D, r23
 148:	80 93 0e 01 	sts	0x010E, r24
 14c:	90 93 0f 01 	sts	0x010F, r25
 150:	08 95       	ret

00000152 <JOY_init>:

JOY_position_t neutral_pos; 


void JOY_init( void ){
	ADC_init();
 152:	0e 94 57 00 	call	0xae	; 0xae <ADC_init>
	JOY_calibrate();
 156:	0e 94 9e 00 	call	0x13c	; 0x13c <JOY_calibrate>
	
	// Initialize PORT B, pin 0, 1 and 2 as input
	clear_bit(DDRB, PINB0);
 15a:	b8 98       	cbi	0x17, 0	; 23
	clear_bit(DDRB, PINB1);
 15c:	b9 98       	cbi	0x17, 1	; 23
	clear_bit(DDRB, PINB2);
 15e:	ba 98       	cbi	0x17, 2	; 23
	
	// Activate pull-up resistor for joystick button
	set_bit(PORTB, PB0);
 160:	c0 9a       	sbi	0x18, 0	; 24
 162:	08 95       	ret

00000164 <UART_Transmit>:

// transmit data
void UART_Transmit (unsigned char data)
{
	// Wait for empty transmit buffer
	while (!( UCSR0A & (1<<UDRE0))); 
 164:	5d 9b       	sbis	0x0b, 5	; 11
 166:	fe cf       	rjmp	.-4      	; 0x164 <UART_Transmit>
	
	// Put data into buffer, sends the data
	UDR0 = data;  
 168:	8c b9       	out	0x0c, r24	; 12
 16a:	08 95       	ret

0000016c <UART_Recieve>:

// function to receive data
unsigned char UART_Recieve (void)
{
	//Wait for data to be received
	while(!(UCSR0A) & (1<<RXC0));  
 16c:	8b b1       	in	r24, 0x0b	; 11
	
	//Get and return received data from buffer
	return UDR0;  
 16e:	8c b1       	in	r24, 0x0c	; 12
 170:	08 95       	ret

00000172 <UART_Init>:

void UART_Init( unsigned int ubrr ){
	/* 
	Set baud rate
	 */
	UBRR0H |= (unsigned char)(ubrr>>8);
 172:	20 b5       	in	r18, 0x20	; 32
 174:	92 2b       	or	r25, r18
 176:	90 bd       	out	0x20, r25	; 32
	UBRR0L |= (unsigned char)ubrr;
 178:	99 b1       	in	r25, 0x09	; 9
 17a:	89 2b       	or	r24, r25
 17c:	89 b9       	out	0x09, r24	; 9
	/* 
	Enable receiver and transmitter
	 */
	UCSR0B |= (1<<RXEN0)|(1<<TXEN0);
 17e:	8a b1       	in	r24, 0x0a	; 10
 180:	88 61       	ori	r24, 0x18	; 24
 182:	8a b9       	out	0x0a, r24	; 10
	/* 
	Set frame format: 8data, 2stop bit
	 */
	UCSR0C |= (1<<URSEL0)|(1<<USBS0)|(1<<UCSZ00)|(1<<UCSZ01);
 184:	80 b5       	in	r24, 0x20	; 32
 186:	8e 68       	ori	r24, 0x8E	; 142
 188:	80 bd       	out	0x20, r24	; 32
	
	fdevopen(&UART_Transmit, &UART_Recieve);
 18a:	66 eb       	ldi	r22, 0xB6	; 182
 18c:	70 e0       	ldi	r23, 0x00	; 0
 18e:	82 eb       	ldi	r24, 0xB2	; 178
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <fdevopen>
 196:	08 95       	ret

00000198 <main>:
#include <avr/io.h>
#include <util/delay.h>

int main( void ){
	
	UART_Init( MYUBRR );
 198:	8f e1       	ldi	r24, 0x1F	; 31
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	0e 94 b9 00 	call	0x172	; 0x172 <UART_Init>
	JOY_init();
 1a0:	0e 94 a9 00 	call	0x152	; 0x152 <JOY_init>
		int posX = ADC_read(X_POS_CHANNEL);
		printf("Y: %d %% \t X: %d %%\n", (int)posY, (int)posX);
		*/
		
		buttonPress = JOY_button(JOY_BUTTON);
		printf("%d \n", buttonPress);
 1a4:	c6 e0       	ldi	r28, 0x06	; 6
 1a6:	d1 e0       	ldi	r29, 0x01	; 1
		_delay_ms(1);
		int posX = ADC_read(X_POS_CHANNEL);
		printf("Y: %d %% \t X: %d %%\n", (int)posY, (int)posX);
		*/
		
		buttonPress = JOY_button(JOY_BUTTON);
 1a8:	80 e0       	ldi	r24, 0x00	; 0
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	0e 94 6d 00 	call	0xda	; 0xda <JOY_button>
		printf("%d \n", buttonPress);
 1b0:	9f 93       	push	r25
 1b2:	8f 93       	push	r24
 1b4:	df 93       	push	r29
 1b6:	cf 93       	push	r28
 1b8:	0e 94 2e 01 	call	0x25c	; 0x25c <printf>
 1bc:	0f 90       	pop	r0
 1be:	0f 90       	pop	r0
 1c0:	0f 90       	pop	r0
 1c2:	0f 90       	pop	r0
 1c4:	f1 cf       	rjmp	.-30     	; 0x1a8 <main+0x10>

000001c6 <fdevopen>:
 1c6:	0f 93       	push	r16
 1c8:	1f 93       	push	r17
 1ca:	cf 93       	push	r28
 1cc:	df 93       	push	r29
 1ce:	ec 01       	movw	r28, r24
 1d0:	8b 01       	movw	r16, r22
 1d2:	00 97       	sbiw	r24, 0x00	; 0
 1d4:	31 f4       	brne	.+12     	; 0x1e2 <fdevopen+0x1c>
 1d6:	61 15       	cp	r22, r1
 1d8:	71 05       	cpc	r23, r1
 1da:	19 f4       	brne	.+6      	; 0x1e2 <fdevopen+0x1c>
 1dc:	80 e0       	ldi	r24, 0x00	; 0
 1de:	90 e0       	ldi	r25, 0x00	; 0
 1e0:	38 c0       	rjmp	.+112    	; 0x252 <fdevopen+0x8c>
 1e2:	6e e0       	ldi	r22, 0x0E	; 14
 1e4:	70 e0       	ldi	r23, 0x00	; 0
 1e6:	81 e0       	ldi	r24, 0x01	; 1
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	0e 94 14 03 	call	0x628	; 0x628 <calloc>
 1ee:	fc 01       	movw	r30, r24
 1f0:	00 97       	sbiw	r24, 0x00	; 0
 1f2:	a1 f3       	breq	.-24     	; 0x1dc <fdevopen+0x16>
 1f4:	80 e8       	ldi	r24, 0x80	; 128
 1f6:	83 83       	std	Z+3, r24	; 0x03
 1f8:	01 15       	cp	r16, r1
 1fa:	11 05       	cpc	r17, r1
 1fc:	71 f0       	breq	.+28     	; 0x21a <fdevopen+0x54>
 1fe:	13 87       	std	Z+11, r17	; 0x0b
 200:	02 87       	std	Z+10, r16	; 0x0a
 202:	81 e8       	ldi	r24, 0x81	; 129
 204:	83 83       	std	Z+3, r24	; 0x03
 206:	80 91 10 01 	lds	r24, 0x0110
 20a:	90 91 11 01 	lds	r25, 0x0111
 20e:	89 2b       	or	r24, r25
 210:	21 f4       	brne	.+8      	; 0x21a <fdevopen+0x54>
 212:	f0 93 11 01 	sts	0x0111, r31
 216:	e0 93 10 01 	sts	0x0110, r30
 21a:	20 97       	sbiw	r28, 0x00	; 0
 21c:	c9 f0       	breq	.+50     	; 0x250 <fdevopen+0x8a>
 21e:	d1 87       	std	Z+9, r29	; 0x09
 220:	c0 87       	std	Z+8, r28	; 0x08
 222:	83 81       	ldd	r24, Z+3	; 0x03
 224:	82 60       	ori	r24, 0x02	; 2
 226:	83 83       	std	Z+3, r24	; 0x03
 228:	80 91 12 01 	lds	r24, 0x0112
 22c:	90 91 13 01 	lds	r25, 0x0113
 230:	89 2b       	or	r24, r25
 232:	71 f4       	brne	.+28     	; 0x250 <fdevopen+0x8a>
 234:	f0 93 13 01 	sts	0x0113, r31
 238:	e0 93 12 01 	sts	0x0112, r30
 23c:	80 91 14 01 	lds	r24, 0x0114
 240:	90 91 15 01 	lds	r25, 0x0115
 244:	89 2b       	or	r24, r25
 246:	21 f4       	brne	.+8      	; 0x250 <fdevopen+0x8a>
 248:	f0 93 15 01 	sts	0x0115, r31
 24c:	e0 93 14 01 	sts	0x0114, r30
 250:	cf 01       	movw	r24, r30
 252:	df 91       	pop	r29
 254:	cf 91       	pop	r28
 256:	1f 91       	pop	r17
 258:	0f 91       	pop	r16
 25a:	08 95       	ret

0000025c <printf>:
 25c:	a0 e0       	ldi	r26, 0x00	; 0
 25e:	b0 e0       	ldi	r27, 0x00	; 0
 260:	e4 e3       	ldi	r30, 0x34	; 52
 262:	f1 e0       	ldi	r31, 0x01	; 1
 264:	0c 94 14 05 	jmp	0xa28	; 0xa28 <__prologue_saves__+0x20>
 268:	fe 01       	movw	r30, r28
 26a:	35 96       	adiw	r30, 0x05	; 5
 26c:	61 91       	ld	r22, Z+
 26e:	71 91       	ld	r23, Z+
 270:	af 01       	movw	r20, r30
 272:	80 91 12 01 	lds	r24, 0x0112
 276:	90 91 13 01 	lds	r25, 0x0113
 27a:	0e 94 42 01 	call	0x284	; 0x284 <vfprintf>
 27e:	e2 e0       	ldi	r30, 0x02	; 2
 280:	0c 94 30 05 	jmp	0xa60	; 0xa60 <__epilogue_restores__+0x20>

00000284 <vfprintf>:
 284:	ac e0       	ldi	r26, 0x0C	; 12
 286:	b0 e0       	ldi	r27, 0x00	; 0
 288:	e8 e4       	ldi	r30, 0x48	; 72
 28a:	f1 e0       	ldi	r31, 0x01	; 1
 28c:	0c 94 04 05 	jmp	0xa08	; 0xa08 <__prologue_saves__>
 290:	7c 01       	movw	r14, r24
 292:	6b 01       	movw	r12, r22
 294:	8a 01       	movw	r16, r20
 296:	fc 01       	movw	r30, r24
 298:	17 82       	std	Z+7, r1	; 0x07
 29a:	16 82       	std	Z+6, r1	; 0x06
 29c:	83 81       	ldd	r24, Z+3	; 0x03
 29e:	81 ff       	sbrs	r24, 1
 2a0:	bd c1       	rjmp	.+890    	; 0x61c <__stack+0x11d>
 2a2:	ce 01       	movw	r24, r28
 2a4:	01 96       	adiw	r24, 0x01	; 1
 2a6:	4c 01       	movw	r8, r24
 2a8:	f7 01       	movw	r30, r14
 2aa:	93 81       	ldd	r25, Z+3	; 0x03
 2ac:	f6 01       	movw	r30, r12
 2ae:	93 fd       	sbrc	r25, 3
 2b0:	85 91       	lpm	r24, Z+
 2b2:	93 ff       	sbrs	r25, 3
 2b4:	81 91       	ld	r24, Z+
 2b6:	6f 01       	movw	r12, r30
 2b8:	88 23       	and	r24, r24
 2ba:	09 f4       	brne	.+2      	; 0x2be <vfprintf+0x3a>
 2bc:	ab c1       	rjmp	.+854    	; 0x614 <__stack+0x115>
 2be:	85 32       	cpi	r24, 0x25	; 37
 2c0:	39 f4       	brne	.+14     	; 0x2d0 <vfprintf+0x4c>
 2c2:	93 fd       	sbrc	r25, 3
 2c4:	85 91       	lpm	r24, Z+
 2c6:	93 ff       	sbrs	r25, 3
 2c8:	81 91       	ld	r24, Z+
 2ca:	6f 01       	movw	r12, r30
 2cc:	85 32       	cpi	r24, 0x25	; 37
 2ce:	29 f4       	brne	.+10     	; 0x2da <vfprintf+0x56>
 2d0:	b7 01       	movw	r22, r14
 2d2:	90 e0       	ldi	r25, 0x00	; 0
 2d4:	0e 94 74 04 	call	0x8e8	; 0x8e8 <fputc>
 2d8:	e7 cf       	rjmp	.-50     	; 0x2a8 <vfprintf+0x24>
 2da:	51 2c       	mov	r5, r1
 2dc:	31 2c       	mov	r3, r1
 2de:	20 e0       	ldi	r18, 0x00	; 0
 2e0:	20 32       	cpi	r18, 0x20	; 32
 2e2:	a0 f4       	brcc	.+40     	; 0x30c <vfprintf+0x88>
 2e4:	8b 32       	cpi	r24, 0x2B	; 43
 2e6:	69 f0       	breq	.+26     	; 0x302 <vfprintf+0x7e>
 2e8:	30 f4       	brcc	.+12     	; 0x2f6 <vfprintf+0x72>
 2ea:	80 32       	cpi	r24, 0x20	; 32
 2ec:	59 f0       	breq	.+22     	; 0x304 <vfprintf+0x80>
 2ee:	83 32       	cpi	r24, 0x23	; 35
 2f0:	69 f4       	brne	.+26     	; 0x30c <vfprintf+0x88>
 2f2:	20 61       	ori	r18, 0x10	; 16
 2f4:	2c c0       	rjmp	.+88     	; 0x34e <vfprintf+0xca>
 2f6:	8d 32       	cpi	r24, 0x2D	; 45
 2f8:	39 f0       	breq	.+14     	; 0x308 <vfprintf+0x84>
 2fa:	80 33       	cpi	r24, 0x30	; 48
 2fc:	39 f4       	brne	.+14     	; 0x30c <vfprintf+0x88>
 2fe:	21 60       	ori	r18, 0x01	; 1
 300:	26 c0       	rjmp	.+76     	; 0x34e <vfprintf+0xca>
 302:	22 60       	ori	r18, 0x02	; 2
 304:	24 60       	ori	r18, 0x04	; 4
 306:	23 c0       	rjmp	.+70     	; 0x34e <vfprintf+0xca>
 308:	28 60       	ori	r18, 0x08	; 8
 30a:	21 c0       	rjmp	.+66     	; 0x34e <vfprintf+0xca>
 30c:	27 fd       	sbrc	r18, 7
 30e:	27 c0       	rjmp	.+78     	; 0x35e <vfprintf+0xda>
 310:	30 ed       	ldi	r19, 0xD0	; 208
 312:	38 0f       	add	r19, r24
 314:	3a 30       	cpi	r19, 0x0A	; 10
 316:	78 f4       	brcc	.+30     	; 0x336 <vfprintf+0xb2>
 318:	26 ff       	sbrs	r18, 6
 31a:	06 c0       	rjmp	.+12     	; 0x328 <vfprintf+0xa4>
 31c:	fa e0       	ldi	r31, 0x0A	; 10
 31e:	5f 9e       	mul	r5, r31
 320:	30 0d       	add	r19, r0
 322:	11 24       	eor	r1, r1
 324:	53 2e       	mov	r5, r19
 326:	13 c0       	rjmp	.+38     	; 0x34e <vfprintf+0xca>
 328:	8a e0       	ldi	r24, 0x0A	; 10
 32a:	38 9e       	mul	r3, r24
 32c:	30 0d       	add	r19, r0
 32e:	11 24       	eor	r1, r1
 330:	33 2e       	mov	r3, r19
 332:	20 62       	ori	r18, 0x20	; 32
 334:	0c c0       	rjmp	.+24     	; 0x34e <vfprintf+0xca>
 336:	8e 32       	cpi	r24, 0x2E	; 46
 338:	21 f4       	brne	.+8      	; 0x342 <vfprintf+0xbe>
 33a:	26 fd       	sbrc	r18, 6
 33c:	6b c1       	rjmp	.+726    	; 0x614 <__stack+0x115>
 33e:	20 64       	ori	r18, 0x40	; 64
 340:	06 c0       	rjmp	.+12     	; 0x34e <vfprintf+0xca>
 342:	8c 36       	cpi	r24, 0x6C	; 108
 344:	11 f4       	brne	.+4      	; 0x34a <vfprintf+0xc6>
 346:	20 68       	ori	r18, 0x80	; 128
 348:	02 c0       	rjmp	.+4      	; 0x34e <vfprintf+0xca>
 34a:	88 36       	cpi	r24, 0x68	; 104
 34c:	41 f4       	brne	.+16     	; 0x35e <vfprintf+0xda>
 34e:	f6 01       	movw	r30, r12
 350:	93 fd       	sbrc	r25, 3
 352:	85 91       	lpm	r24, Z+
 354:	93 ff       	sbrs	r25, 3
 356:	81 91       	ld	r24, Z+
 358:	6f 01       	movw	r12, r30
 35a:	81 11       	cpse	r24, r1
 35c:	c1 cf       	rjmp	.-126    	; 0x2e0 <vfprintf+0x5c>
 35e:	98 2f       	mov	r25, r24
 360:	9f 7d       	andi	r25, 0xDF	; 223
 362:	95 54       	subi	r25, 0x45	; 69
 364:	93 30       	cpi	r25, 0x03	; 3
 366:	28 f4       	brcc	.+10     	; 0x372 <vfprintf+0xee>
 368:	0c 5f       	subi	r16, 0xFC	; 252
 36a:	1f 4f       	sbci	r17, 0xFF	; 255
 36c:	ff e3       	ldi	r31, 0x3F	; 63
 36e:	f9 83       	std	Y+1, r31	; 0x01
 370:	0d c0       	rjmp	.+26     	; 0x38c <vfprintf+0x108>
 372:	83 36       	cpi	r24, 0x63	; 99
 374:	31 f0       	breq	.+12     	; 0x382 <vfprintf+0xfe>
 376:	83 37       	cpi	r24, 0x73	; 115
 378:	71 f0       	breq	.+28     	; 0x396 <vfprintf+0x112>
 37a:	83 35       	cpi	r24, 0x53	; 83
 37c:	09 f0       	breq	.+2      	; 0x380 <vfprintf+0xfc>
 37e:	5b c0       	rjmp	.+182    	; 0x436 <vfprintf+0x1b2>
 380:	22 c0       	rjmp	.+68     	; 0x3c6 <vfprintf+0x142>
 382:	f8 01       	movw	r30, r16
 384:	80 81       	ld	r24, Z
 386:	89 83       	std	Y+1, r24	; 0x01
 388:	0e 5f       	subi	r16, 0xFE	; 254
 38a:	1f 4f       	sbci	r17, 0xFF	; 255
 38c:	44 24       	eor	r4, r4
 38e:	43 94       	inc	r4
 390:	51 2c       	mov	r5, r1
 392:	54 01       	movw	r10, r8
 394:	15 c0       	rjmp	.+42     	; 0x3c0 <vfprintf+0x13c>
 396:	38 01       	movw	r6, r16
 398:	f2 e0       	ldi	r31, 0x02	; 2
 39a:	6f 0e       	add	r6, r31
 39c:	71 1c       	adc	r7, r1
 39e:	f8 01       	movw	r30, r16
 3a0:	a0 80       	ld	r10, Z
 3a2:	b1 80       	ldd	r11, Z+1	; 0x01
 3a4:	26 ff       	sbrs	r18, 6
 3a6:	03 c0       	rjmp	.+6      	; 0x3ae <vfprintf+0x12a>
 3a8:	65 2d       	mov	r22, r5
 3aa:	70 e0       	ldi	r23, 0x00	; 0
 3ac:	02 c0       	rjmp	.+4      	; 0x3b2 <vfprintf+0x12e>
 3ae:	6f ef       	ldi	r22, 0xFF	; 255
 3b0:	7f ef       	ldi	r23, 0xFF	; 255
 3b2:	c5 01       	movw	r24, r10
 3b4:	2c 87       	std	Y+12, r18	; 0x0c
 3b6:	0e 94 69 04 	call	0x8d2	; 0x8d2 <strnlen>
 3ba:	2c 01       	movw	r4, r24
 3bc:	83 01       	movw	r16, r6
 3be:	2c 85       	ldd	r18, Y+12	; 0x0c
 3c0:	2f 77       	andi	r18, 0x7F	; 127
 3c2:	22 2e       	mov	r2, r18
 3c4:	17 c0       	rjmp	.+46     	; 0x3f4 <vfprintf+0x170>
 3c6:	38 01       	movw	r6, r16
 3c8:	f2 e0       	ldi	r31, 0x02	; 2
 3ca:	6f 0e       	add	r6, r31
 3cc:	71 1c       	adc	r7, r1
 3ce:	f8 01       	movw	r30, r16
 3d0:	a0 80       	ld	r10, Z
 3d2:	b1 80       	ldd	r11, Z+1	; 0x01
 3d4:	26 ff       	sbrs	r18, 6
 3d6:	03 c0       	rjmp	.+6      	; 0x3de <vfprintf+0x15a>
 3d8:	65 2d       	mov	r22, r5
 3da:	70 e0       	ldi	r23, 0x00	; 0
 3dc:	02 c0       	rjmp	.+4      	; 0x3e2 <vfprintf+0x15e>
 3de:	6f ef       	ldi	r22, 0xFF	; 255
 3e0:	7f ef       	ldi	r23, 0xFF	; 255
 3e2:	c5 01       	movw	r24, r10
 3e4:	2c 87       	std	Y+12, r18	; 0x0c
 3e6:	0e 94 57 04 	call	0x8ae	; 0x8ae <strnlen_P>
 3ea:	2c 01       	movw	r4, r24
 3ec:	2c 85       	ldd	r18, Y+12	; 0x0c
 3ee:	20 68       	ori	r18, 0x80	; 128
 3f0:	22 2e       	mov	r2, r18
 3f2:	83 01       	movw	r16, r6
 3f4:	23 fc       	sbrc	r2, 3
 3f6:	1b c0       	rjmp	.+54     	; 0x42e <vfprintf+0x1aa>
 3f8:	83 2d       	mov	r24, r3
 3fa:	90 e0       	ldi	r25, 0x00	; 0
 3fc:	48 16       	cp	r4, r24
 3fe:	59 06       	cpc	r5, r25
 400:	b0 f4       	brcc	.+44     	; 0x42e <vfprintf+0x1aa>
 402:	b7 01       	movw	r22, r14
 404:	80 e2       	ldi	r24, 0x20	; 32
 406:	90 e0       	ldi	r25, 0x00	; 0
 408:	0e 94 74 04 	call	0x8e8	; 0x8e8 <fputc>
 40c:	3a 94       	dec	r3
 40e:	f4 cf       	rjmp	.-24     	; 0x3f8 <vfprintf+0x174>
 410:	f5 01       	movw	r30, r10
 412:	27 fc       	sbrc	r2, 7
 414:	85 91       	lpm	r24, Z+
 416:	27 fe       	sbrs	r2, 7
 418:	81 91       	ld	r24, Z+
 41a:	5f 01       	movw	r10, r30
 41c:	b7 01       	movw	r22, r14
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	0e 94 74 04 	call	0x8e8	; 0x8e8 <fputc>
 424:	31 10       	cpse	r3, r1
 426:	3a 94       	dec	r3
 428:	f1 e0       	ldi	r31, 0x01	; 1
 42a:	4f 1a       	sub	r4, r31
 42c:	51 08       	sbc	r5, r1
 42e:	41 14       	cp	r4, r1
 430:	51 04       	cpc	r5, r1
 432:	71 f7       	brne	.-36     	; 0x410 <vfprintf+0x18c>
 434:	e5 c0       	rjmp	.+458    	; 0x600 <__stack+0x101>
 436:	84 36       	cpi	r24, 0x64	; 100
 438:	11 f0       	breq	.+4      	; 0x43e <vfprintf+0x1ba>
 43a:	89 36       	cpi	r24, 0x69	; 105
 43c:	39 f5       	brne	.+78     	; 0x48c <vfprintf+0x208>
 43e:	f8 01       	movw	r30, r16
 440:	27 ff       	sbrs	r18, 7
 442:	07 c0       	rjmp	.+14     	; 0x452 <vfprintf+0x1ce>
 444:	60 81       	ld	r22, Z
 446:	71 81       	ldd	r23, Z+1	; 0x01
 448:	82 81       	ldd	r24, Z+2	; 0x02
 44a:	93 81       	ldd	r25, Z+3	; 0x03
 44c:	0c 5f       	subi	r16, 0xFC	; 252
 44e:	1f 4f       	sbci	r17, 0xFF	; 255
 450:	08 c0       	rjmp	.+16     	; 0x462 <vfprintf+0x1de>
 452:	60 81       	ld	r22, Z
 454:	71 81       	ldd	r23, Z+1	; 0x01
 456:	88 27       	eor	r24, r24
 458:	77 fd       	sbrc	r23, 7
 45a:	80 95       	com	r24
 45c:	98 2f       	mov	r25, r24
 45e:	0e 5f       	subi	r16, 0xFE	; 254
 460:	1f 4f       	sbci	r17, 0xFF	; 255
 462:	2f 76       	andi	r18, 0x6F	; 111
 464:	b2 2e       	mov	r11, r18
 466:	97 ff       	sbrs	r25, 7
 468:	09 c0       	rjmp	.+18     	; 0x47c <vfprintf+0x1f8>
 46a:	90 95       	com	r25
 46c:	80 95       	com	r24
 46e:	70 95       	com	r23
 470:	61 95       	neg	r22
 472:	7f 4f       	sbci	r23, 0xFF	; 255
 474:	8f 4f       	sbci	r24, 0xFF	; 255
 476:	9f 4f       	sbci	r25, 0xFF	; 255
 478:	20 68       	ori	r18, 0x80	; 128
 47a:	b2 2e       	mov	r11, r18
 47c:	2a e0       	ldi	r18, 0x0A	; 10
 47e:	30 e0       	ldi	r19, 0x00	; 0
 480:	a4 01       	movw	r20, r8
 482:	0e 94 a6 04 	call	0x94c	; 0x94c <__ultoa_invert>
 486:	a8 2e       	mov	r10, r24
 488:	a8 18       	sub	r10, r8
 48a:	44 c0       	rjmp	.+136    	; 0x514 <__stack+0x15>
 48c:	85 37       	cpi	r24, 0x75	; 117
 48e:	29 f4       	brne	.+10     	; 0x49a <vfprintf+0x216>
 490:	2f 7e       	andi	r18, 0xEF	; 239
 492:	b2 2e       	mov	r11, r18
 494:	2a e0       	ldi	r18, 0x0A	; 10
 496:	30 e0       	ldi	r19, 0x00	; 0
 498:	25 c0       	rjmp	.+74     	; 0x4e4 <vfprintf+0x260>
 49a:	f2 2f       	mov	r31, r18
 49c:	f9 7f       	andi	r31, 0xF9	; 249
 49e:	bf 2e       	mov	r11, r31
 4a0:	8f 36       	cpi	r24, 0x6F	; 111
 4a2:	c1 f0       	breq	.+48     	; 0x4d4 <vfprintf+0x250>
 4a4:	18 f4       	brcc	.+6      	; 0x4ac <vfprintf+0x228>
 4a6:	88 35       	cpi	r24, 0x58	; 88
 4a8:	79 f0       	breq	.+30     	; 0x4c8 <vfprintf+0x244>
 4aa:	b4 c0       	rjmp	.+360    	; 0x614 <__stack+0x115>
 4ac:	80 37       	cpi	r24, 0x70	; 112
 4ae:	19 f0       	breq	.+6      	; 0x4b6 <vfprintf+0x232>
 4b0:	88 37       	cpi	r24, 0x78	; 120
 4b2:	21 f0       	breq	.+8      	; 0x4bc <vfprintf+0x238>
 4b4:	af c0       	rjmp	.+350    	; 0x614 <__stack+0x115>
 4b6:	2f 2f       	mov	r18, r31
 4b8:	20 61       	ori	r18, 0x10	; 16
 4ba:	b2 2e       	mov	r11, r18
 4bc:	b4 fe       	sbrs	r11, 4
 4be:	0d c0       	rjmp	.+26     	; 0x4da <vfprintf+0x256>
 4c0:	8b 2d       	mov	r24, r11
 4c2:	84 60       	ori	r24, 0x04	; 4
 4c4:	b8 2e       	mov	r11, r24
 4c6:	09 c0       	rjmp	.+18     	; 0x4da <vfprintf+0x256>
 4c8:	24 ff       	sbrs	r18, 4
 4ca:	0a c0       	rjmp	.+20     	; 0x4e0 <vfprintf+0x25c>
 4cc:	9f 2f       	mov	r25, r31
 4ce:	96 60       	ori	r25, 0x06	; 6
 4d0:	b9 2e       	mov	r11, r25
 4d2:	06 c0       	rjmp	.+12     	; 0x4e0 <vfprintf+0x25c>
 4d4:	28 e0       	ldi	r18, 0x08	; 8
 4d6:	30 e0       	ldi	r19, 0x00	; 0
 4d8:	05 c0       	rjmp	.+10     	; 0x4e4 <vfprintf+0x260>
 4da:	20 e1       	ldi	r18, 0x10	; 16
 4dc:	30 e0       	ldi	r19, 0x00	; 0
 4de:	02 c0       	rjmp	.+4      	; 0x4e4 <vfprintf+0x260>
 4e0:	20 e1       	ldi	r18, 0x10	; 16
 4e2:	32 e0       	ldi	r19, 0x02	; 2
 4e4:	f8 01       	movw	r30, r16
 4e6:	b7 fe       	sbrs	r11, 7
 4e8:	07 c0       	rjmp	.+14     	; 0x4f8 <vfprintf+0x274>
 4ea:	60 81       	ld	r22, Z
 4ec:	71 81       	ldd	r23, Z+1	; 0x01
 4ee:	82 81       	ldd	r24, Z+2	; 0x02
 4f0:	93 81       	ldd	r25, Z+3	; 0x03
 4f2:	0c 5f       	subi	r16, 0xFC	; 252
 4f4:	1f 4f       	sbci	r17, 0xFF	; 255
 4f6:	06 c0       	rjmp	.+12     	; 0x504 <__stack+0x5>
 4f8:	60 81       	ld	r22, Z
 4fa:	71 81       	ldd	r23, Z+1	; 0x01
 4fc:	80 e0       	ldi	r24, 0x00	; 0
 4fe:	90 e0       	ldi	r25, 0x00	; 0
 500:	0e 5f       	subi	r16, 0xFE	; 254
 502:	1f 4f       	sbci	r17, 0xFF	; 255
 504:	a4 01       	movw	r20, r8
 506:	0e 94 a6 04 	call	0x94c	; 0x94c <__ultoa_invert>
 50a:	a8 2e       	mov	r10, r24
 50c:	a8 18       	sub	r10, r8
 50e:	fb 2d       	mov	r31, r11
 510:	ff 77       	andi	r31, 0x7F	; 127
 512:	bf 2e       	mov	r11, r31
 514:	b6 fe       	sbrs	r11, 6
 516:	0b c0       	rjmp	.+22     	; 0x52e <__stack+0x2f>
 518:	2b 2d       	mov	r18, r11
 51a:	2e 7f       	andi	r18, 0xFE	; 254
 51c:	a5 14       	cp	r10, r5
 51e:	50 f4       	brcc	.+20     	; 0x534 <__stack+0x35>
 520:	b4 fe       	sbrs	r11, 4
 522:	0a c0       	rjmp	.+20     	; 0x538 <__stack+0x39>
 524:	b2 fc       	sbrc	r11, 2
 526:	08 c0       	rjmp	.+16     	; 0x538 <__stack+0x39>
 528:	2b 2d       	mov	r18, r11
 52a:	2e 7e       	andi	r18, 0xEE	; 238
 52c:	05 c0       	rjmp	.+10     	; 0x538 <__stack+0x39>
 52e:	7a 2c       	mov	r7, r10
 530:	2b 2d       	mov	r18, r11
 532:	03 c0       	rjmp	.+6      	; 0x53a <__stack+0x3b>
 534:	7a 2c       	mov	r7, r10
 536:	01 c0       	rjmp	.+2      	; 0x53a <__stack+0x3b>
 538:	75 2c       	mov	r7, r5
 53a:	24 ff       	sbrs	r18, 4
 53c:	0d c0       	rjmp	.+26     	; 0x558 <__stack+0x59>
 53e:	fe 01       	movw	r30, r28
 540:	ea 0d       	add	r30, r10
 542:	f1 1d       	adc	r31, r1
 544:	80 81       	ld	r24, Z
 546:	80 33       	cpi	r24, 0x30	; 48
 548:	11 f4       	brne	.+4      	; 0x54e <__stack+0x4f>
 54a:	29 7e       	andi	r18, 0xE9	; 233
 54c:	09 c0       	rjmp	.+18     	; 0x560 <__stack+0x61>
 54e:	22 ff       	sbrs	r18, 2
 550:	06 c0       	rjmp	.+12     	; 0x55e <__stack+0x5f>
 552:	73 94       	inc	r7
 554:	73 94       	inc	r7
 556:	04 c0       	rjmp	.+8      	; 0x560 <__stack+0x61>
 558:	82 2f       	mov	r24, r18
 55a:	86 78       	andi	r24, 0x86	; 134
 55c:	09 f0       	breq	.+2      	; 0x560 <__stack+0x61>
 55e:	73 94       	inc	r7
 560:	23 fd       	sbrc	r18, 3
 562:	13 c0       	rjmp	.+38     	; 0x58a <__stack+0x8b>
 564:	20 ff       	sbrs	r18, 0
 566:	06 c0       	rjmp	.+12     	; 0x574 <__stack+0x75>
 568:	5a 2c       	mov	r5, r10
 56a:	73 14       	cp	r7, r3
 56c:	18 f4       	brcc	.+6      	; 0x574 <__stack+0x75>
 56e:	53 0c       	add	r5, r3
 570:	57 18       	sub	r5, r7
 572:	73 2c       	mov	r7, r3
 574:	73 14       	cp	r7, r3
 576:	68 f4       	brcc	.+26     	; 0x592 <__stack+0x93>
 578:	b7 01       	movw	r22, r14
 57a:	80 e2       	ldi	r24, 0x20	; 32
 57c:	90 e0       	ldi	r25, 0x00	; 0
 57e:	2c 87       	std	Y+12, r18	; 0x0c
 580:	0e 94 74 04 	call	0x8e8	; 0x8e8 <fputc>
 584:	73 94       	inc	r7
 586:	2c 85       	ldd	r18, Y+12	; 0x0c
 588:	f5 cf       	rjmp	.-22     	; 0x574 <__stack+0x75>
 58a:	73 14       	cp	r7, r3
 58c:	10 f4       	brcc	.+4      	; 0x592 <__stack+0x93>
 58e:	37 18       	sub	r3, r7
 590:	01 c0       	rjmp	.+2      	; 0x594 <__stack+0x95>
 592:	31 2c       	mov	r3, r1
 594:	24 ff       	sbrs	r18, 4
 596:	12 c0       	rjmp	.+36     	; 0x5bc <__stack+0xbd>
 598:	b7 01       	movw	r22, r14
 59a:	80 e3       	ldi	r24, 0x30	; 48
 59c:	90 e0       	ldi	r25, 0x00	; 0
 59e:	2c 87       	std	Y+12, r18	; 0x0c
 5a0:	0e 94 74 04 	call	0x8e8	; 0x8e8 <fputc>
 5a4:	2c 85       	ldd	r18, Y+12	; 0x0c
 5a6:	22 ff       	sbrs	r18, 2
 5a8:	17 c0       	rjmp	.+46     	; 0x5d8 <__stack+0xd9>
 5aa:	21 ff       	sbrs	r18, 1
 5ac:	03 c0       	rjmp	.+6      	; 0x5b4 <__stack+0xb5>
 5ae:	88 e5       	ldi	r24, 0x58	; 88
 5b0:	90 e0       	ldi	r25, 0x00	; 0
 5b2:	02 c0       	rjmp	.+4      	; 0x5b8 <__stack+0xb9>
 5b4:	88 e7       	ldi	r24, 0x78	; 120
 5b6:	90 e0       	ldi	r25, 0x00	; 0
 5b8:	b7 01       	movw	r22, r14
 5ba:	0c c0       	rjmp	.+24     	; 0x5d4 <__stack+0xd5>
 5bc:	82 2f       	mov	r24, r18
 5be:	86 78       	andi	r24, 0x86	; 134
 5c0:	59 f0       	breq	.+22     	; 0x5d8 <__stack+0xd9>
 5c2:	21 fd       	sbrc	r18, 1
 5c4:	02 c0       	rjmp	.+4      	; 0x5ca <__stack+0xcb>
 5c6:	80 e2       	ldi	r24, 0x20	; 32
 5c8:	01 c0       	rjmp	.+2      	; 0x5cc <__stack+0xcd>
 5ca:	8b e2       	ldi	r24, 0x2B	; 43
 5cc:	27 fd       	sbrc	r18, 7
 5ce:	8d e2       	ldi	r24, 0x2D	; 45
 5d0:	b7 01       	movw	r22, r14
 5d2:	90 e0       	ldi	r25, 0x00	; 0
 5d4:	0e 94 74 04 	call	0x8e8	; 0x8e8 <fputc>
 5d8:	a5 14       	cp	r10, r5
 5da:	38 f4       	brcc	.+14     	; 0x5ea <__stack+0xeb>
 5dc:	b7 01       	movw	r22, r14
 5de:	80 e3       	ldi	r24, 0x30	; 48
 5e0:	90 e0       	ldi	r25, 0x00	; 0
 5e2:	0e 94 74 04 	call	0x8e8	; 0x8e8 <fputc>
 5e6:	5a 94       	dec	r5
 5e8:	f7 cf       	rjmp	.-18     	; 0x5d8 <__stack+0xd9>
 5ea:	aa 94       	dec	r10
 5ec:	f4 01       	movw	r30, r8
 5ee:	ea 0d       	add	r30, r10
 5f0:	f1 1d       	adc	r31, r1
 5f2:	80 81       	ld	r24, Z
 5f4:	b7 01       	movw	r22, r14
 5f6:	90 e0       	ldi	r25, 0x00	; 0
 5f8:	0e 94 74 04 	call	0x8e8	; 0x8e8 <fputc>
 5fc:	a1 10       	cpse	r10, r1
 5fe:	f5 cf       	rjmp	.-22     	; 0x5ea <__stack+0xeb>
 600:	33 20       	and	r3, r3
 602:	09 f4       	brne	.+2      	; 0x606 <__stack+0x107>
 604:	51 ce       	rjmp	.-862    	; 0x2a8 <vfprintf+0x24>
 606:	b7 01       	movw	r22, r14
 608:	80 e2       	ldi	r24, 0x20	; 32
 60a:	90 e0       	ldi	r25, 0x00	; 0
 60c:	0e 94 74 04 	call	0x8e8	; 0x8e8 <fputc>
 610:	3a 94       	dec	r3
 612:	f6 cf       	rjmp	.-20     	; 0x600 <__stack+0x101>
 614:	f7 01       	movw	r30, r14
 616:	86 81       	ldd	r24, Z+6	; 0x06
 618:	97 81       	ldd	r25, Z+7	; 0x07
 61a:	02 c0       	rjmp	.+4      	; 0x620 <__stack+0x121>
 61c:	8f ef       	ldi	r24, 0xFF	; 255
 61e:	9f ef       	ldi	r25, 0xFF	; 255
 620:	2c 96       	adiw	r28, 0x0c	; 12
 622:	e2 e1       	ldi	r30, 0x12	; 18
 624:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__epilogue_restores__>

00000628 <calloc>:
 628:	0f 93       	push	r16
 62a:	1f 93       	push	r17
 62c:	cf 93       	push	r28
 62e:	df 93       	push	r29
 630:	86 9f       	mul	r24, r22
 632:	80 01       	movw	r16, r0
 634:	87 9f       	mul	r24, r23
 636:	10 0d       	add	r17, r0
 638:	96 9f       	mul	r25, r22
 63a:	10 0d       	add	r17, r0
 63c:	11 24       	eor	r1, r1
 63e:	c8 01       	movw	r24, r16
 640:	0e 94 30 03 	call	0x660	; 0x660 <malloc>
 644:	ec 01       	movw	r28, r24
 646:	00 97       	sbiw	r24, 0x00	; 0
 648:	29 f0       	breq	.+10     	; 0x654 <calloc+0x2c>
 64a:	a8 01       	movw	r20, r16
 64c:	60 e0       	ldi	r22, 0x00	; 0
 64e:	70 e0       	ldi	r23, 0x00	; 0
 650:	0e 94 62 04 	call	0x8c4	; 0x8c4 <memset>
 654:	ce 01       	movw	r24, r28
 656:	df 91       	pop	r29
 658:	cf 91       	pop	r28
 65a:	1f 91       	pop	r17
 65c:	0f 91       	pop	r16
 65e:	08 95       	ret

00000660 <malloc>:
 660:	cf 93       	push	r28
 662:	df 93       	push	r29
 664:	82 30       	cpi	r24, 0x02	; 2
 666:	91 05       	cpc	r25, r1
 668:	10 f4       	brcc	.+4      	; 0x66e <malloc+0xe>
 66a:	82 e0       	ldi	r24, 0x02	; 2
 66c:	90 e0       	ldi	r25, 0x00	; 0
 66e:	e0 91 18 01 	lds	r30, 0x0118
 672:	f0 91 19 01 	lds	r31, 0x0119
 676:	20 e0       	ldi	r18, 0x00	; 0
 678:	30 e0       	ldi	r19, 0x00	; 0
 67a:	a0 e0       	ldi	r26, 0x00	; 0
 67c:	b0 e0       	ldi	r27, 0x00	; 0
 67e:	30 97       	sbiw	r30, 0x00	; 0
 680:	39 f1       	breq	.+78     	; 0x6d0 <malloc+0x70>
 682:	40 81       	ld	r20, Z
 684:	51 81       	ldd	r21, Z+1	; 0x01
 686:	48 17       	cp	r20, r24
 688:	59 07       	cpc	r21, r25
 68a:	b8 f0       	brcs	.+46     	; 0x6ba <malloc+0x5a>
 68c:	48 17       	cp	r20, r24
 68e:	59 07       	cpc	r21, r25
 690:	71 f4       	brne	.+28     	; 0x6ae <malloc+0x4e>
 692:	82 81       	ldd	r24, Z+2	; 0x02
 694:	93 81       	ldd	r25, Z+3	; 0x03
 696:	10 97       	sbiw	r26, 0x00	; 0
 698:	29 f0       	breq	.+10     	; 0x6a4 <malloc+0x44>
 69a:	13 96       	adiw	r26, 0x03	; 3
 69c:	9c 93       	st	X, r25
 69e:	8e 93       	st	-X, r24
 6a0:	12 97       	sbiw	r26, 0x02	; 2
 6a2:	2c c0       	rjmp	.+88     	; 0x6fc <malloc+0x9c>
 6a4:	90 93 19 01 	sts	0x0119, r25
 6a8:	80 93 18 01 	sts	0x0118, r24
 6ac:	27 c0       	rjmp	.+78     	; 0x6fc <malloc+0x9c>
 6ae:	21 15       	cp	r18, r1
 6b0:	31 05       	cpc	r19, r1
 6b2:	31 f0       	breq	.+12     	; 0x6c0 <malloc+0x60>
 6b4:	42 17       	cp	r20, r18
 6b6:	53 07       	cpc	r21, r19
 6b8:	18 f0       	brcs	.+6      	; 0x6c0 <malloc+0x60>
 6ba:	a9 01       	movw	r20, r18
 6bc:	db 01       	movw	r26, r22
 6be:	01 c0       	rjmp	.+2      	; 0x6c2 <malloc+0x62>
 6c0:	ef 01       	movw	r28, r30
 6c2:	9a 01       	movw	r18, r20
 6c4:	bd 01       	movw	r22, r26
 6c6:	df 01       	movw	r26, r30
 6c8:	02 80       	ldd	r0, Z+2	; 0x02
 6ca:	f3 81       	ldd	r31, Z+3	; 0x03
 6cc:	e0 2d       	mov	r30, r0
 6ce:	d7 cf       	rjmp	.-82     	; 0x67e <malloc+0x1e>
 6d0:	21 15       	cp	r18, r1
 6d2:	31 05       	cpc	r19, r1
 6d4:	f9 f0       	breq	.+62     	; 0x714 <malloc+0xb4>
 6d6:	28 1b       	sub	r18, r24
 6d8:	39 0b       	sbc	r19, r25
 6da:	24 30       	cpi	r18, 0x04	; 4
 6dc:	31 05       	cpc	r19, r1
 6de:	80 f4       	brcc	.+32     	; 0x700 <malloc+0xa0>
 6e0:	8a 81       	ldd	r24, Y+2	; 0x02
 6e2:	9b 81       	ldd	r25, Y+3	; 0x03
 6e4:	61 15       	cp	r22, r1
 6e6:	71 05       	cpc	r23, r1
 6e8:	21 f0       	breq	.+8      	; 0x6f2 <malloc+0x92>
 6ea:	fb 01       	movw	r30, r22
 6ec:	93 83       	std	Z+3, r25	; 0x03
 6ee:	82 83       	std	Z+2, r24	; 0x02
 6f0:	04 c0       	rjmp	.+8      	; 0x6fa <malloc+0x9a>
 6f2:	90 93 19 01 	sts	0x0119, r25
 6f6:	80 93 18 01 	sts	0x0118, r24
 6fa:	fe 01       	movw	r30, r28
 6fc:	32 96       	adiw	r30, 0x02	; 2
 6fe:	44 c0       	rjmp	.+136    	; 0x788 <malloc+0x128>
 700:	fe 01       	movw	r30, r28
 702:	e2 0f       	add	r30, r18
 704:	f3 1f       	adc	r31, r19
 706:	81 93       	st	Z+, r24
 708:	91 93       	st	Z+, r25
 70a:	22 50       	subi	r18, 0x02	; 2
 70c:	31 09       	sbc	r19, r1
 70e:	39 83       	std	Y+1, r19	; 0x01
 710:	28 83       	st	Y, r18
 712:	3a c0       	rjmp	.+116    	; 0x788 <malloc+0x128>
 714:	20 91 16 01 	lds	r18, 0x0116
 718:	30 91 17 01 	lds	r19, 0x0117
 71c:	23 2b       	or	r18, r19
 71e:	41 f4       	brne	.+16     	; 0x730 <malloc+0xd0>
 720:	20 91 02 01 	lds	r18, 0x0102
 724:	30 91 03 01 	lds	r19, 0x0103
 728:	30 93 17 01 	sts	0x0117, r19
 72c:	20 93 16 01 	sts	0x0116, r18
 730:	20 91 00 01 	lds	r18, 0x0100
 734:	30 91 01 01 	lds	r19, 0x0101
 738:	21 15       	cp	r18, r1
 73a:	31 05       	cpc	r19, r1
 73c:	41 f4       	brne	.+16     	; 0x74e <malloc+0xee>
 73e:	2d b7       	in	r18, 0x3d	; 61
 740:	3e b7       	in	r19, 0x3e	; 62
 742:	40 91 04 01 	lds	r20, 0x0104
 746:	50 91 05 01 	lds	r21, 0x0105
 74a:	24 1b       	sub	r18, r20
 74c:	35 0b       	sbc	r19, r21
 74e:	e0 91 16 01 	lds	r30, 0x0116
 752:	f0 91 17 01 	lds	r31, 0x0117
 756:	e2 17       	cp	r30, r18
 758:	f3 07       	cpc	r31, r19
 75a:	a0 f4       	brcc	.+40     	; 0x784 <malloc+0x124>
 75c:	2e 1b       	sub	r18, r30
 75e:	3f 0b       	sbc	r19, r31
 760:	28 17       	cp	r18, r24
 762:	39 07       	cpc	r19, r25
 764:	78 f0       	brcs	.+30     	; 0x784 <malloc+0x124>
 766:	ac 01       	movw	r20, r24
 768:	4e 5f       	subi	r20, 0xFE	; 254
 76a:	5f 4f       	sbci	r21, 0xFF	; 255
 76c:	24 17       	cp	r18, r20
 76e:	35 07       	cpc	r19, r21
 770:	48 f0       	brcs	.+18     	; 0x784 <malloc+0x124>
 772:	4e 0f       	add	r20, r30
 774:	5f 1f       	adc	r21, r31
 776:	50 93 17 01 	sts	0x0117, r21
 77a:	40 93 16 01 	sts	0x0116, r20
 77e:	81 93       	st	Z+, r24
 780:	91 93       	st	Z+, r25
 782:	02 c0       	rjmp	.+4      	; 0x788 <malloc+0x128>
 784:	e0 e0       	ldi	r30, 0x00	; 0
 786:	f0 e0       	ldi	r31, 0x00	; 0
 788:	cf 01       	movw	r24, r30
 78a:	df 91       	pop	r29
 78c:	cf 91       	pop	r28
 78e:	08 95       	ret

00000790 <free>:
 790:	cf 93       	push	r28
 792:	df 93       	push	r29
 794:	00 97       	sbiw	r24, 0x00	; 0
 796:	09 f4       	brne	.+2      	; 0x79a <free+0xa>
 798:	87 c0       	rjmp	.+270    	; 0x8a8 <free+0x118>
 79a:	fc 01       	movw	r30, r24
 79c:	32 97       	sbiw	r30, 0x02	; 2
 79e:	13 82       	std	Z+3, r1	; 0x03
 7a0:	12 82       	std	Z+2, r1	; 0x02
 7a2:	c0 91 18 01 	lds	r28, 0x0118
 7a6:	d0 91 19 01 	lds	r29, 0x0119
 7aa:	20 97       	sbiw	r28, 0x00	; 0
 7ac:	81 f4       	brne	.+32     	; 0x7ce <free+0x3e>
 7ae:	20 81       	ld	r18, Z
 7b0:	31 81       	ldd	r19, Z+1	; 0x01
 7b2:	28 0f       	add	r18, r24
 7b4:	39 1f       	adc	r19, r25
 7b6:	80 91 16 01 	lds	r24, 0x0116
 7ba:	90 91 17 01 	lds	r25, 0x0117
 7be:	82 17       	cp	r24, r18
 7c0:	93 07       	cpc	r25, r19
 7c2:	79 f5       	brne	.+94     	; 0x822 <free+0x92>
 7c4:	f0 93 17 01 	sts	0x0117, r31
 7c8:	e0 93 16 01 	sts	0x0116, r30
 7cc:	6d c0       	rjmp	.+218    	; 0x8a8 <free+0x118>
 7ce:	de 01       	movw	r26, r28
 7d0:	20 e0       	ldi	r18, 0x00	; 0
 7d2:	30 e0       	ldi	r19, 0x00	; 0
 7d4:	ae 17       	cp	r26, r30
 7d6:	bf 07       	cpc	r27, r31
 7d8:	50 f4       	brcc	.+20     	; 0x7ee <free+0x5e>
 7da:	12 96       	adiw	r26, 0x02	; 2
 7dc:	4d 91       	ld	r20, X+
 7de:	5c 91       	ld	r21, X
 7e0:	13 97       	sbiw	r26, 0x03	; 3
 7e2:	9d 01       	movw	r18, r26
 7e4:	41 15       	cp	r20, r1
 7e6:	51 05       	cpc	r21, r1
 7e8:	09 f1       	breq	.+66     	; 0x82c <free+0x9c>
 7ea:	da 01       	movw	r26, r20
 7ec:	f3 cf       	rjmp	.-26     	; 0x7d4 <free+0x44>
 7ee:	b3 83       	std	Z+3, r27	; 0x03
 7f0:	a2 83       	std	Z+2, r26	; 0x02
 7f2:	40 81       	ld	r20, Z
 7f4:	51 81       	ldd	r21, Z+1	; 0x01
 7f6:	84 0f       	add	r24, r20
 7f8:	95 1f       	adc	r25, r21
 7fa:	8a 17       	cp	r24, r26
 7fc:	9b 07       	cpc	r25, r27
 7fe:	71 f4       	brne	.+28     	; 0x81c <free+0x8c>
 800:	8d 91       	ld	r24, X+
 802:	9c 91       	ld	r25, X
 804:	11 97       	sbiw	r26, 0x01	; 1
 806:	84 0f       	add	r24, r20
 808:	95 1f       	adc	r25, r21
 80a:	02 96       	adiw	r24, 0x02	; 2
 80c:	91 83       	std	Z+1, r25	; 0x01
 80e:	80 83       	st	Z, r24
 810:	12 96       	adiw	r26, 0x02	; 2
 812:	8d 91       	ld	r24, X+
 814:	9c 91       	ld	r25, X
 816:	13 97       	sbiw	r26, 0x03	; 3
 818:	93 83       	std	Z+3, r25	; 0x03
 81a:	82 83       	std	Z+2, r24	; 0x02
 81c:	21 15       	cp	r18, r1
 81e:	31 05       	cpc	r19, r1
 820:	29 f4       	brne	.+10     	; 0x82c <free+0x9c>
 822:	f0 93 19 01 	sts	0x0119, r31
 826:	e0 93 18 01 	sts	0x0118, r30
 82a:	3e c0       	rjmp	.+124    	; 0x8a8 <free+0x118>
 82c:	d9 01       	movw	r26, r18
 82e:	13 96       	adiw	r26, 0x03	; 3
 830:	fc 93       	st	X, r31
 832:	ee 93       	st	-X, r30
 834:	12 97       	sbiw	r26, 0x02	; 2
 836:	4d 91       	ld	r20, X+
 838:	5d 91       	ld	r21, X+
 83a:	a4 0f       	add	r26, r20
 83c:	b5 1f       	adc	r27, r21
 83e:	ea 17       	cp	r30, r26
 840:	fb 07       	cpc	r31, r27
 842:	79 f4       	brne	.+30     	; 0x862 <free+0xd2>
 844:	80 81       	ld	r24, Z
 846:	91 81       	ldd	r25, Z+1	; 0x01
 848:	84 0f       	add	r24, r20
 84a:	95 1f       	adc	r25, r21
 84c:	02 96       	adiw	r24, 0x02	; 2
 84e:	d9 01       	movw	r26, r18
 850:	11 96       	adiw	r26, 0x01	; 1
 852:	9c 93       	st	X, r25
 854:	8e 93       	st	-X, r24
 856:	82 81       	ldd	r24, Z+2	; 0x02
 858:	93 81       	ldd	r25, Z+3	; 0x03
 85a:	13 96       	adiw	r26, 0x03	; 3
 85c:	9c 93       	st	X, r25
 85e:	8e 93       	st	-X, r24
 860:	12 97       	sbiw	r26, 0x02	; 2
 862:	e0 e0       	ldi	r30, 0x00	; 0
 864:	f0 e0       	ldi	r31, 0x00	; 0
 866:	8a 81       	ldd	r24, Y+2	; 0x02
 868:	9b 81       	ldd	r25, Y+3	; 0x03
 86a:	00 97       	sbiw	r24, 0x00	; 0
 86c:	19 f0       	breq	.+6      	; 0x874 <free+0xe4>
 86e:	fe 01       	movw	r30, r28
 870:	ec 01       	movw	r28, r24
 872:	f9 cf       	rjmp	.-14     	; 0x866 <free+0xd6>
 874:	ce 01       	movw	r24, r28
 876:	02 96       	adiw	r24, 0x02	; 2
 878:	28 81       	ld	r18, Y
 87a:	39 81       	ldd	r19, Y+1	; 0x01
 87c:	82 0f       	add	r24, r18
 87e:	93 1f       	adc	r25, r19
 880:	20 91 16 01 	lds	r18, 0x0116
 884:	30 91 17 01 	lds	r19, 0x0117
 888:	28 17       	cp	r18, r24
 88a:	39 07       	cpc	r19, r25
 88c:	69 f4       	brne	.+26     	; 0x8a8 <free+0x118>
 88e:	30 97       	sbiw	r30, 0x00	; 0
 890:	29 f4       	brne	.+10     	; 0x89c <free+0x10c>
 892:	10 92 19 01 	sts	0x0119, r1
 896:	10 92 18 01 	sts	0x0118, r1
 89a:	02 c0       	rjmp	.+4      	; 0x8a0 <free+0x110>
 89c:	13 82       	std	Z+3, r1	; 0x03
 89e:	12 82       	std	Z+2, r1	; 0x02
 8a0:	d0 93 17 01 	sts	0x0117, r29
 8a4:	c0 93 16 01 	sts	0x0116, r28
 8a8:	df 91       	pop	r29
 8aa:	cf 91       	pop	r28
 8ac:	08 95       	ret

000008ae <strnlen_P>:
 8ae:	fc 01       	movw	r30, r24
 8b0:	05 90       	lpm	r0, Z+
 8b2:	61 50       	subi	r22, 0x01	; 1
 8b4:	70 40       	sbci	r23, 0x00	; 0
 8b6:	01 10       	cpse	r0, r1
 8b8:	d8 f7       	brcc	.-10     	; 0x8b0 <strnlen_P+0x2>
 8ba:	80 95       	com	r24
 8bc:	90 95       	com	r25
 8be:	8e 0f       	add	r24, r30
 8c0:	9f 1f       	adc	r25, r31
 8c2:	08 95       	ret

000008c4 <memset>:
 8c4:	dc 01       	movw	r26, r24
 8c6:	01 c0       	rjmp	.+2      	; 0x8ca <memset+0x6>
 8c8:	6d 93       	st	X+, r22
 8ca:	41 50       	subi	r20, 0x01	; 1
 8cc:	50 40       	sbci	r21, 0x00	; 0
 8ce:	e0 f7       	brcc	.-8      	; 0x8c8 <memset+0x4>
 8d0:	08 95       	ret

000008d2 <strnlen>:
 8d2:	fc 01       	movw	r30, r24
 8d4:	61 50       	subi	r22, 0x01	; 1
 8d6:	70 40       	sbci	r23, 0x00	; 0
 8d8:	01 90       	ld	r0, Z+
 8da:	01 10       	cpse	r0, r1
 8dc:	d8 f7       	brcc	.-10     	; 0x8d4 <strnlen+0x2>
 8de:	80 95       	com	r24
 8e0:	90 95       	com	r25
 8e2:	8e 0f       	add	r24, r30
 8e4:	9f 1f       	adc	r25, r31
 8e6:	08 95       	ret

000008e8 <fputc>:
 8e8:	0f 93       	push	r16
 8ea:	1f 93       	push	r17
 8ec:	cf 93       	push	r28
 8ee:	df 93       	push	r29
 8f0:	18 2f       	mov	r17, r24
 8f2:	09 2f       	mov	r16, r25
 8f4:	eb 01       	movw	r28, r22
 8f6:	8b 81       	ldd	r24, Y+3	; 0x03
 8f8:	81 fd       	sbrc	r24, 1
 8fa:	03 c0       	rjmp	.+6      	; 0x902 <fputc+0x1a>
 8fc:	8f ef       	ldi	r24, 0xFF	; 255
 8fe:	9f ef       	ldi	r25, 0xFF	; 255
 900:	20 c0       	rjmp	.+64     	; 0x942 <fputc+0x5a>
 902:	82 ff       	sbrs	r24, 2
 904:	10 c0       	rjmp	.+32     	; 0x926 <fputc+0x3e>
 906:	4e 81       	ldd	r20, Y+6	; 0x06
 908:	5f 81       	ldd	r21, Y+7	; 0x07
 90a:	2c 81       	ldd	r18, Y+4	; 0x04
 90c:	3d 81       	ldd	r19, Y+5	; 0x05
 90e:	42 17       	cp	r20, r18
 910:	53 07       	cpc	r21, r19
 912:	7c f4       	brge	.+30     	; 0x932 <fputc+0x4a>
 914:	e8 81       	ld	r30, Y
 916:	f9 81       	ldd	r31, Y+1	; 0x01
 918:	9f 01       	movw	r18, r30
 91a:	2f 5f       	subi	r18, 0xFF	; 255
 91c:	3f 4f       	sbci	r19, 0xFF	; 255
 91e:	39 83       	std	Y+1, r19	; 0x01
 920:	28 83       	st	Y, r18
 922:	10 83       	st	Z, r17
 924:	06 c0       	rjmp	.+12     	; 0x932 <fputc+0x4a>
 926:	e8 85       	ldd	r30, Y+8	; 0x08
 928:	f9 85       	ldd	r31, Y+9	; 0x09
 92a:	81 2f       	mov	r24, r17
 92c:	09 95       	icall
 92e:	89 2b       	or	r24, r25
 930:	29 f7       	brne	.-54     	; 0x8fc <fputc+0x14>
 932:	2e 81       	ldd	r18, Y+6	; 0x06
 934:	3f 81       	ldd	r19, Y+7	; 0x07
 936:	2f 5f       	subi	r18, 0xFF	; 255
 938:	3f 4f       	sbci	r19, 0xFF	; 255
 93a:	3f 83       	std	Y+7, r19	; 0x07
 93c:	2e 83       	std	Y+6, r18	; 0x06
 93e:	81 2f       	mov	r24, r17
 940:	90 2f       	mov	r25, r16
 942:	df 91       	pop	r29
 944:	cf 91       	pop	r28
 946:	1f 91       	pop	r17
 948:	0f 91       	pop	r16
 94a:	08 95       	ret

0000094c <__ultoa_invert>:
 94c:	fa 01       	movw	r30, r20
 94e:	aa 27       	eor	r26, r26
 950:	28 30       	cpi	r18, 0x08	; 8
 952:	51 f1       	breq	.+84     	; 0x9a8 <__ultoa_invert+0x5c>
 954:	20 31       	cpi	r18, 0x10	; 16
 956:	81 f1       	breq	.+96     	; 0x9b8 <__ultoa_invert+0x6c>
 958:	e8 94       	clt
 95a:	6f 93       	push	r22
 95c:	6e 7f       	andi	r22, 0xFE	; 254
 95e:	6e 5f       	subi	r22, 0xFE	; 254
 960:	7f 4f       	sbci	r23, 0xFF	; 255
 962:	8f 4f       	sbci	r24, 0xFF	; 255
 964:	9f 4f       	sbci	r25, 0xFF	; 255
 966:	af 4f       	sbci	r26, 0xFF	; 255
 968:	b1 e0       	ldi	r27, 0x01	; 1
 96a:	3e d0       	rcall	.+124    	; 0x9e8 <__ultoa_invert+0x9c>
 96c:	b4 e0       	ldi	r27, 0x04	; 4
 96e:	3c d0       	rcall	.+120    	; 0x9e8 <__ultoa_invert+0x9c>
 970:	67 0f       	add	r22, r23
 972:	78 1f       	adc	r23, r24
 974:	89 1f       	adc	r24, r25
 976:	9a 1f       	adc	r25, r26
 978:	a1 1d       	adc	r26, r1
 97a:	68 0f       	add	r22, r24
 97c:	79 1f       	adc	r23, r25
 97e:	8a 1f       	adc	r24, r26
 980:	91 1d       	adc	r25, r1
 982:	a1 1d       	adc	r26, r1
 984:	6a 0f       	add	r22, r26
 986:	71 1d       	adc	r23, r1
 988:	81 1d       	adc	r24, r1
 98a:	91 1d       	adc	r25, r1
 98c:	a1 1d       	adc	r26, r1
 98e:	20 d0       	rcall	.+64     	; 0x9d0 <__ultoa_invert+0x84>
 990:	09 f4       	brne	.+2      	; 0x994 <__ultoa_invert+0x48>
 992:	68 94       	set
 994:	3f 91       	pop	r19
 996:	2a e0       	ldi	r18, 0x0A	; 10
 998:	26 9f       	mul	r18, r22
 99a:	11 24       	eor	r1, r1
 99c:	30 19       	sub	r19, r0
 99e:	30 5d       	subi	r19, 0xD0	; 208
 9a0:	31 93       	st	Z+, r19
 9a2:	de f6       	brtc	.-74     	; 0x95a <__ultoa_invert+0xe>
 9a4:	cf 01       	movw	r24, r30
 9a6:	08 95       	ret
 9a8:	46 2f       	mov	r20, r22
 9aa:	47 70       	andi	r20, 0x07	; 7
 9ac:	40 5d       	subi	r20, 0xD0	; 208
 9ae:	41 93       	st	Z+, r20
 9b0:	b3 e0       	ldi	r27, 0x03	; 3
 9b2:	0f d0       	rcall	.+30     	; 0x9d2 <__ultoa_invert+0x86>
 9b4:	c9 f7       	brne	.-14     	; 0x9a8 <__ultoa_invert+0x5c>
 9b6:	f6 cf       	rjmp	.-20     	; 0x9a4 <__ultoa_invert+0x58>
 9b8:	46 2f       	mov	r20, r22
 9ba:	4f 70       	andi	r20, 0x0F	; 15
 9bc:	40 5d       	subi	r20, 0xD0	; 208
 9be:	4a 33       	cpi	r20, 0x3A	; 58
 9c0:	18 f0       	brcs	.+6      	; 0x9c8 <__ultoa_invert+0x7c>
 9c2:	49 5d       	subi	r20, 0xD9	; 217
 9c4:	31 fd       	sbrc	r19, 1
 9c6:	40 52       	subi	r20, 0x20	; 32
 9c8:	41 93       	st	Z+, r20
 9ca:	02 d0       	rcall	.+4      	; 0x9d0 <__ultoa_invert+0x84>
 9cc:	a9 f7       	brne	.-22     	; 0x9b8 <__ultoa_invert+0x6c>
 9ce:	ea cf       	rjmp	.-44     	; 0x9a4 <__ultoa_invert+0x58>
 9d0:	b4 e0       	ldi	r27, 0x04	; 4
 9d2:	a6 95       	lsr	r26
 9d4:	97 95       	ror	r25
 9d6:	87 95       	ror	r24
 9d8:	77 95       	ror	r23
 9da:	67 95       	ror	r22
 9dc:	ba 95       	dec	r27
 9de:	c9 f7       	brne	.-14     	; 0x9d2 <__ultoa_invert+0x86>
 9e0:	00 97       	sbiw	r24, 0x00	; 0
 9e2:	61 05       	cpc	r22, r1
 9e4:	71 05       	cpc	r23, r1
 9e6:	08 95       	ret
 9e8:	9b 01       	movw	r18, r22
 9ea:	ac 01       	movw	r20, r24
 9ec:	0a 2e       	mov	r0, r26
 9ee:	06 94       	lsr	r0
 9f0:	57 95       	ror	r21
 9f2:	47 95       	ror	r20
 9f4:	37 95       	ror	r19
 9f6:	27 95       	ror	r18
 9f8:	ba 95       	dec	r27
 9fa:	c9 f7       	brne	.-14     	; 0x9ee <__ultoa_invert+0xa2>
 9fc:	62 0f       	add	r22, r18
 9fe:	73 1f       	adc	r23, r19
 a00:	84 1f       	adc	r24, r20
 a02:	95 1f       	adc	r25, r21
 a04:	a0 1d       	adc	r26, r0
 a06:	08 95       	ret

00000a08 <__prologue_saves__>:
 a08:	2f 92       	push	r2
 a0a:	3f 92       	push	r3
 a0c:	4f 92       	push	r4
 a0e:	5f 92       	push	r5
 a10:	6f 92       	push	r6
 a12:	7f 92       	push	r7
 a14:	8f 92       	push	r8
 a16:	9f 92       	push	r9
 a18:	af 92       	push	r10
 a1a:	bf 92       	push	r11
 a1c:	cf 92       	push	r12
 a1e:	df 92       	push	r13
 a20:	ef 92       	push	r14
 a22:	ff 92       	push	r15
 a24:	0f 93       	push	r16
 a26:	1f 93       	push	r17
 a28:	cf 93       	push	r28
 a2a:	df 93       	push	r29
 a2c:	cd b7       	in	r28, 0x3d	; 61
 a2e:	de b7       	in	r29, 0x3e	; 62
 a30:	ca 1b       	sub	r28, r26
 a32:	db 0b       	sbc	r29, r27
 a34:	0f b6       	in	r0, 0x3f	; 63
 a36:	f8 94       	cli
 a38:	de bf       	out	0x3e, r29	; 62
 a3a:	0f be       	out	0x3f, r0	; 63
 a3c:	cd bf       	out	0x3d, r28	; 61
 a3e:	09 94       	ijmp

00000a40 <__epilogue_restores__>:
 a40:	2a 88       	ldd	r2, Y+18	; 0x12
 a42:	39 88       	ldd	r3, Y+17	; 0x11
 a44:	48 88       	ldd	r4, Y+16	; 0x10
 a46:	5f 84       	ldd	r5, Y+15	; 0x0f
 a48:	6e 84       	ldd	r6, Y+14	; 0x0e
 a4a:	7d 84       	ldd	r7, Y+13	; 0x0d
 a4c:	8c 84       	ldd	r8, Y+12	; 0x0c
 a4e:	9b 84       	ldd	r9, Y+11	; 0x0b
 a50:	aa 84       	ldd	r10, Y+10	; 0x0a
 a52:	b9 84       	ldd	r11, Y+9	; 0x09
 a54:	c8 84       	ldd	r12, Y+8	; 0x08
 a56:	df 80       	ldd	r13, Y+7	; 0x07
 a58:	ee 80       	ldd	r14, Y+6	; 0x06
 a5a:	fd 80       	ldd	r15, Y+5	; 0x05
 a5c:	0c 81       	ldd	r16, Y+4	; 0x04
 a5e:	1b 81       	ldd	r17, Y+3	; 0x03
 a60:	aa 81       	ldd	r26, Y+2	; 0x02
 a62:	b9 81       	ldd	r27, Y+1	; 0x01
 a64:	ce 0f       	add	r28, r30
 a66:	d1 1d       	adc	r29, r1
 a68:	0f b6       	in	r0, 0x3f	; 63
 a6a:	f8 94       	cli
 a6c:	de bf       	out	0x3e, r29	; 62
 a6e:	0f be       	out	0x3f, r0	; 63
 a70:	cd bf       	out	0x3d, r28	; 61
 a72:	ed 01       	movw	r28, r26
 a74:	08 95       	ret

00000a76 <_exit>:
 a76:	f8 94       	cli

00000a78 <__stop_program>:
 a78:	ff cf       	rjmp	.-2      	; 0xa78 <__stop_program>
