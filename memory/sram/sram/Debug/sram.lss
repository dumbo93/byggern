
sram.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000f0  00800100  00000ca0  00000d34  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ca0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  008001f0  008001f0  00000e24  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e24  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  00000e80  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000049b  00000000  00000000  00000ee8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000303  00000000  00000000  00001383  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000282  00000000  00000000  00001686  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000010c  00000000  00000000  00001908  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000272  00000000  00000000  00001a14  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001e8  00000000  00000000  00001c86  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000078  00000000  00000000  00001e6e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e0 ea       	ldi	r30, 0xA0	; 160
  84:	fc e0       	ldi	r31, 0x0C	; 12
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a0 3f       	cpi	r26, 0xF0	; 240
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a0 ef       	ldi	r26, 0xF0	; 240
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	aa 3f       	cpi	r26, 0xFA	; 250
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 fd 00 	call	0x1fa	; 0x1fa <main>
  a6:	0c 94 4e 06 	jmp	0xc9c	; 0xc9c <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <UART_Transmit>:

// transmit data
void UART_Transmit (unsigned char data)
{
	// Wait for empty transmit buffer
	while (!( UCSR0A & (1<<UDRE0))); 
  ae:	5d 9b       	sbis	0x0b, 5	; 11
  b0:	fe cf       	rjmp	.-4      	; 0xae <UART_Transmit>
	
	// Put data into buffer, sends the data
	UDR0 = data;  
  b2:	8c b9       	out	0x0c, r24	; 12
  b4:	08 95       	ret

000000b6 <UART_Recieve>:

// function to receive data
unsigned char UART_Recieve (void)
{
	//Wait for data to be received
	while(!(UCSR0A) & (1<<RXC0));  
  b6:	8b b1       	in	r24, 0x0b	; 11
	
	//Get and return received data from buffer
	return UDR0;  
  b8:	8c b1       	in	r24, 0x0c	; 12
  ba:	08 95       	ret

000000bc <UART_Init>:

void UART_Init( unsigned int ubrr ){
	/* 
	Set baud rate
	 */
	UBRR0H |= (unsigned char)(ubrr>>8);
  bc:	20 b5       	in	r18, 0x20	; 32
  be:	92 2b       	or	r25, r18
  c0:	90 bd       	out	0x20, r25	; 32
	UBRR0L |= (unsigned char)ubrr;
  c2:	99 b1       	in	r25, 0x09	; 9
  c4:	89 2b       	or	r24, r25
  c6:	89 b9       	out	0x09, r24	; 9
	/* 
	Enable receiver and transmitter
	 */
	UCSR0B |= (1<<RXEN0)|(1<<TXEN0);
  c8:	8a b1       	in	r24, 0x0a	; 10
  ca:	88 61       	ori	r24, 0x18	; 24
  cc:	8a b9       	out	0x0a, r24	; 10
	/* 
	Set frame format: 8data, 2stop bit
	 */
	UCSR0C |= (1<<URSEL0)|(1<<USBS0)|(1<<UCSZ00)|(1<<UCSZ01);
  ce:	80 b5       	in	r24, 0x20	; 32
  d0:	8e 68       	ori	r24, 0x8E	; 142
  d2:	80 bd       	out	0x20, r24	; 32
	
	fdevopen(&UART_Transmit, &UART_Recieve);
  d4:	6b e5       	ldi	r22, 0x5B	; 91
  d6:	70 e0       	ldi	r23, 0x00	; 0
  d8:	87 e5       	ldi	r24, 0x57	; 87
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	0e 94 66 01 	call	0x2cc	; 0x2cc <fdevopen>
  e0:	08 95       	ret

000000e2 <SRAM_init>:
#include <stdlib.h>
#include <stdio.h>

void SRAM_init(void){
	// Enable External Memory Interface
	MCUCR |= (1 << SRE);
  e2:	85 b7       	in	r24, 0x35	; 53
  e4:	80 68       	ori	r24, 0x80	; 128
  e6:	85 bf       	out	0x35, r24	; 53
	// Release PC7-PC4 for JTAG
	SFIOR |= (3 << XMM0);
  e8:	80 b7       	in	r24, 0x30	; 48
  ea:	88 61       	ori	r24, 0x18	; 24
  ec:	80 bf       	out	0x30, r24	; 48
  ee:	08 95       	ret

000000f0 <SRAM_test>:
}

void SRAM_test(void)
{
  f0:	cf 92       	push	r12
  f2:	df 92       	push	r13
  f4:	ef 92       	push	r14
  f6:	ff 92       	push	r15
  f8:	0f 93       	push	r16
  fa:	1f 93       	push	r17
  fc:	cf 93       	push	r28
  fe:	df 93       	push	r29
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
	printf("Starting SRAM test...\n");
 100:	8a e0       	ldi	r24, 0x0A	; 10
 102:	91 e0       	ldi	r25, 0x01	; 1
 104:	0e 94 c5 01 	call	0x38a	; 0x38a <puts>
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
 108:	0e 94 56 01 	call	0x2ac	; 0x2ac <rand>
 10c:	6c 01       	movw	r12, r24
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
 10e:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 112:	c0 e0       	ldi	r28, 0x00	; 0
 114:	d0 e0       	ldi	r29, 0x00	; 0

void SRAM_test(void)
{
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
 116:	00 e0       	ldi	r16, 0x00	; 0
 118:	10 e0       	ldi	r17, 0x00	; 0
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
		ext_ram[i] = some_value;
		uint8_t retreived_value = ext_ram[i];
		if (retreived_value != some_value) {
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i,
 11a:	0f 2e       	mov	r0, r31
 11c:	f0 e2       	ldi	r31, 0x20	; 32
 11e:	ef 2e       	mov	r14, r31
 120:	f1 e0       	ldi	r31, 0x01	; 1
 122:	ff 2e       	mov	r15, r31
 124:	f0 2d       	mov	r31, r0
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
 126:	0e 94 56 01 	call	0x2ac	; 0x2ac <rand>
 12a:	fe 01       	movw	r30, r28
 12c:	f8 5e       	subi	r31, 0xE8	; 232
		ext_ram[i] = some_value;
 12e:	80 83       	st	Z, r24
		uint8_t retreived_value = ext_ram[i];
 130:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
 132:	28 17       	cp	r18, r24
 134:	a9 f0       	breq	.+42     	; 0x160 <SRAM_test+0x70>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i,
 136:	99 27       	eor	r25, r25
 138:	9f 93       	push	r25
 13a:	8f 93       	push	r24
 13c:	1f 92       	push	r1
 13e:	2f 93       	push	r18
 140:	df 93       	push	r29
 142:	cf 93       	push	r28
 144:	ff 92       	push	r15
 146:	ef 92       	push	r14
 148:	0e 94 b1 01 	call	0x362	; 0x362 <printf>
			retreived_value, some_value);
			write_errors++;
 14c:	0f 5f       	subi	r16, 0xFF	; 255
 14e:	1f 4f       	sbci	r17, 0xFF	; 255
 150:	8d b7       	in	r24, 0x3d	; 61
 152:	9e b7       	in	r25, 0x3e	; 62
 154:	08 96       	adiw	r24, 0x08	; 8
 156:	0f b6       	in	r0, 0x3f	; 63
 158:	f8 94       	cli
 15a:	9e bf       	out	0x3e, r25	; 62
 15c:	0f be       	out	0x3f, r0	; 63
 15e:	8d bf       	out	0x3d, r24	; 61
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 160:	21 96       	adiw	r28, 0x01	; 1
 162:	c1 15       	cp	r28, r1
 164:	98 e0       	ldi	r25, 0x08	; 8
 166:	d9 07       	cpc	r29, r25
 168:	f1 f6       	brne	.-68     	; 0x126 <SRAM_test+0x36>
			retreived_value, some_value);
			write_errors++;
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);// reset the PRNG to the state it had before the write phase
 16a:	c6 01       	movw	r24, r12
 16c:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 170:	c0 e0       	ldi	r28, 0x00	; 0
 172:	d0 e0       	ldi	r29, 0x00	; 0
void SRAM_test(void)
{
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
 174:	e1 2c       	mov	r14, r1
 176:	f1 2c       	mov	r15, r1
	srand(seed);// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
		uint8_t retreived_value = ext_ram[i];
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
 178:	0f 2e       	mov	r0, r31
 17a:	f9 e5       	ldi	r31, 0x59	; 89
 17c:	cf 2e       	mov	r12, r31
 17e:	f1 e0       	ldi	r31, 0x01	; 1
 180:	df 2e       	mov	r13, r31
 182:	f0 2d       	mov	r31, r0
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
 184:	0e 94 56 01 	call	0x2ac	; 0x2ac <rand>
 188:	fe 01       	movw	r30, r28
 18a:	f8 5e       	subi	r31, 0xE8	; 232
		uint8_t retreived_value = ext_ram[i];
 18c:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
 18e:	28 17       	cp	r18, r24
 190:	b1 f0       	breq	.+44     	; 0x1be <SRAM_test+0xce>
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
 192:	99 27       	eor	r25, r25
 194:	9f 93       	push	r25
 196:	8f 93       	push	r24
 198:	1f 92       	push	r1
 19a:	2f 93       	push	r18
 19c:	df 93       	push	r29
 19e:	cf 93       	push	r28
 1a0:	df 92       	push	r13
 1a2:	cf 92       	push	r12
 1a4:	0e 94 b1 01 	call	0x362	; 0x362 <printf>
			retrieval_errors++;
 1a8:	8f ef       	ldi	r24, 0xFF	; 255
 1aa:	e8 1a       	sub	r14, r24
 1ac:	f8 0a       	sbc	r15, r24
 1ae:	8d b7       	in	r24, 0x3d	; 61
 1b0:	9e b7       	in	r25, 0x3e	; 62
 1b2:	08 96       	adiw	r24, 0x08	; 8
 1b4:	0f b6       	in	r0, 0x3f	; 63
 1b6:	f8 94       	cli
 1b8:	9e bf       	out	0x3e, r25	; 62
 1ba:	0f be       	out	0x3f, r0	; 63
 1bc:	8d bf       	out	0x3d, r24	; 61
			write_errors++;
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 1be:	21 96       	adiw	r28, 0x01	; 1
 1c0:	c1 15       	cp	r28, r1
 1c2:	98 e0       	ldi	r25, 0x08	; 8
 1c4:	d9 07       	cpc	r29, r25
 1c6:	f1 f6       	brne	.-68     	; 0x184 <SRAM_test+0x94>
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
			retrieval_errors++;
		}
	}
	printf("SRAM test completed with \n%4d errors in write phase and \n%4d errors in retrieval phase\n\n", write_errors, retrieval_errors);
 1c8:	ff 92       	push	r15
 1ca:	ef 92       	push	r14
 1cc:	1f 93       	push	r17
 1ce:	0f 93       	push	r16
 1d0:	86 e9       	ldi	r24, 0x96	; 150
 1d2:	91 e0       	ldi	r25, 0x01	; 1
 1d4:	9f 93       	push	r25
 1d6:	8f 93       	push	r24
 1d8:	0e 94 b1 01 	call	0x362	; 0x362 <printf>
 1dc:	0f 90       	pop	r0
 1de:	0f 90       	pop	r0
 1e0:	0f 90       	pop	r0
 1e2:	0f 90       	pop	r0
 1e4:	0f 90       	pop	r0
 1e6:	0f 90       	pop	r0

}
 1e8:	df 91       	pop	r29
 1ea:	cf 91       	pop	r28
 1ec:	1f 91       	pop	r17
 1ee:	0f 91       	pop	r16
 1f0:	ff 90       	pop	r15
 1f2:	ef 90       	pop	r14
 1f4:	df 90       	pop	r13
 1f6:	cf 90       	pop	r12
 1f8:	08 95       	ret

000001fa <main>:

int main(void)
{
	UART_Init ( MYUBRR );
 1fa:	8f e1       	ldi	r24, 0x1F	; 31
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	0e 94 5e 00 	call	0xbc	; 0xbc <UART_Init>
	SRAM_init();
 202:	0e 94 71 00 	call	0xe2	; 0xe2 <SRAM_init>
	SRAM_test();
 206:	0e 94 78 00 	call	0xf0	; 0xf0 <SRAM_test>
	
	
	return 0;
 20a:	80 e0       	ldi	r24, 0x00	; 0
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	08 95       	ret

00000210 <do_rand>:
 210:	8f 92       	push	r8
 212:	9f 92       	push	r9
 214:	af 92       	push	r10
 216:	bf 92       	push	r11
 218:	cf 92       	push	r12
 21a:	df 92       	push	r13
 21c:	ef 92       	push	r14
 21e:	ff 92       	push	r15
 220:	cf 93       	push	r28
 222:	df 93       	push	r29
 224:	ec 01       	movw	r28, r24
 226:	68 81       	ld	r22, Y
 228:	79 81       	ldd	r23, Y+1	; 0x01
 22a:	8a 81       	ldd	r24, Y+2	; 0x02
 22c:	9b 81       	ldd	r25, Y+3	; 0x03
 22e:	61 15       	cp	r22, r1
 230:	71 05       	cpc	r23, r1
 232:	81 05       	cpc	r24, r1
 234:	91 05       	cpc	r25, r1
 236:	21 f4       	brne	.+8      	; 0x240 <do_rand+0x30>
 238:	64 e2       	ldi	r22, 0x24	; 36
 23a:	79 ed       	ldi	r23, 0xD9	; 217
 23c:	8b e5       	ldi	r24, 0x5B	; 91
 23e:	97 e0       	ldi	r25, 0x07	; 7
 240:	2d e1       	ldi	r18, 0x1D	; 29
 242:	33 ef       	ldi	r19, 0xF3	; 243
 244:	41 e0       	ldi	r20, 0x01	; 1
 246:	50 e0       	ldi	r21, 0x00	; 0
 248:	0e 94 b4 05 	call	0xb68	; 0xb68 <__divmodsi4>
 24c:	49 01       	movw	r8, r18
 24e:	5a 01       	movw	r10, r20
 250:	9b 01       	movw	r18, r22
 252:	ac 01       	movw	r20, r24
 254:	a7 ea       	ldi	r26, 0xA7	; 167
 256:	b1 e4       	ldi	r27, 0x41	; 65
 258:	0e 94 d3 05 	call	0xba6	; 0xba6 <__muluhisi3>
 25c:	6b 01       	movw	r12, r22
 25e:	7c 01       	movw	r14, r24
 260:	ac ee       	ldi	r26, 0xEC	; 236
 262:	b4 ef       	ldi	r27, 0xF4	; 244
 264:	a5 01       	movw	r20, r10
 266:	94 01       	movw	r18, r8
 268:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <__mulohisi3>
 26c:	c6 0e       	add	r12, r22
 26e:	d7 1e       	adc	r13, r23
 270:	e8 1e       	adc	r14, r24
 272:	f9 1e       	adc	r15, r25
 274:	f7 fe       	sbrs	r15, 7
 276:	06 c0       	rjmp	.+12     	; 0x284 <do_rand+0x74>
 278:	81 e0       	ldi	r24, 0x01	; 1
 27a:	c8 1a       	sub	r12, r24
 27c:	d1 08       	sbc	r13, r1
 27e:	e1 08       	sbc	r14, r1
 280:	80 e8       	ldi	r24, 0x80	; 128
 282:	f8 0a       	sbc	r15, r24
 284:	c8 82       	st	Y, r12
 286:	d9 82       	std	Y+1, r13	; 0x01
 288:	ea 82       	std	Y+2, r14	; 0x02
 28a:	fb 82       	std	Y+3, r15	; 0x03
 28c:	c6 01       	movw	r24, r12
 28e:	9f 77       	andi	r25, 0x7F	; 127
 290:	df 91       	pop	r29
 292:	cf 91       	pop	r28
 294:	ff 90       	pop	r15
 296:	ef 90       	pop	r14
 298:	df 90       	pop	r13
 29a:	cf 90       	pop	r12
 29c:	bf 90       	pop	r11
 29e:	af 90       	pop	r10
 2a0:	9f 90       	pop	r9
 2a2:	8f 90       	pop	r8
 2a4:	08 95       	ret

000002a6 <rand_r>:
 2a6:	0e 94 08 01 	call	0x210	; 0x210 <do_rand>
 2aa:	08 95       	ret

000002ac <rand>:
 2ac:	80 e0       	ldi	r24, 0x00	; 0
 2ae:	91 e0       	ldi	r25, 0x01	; 1
 2b0:	0e 94 08 01 	call	0x210	; 0x210 <do_rand>
 2b4:	08 95       	ret

000002b6 <srand>:
 2b6:	a0 e0       	ldi	r26, 0x00	; 0
 2b8:	b0 e0       	ldi	r27, 0x00	; 0
 2ba:	80 93 00 01 	sts	0x0100, r24
 2be:	90 93 01 01 	sts	0x0101, r25
 2c2:	a0 93 02 01 	sts	0x0102, r26
 2c6:	b0 93 03 01 	sts	0x0103, r27
 2ca:	08 95       	ret

000002cc <fdevopen>:
 2cc:	0f 93       	push	r16
 2ce:	1f 93       	push	r17
 2d0:	cf 93       	push	r28
 2d2:	df 93       	push	r29
 2d4:	ec 01       	movw	r28, r24
 2d6:	8b 01       	movw	r16, r22
 2d8:	00 97       	sbiw	r24, 0x00	; 0
 2da:	31 f4       	brne	.+12     	; 0x2e8 <fdevopen+0x1c>
 2dc:	61 15       	cp	r22, r1
 2de:	71 05       	cpc	r23, r1
 2e0:	19 f4       	brne	.+6      	; 0x2e8 <fdevopen+0x1c>
 2e2:	80 e0       	ldi	r24, 0x00	; 0
 2e4:	90 e0       	ldi	r25, 0x00	; 0
 2e6:	38 c0       	rjmp	.+112    	; 0x358 <fdevopen+0x8c>
 2e8:	6e e0       	ldi	r22, 0x0E	; 14
 2ea:	70 e0       	ldi	r23, 0x00	; 0
 2ec:	81 e0       	ldi	r24, 0x01	; 1
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	0e 94 c4 03 	call	0x788	; 0x788 <calloc>
 2f4:	fc 01       	movw	r30, r24
 2f6:	00 97       	sbiw	r24, 0x00	; 0
 2f8:	a1 f3       	breq	.-24     	; 0x2e2 <fdevopen+0x16>
 2fa:	80 e8       	ldi	r24, 0x80	; 128
 2fc:	83 83       	std	Z+3, r24	; 0x03
 2fe:	01 15       	cp	r16, r1
 300:	11 05       	cpc	r17, r1
 302:	71 f0       	breq	.+28     	; 0x320 <fdevopen+0x54>
 304:	13 87       	std	Z+11, r17	; 0x0b
 306:	02 87       	std	Z+10, r16	; 0x0a
 308:	81 e8       	ldi	r24, 0x81	; 129
 30a:	83 83       	std	Z+3, r24	; 0x03
 30c:	80 91 f0 01 	lds	r24, 0x01F0
 310:	90 91 f1 01 	lds	r25, 0x01F1
 314:	89 2b       	or	r24, r25
 316:	21 f4       	brne	.+8      	; 0x320 <fdevopen+0x54>
 318:	f0 93 f1 01 	sts	0x01F1, r31
 31c:	e0 93 f0 01 	sts	0x01F0, r30
 320:	20 97       	sbiw	r28, 0x00	; 0
 322:	c9 f0       	breq	.+50     	; 0x356 <fdevopen+0x8a>
 324:	d1 87       	std	Z+9, r29	; 0x09
 326:	c0 87       	std	Z+8, r28	; 0x08
 328:	83 81       	ldd	r24, Z+3	; 0x03
 32a:	82 60       	ori	r24, 0x02	; 2
 32c:	83 83       	std	Z+3, r24	; 0x03
 32e:	80 91 f2 01 	lds	r24, 0x01F2
 332:	90 91 f3 01 	lds	r25, 0x01F3
 336:	89 2b       	or	r24, r25
 338:	71 f4       	brne	.+28     	; 0x356 <fdevopen+0x8a>
 33a:	f0 93 f3 01 	sts	0x01F3, r31
 33e:	e0 93 f2 01 	sts	0x01F2, r30
 342:	80 91 f4 01 	lds	r24, 0x01F4
 346:	90 91 f5 01 	lds	r25, 0x01F5
 34a:	89 2b       	or	r24, r25
 34c:	21 f4       	brne	.+8      	; 0x356 <fdevopen+0x8a>
 34e:	f0 93 f5 01 	sts	0x01F5, r31
 352:	e0 93 f4 01 	sts	0x01F4, r30
 356:	cf 01       	movw	r24, r30
 358:	df 91       	pop	r29
 35a:	cf 91       	pop	r28
 35c:	1f 91       	pop	r17
 35e:	0f 91       	pop	r16
 360:	08 95       	ret

00000362 <printf>:
 362:	a0 e0       	ldi	r26, 0x00	; 0
 364:	b0 e0       	ldi	r27, 0x00	; 0
 366:	e7 eb       	ldi	r30, 0xB7	; 183
 368:	f1 e0       	ldi	r31, 0x01	; 1
 36a:	0c 94 f6 05 	jmp	0xbec	; 0xbec <__prologue_saves__+0x20>
 36e:	fe 01       	movw	r30, r28
 370:	35 96       	adiw	r30, 0x05	; 5
 372:	61 91       	ld	r22, Z+
 374:	71 91       	ld	r23, Z+
 376:	af 01       	movw	r20, r30
 378:	80 91 f2 01 	lds	r24, 0x01F2
 37c:	90 91 f3 01 	lds	r25, 0x01F3
 380:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <vfprintf>
 384:	e2 e0       	ldi	r30, 0x02	; 2
 386:	0c 94 12 06 	jmp	0xc24	; 0xc24 <__epilogue_restores__+0x20>

0000038a <puts>:
 38a:	0f 93       	push	r16
 38c:	1f 93       	push	r17
 38e:	cf 93       	push	r28
 390:	df 93       	push	r29
 392:	e0 91 f2 01 	lds	r30, 0x01F2
 396:	f0 91 f3 01 	lds	r31, 0x01F3
 39a:	23 81       	ldd	r18, Z+3	; 0x03
 39c:	21 ff       	sbrs	r18, 1
 39e:	1b c0       	rjmp	.+54     	; 0x3d6 <puts+0x4c>
 3a0:	ec 01       	movw	r28, r24
 3a2:	00 e0       	ldi	r16, 0x00	; 0
 3a4:	10 e0       	ldi	r17, 0x00	; 0
 3a6:	89 91       	ld	r24, Y+
 3a8:	60 91 f2 01 	lds	r22, 0x01F2
 3ac:	70 91 f3 01 	lds	r23, 0x01F3
 3b0:	db 01       	movw	r26, r22
 3b2:	18 96       	adiw	r26, 0x08	; 8
 3b4:	ed 91       	ld	r30, X+
 3b6:	fc 91       	ld	r31, X
 3b8:	19 97       	sbiw	r26, 0x09	; 9
 3ba:	88 23       	and	r24, r24
 3bc:	31 f0       	breq	.+12     	; 0x3ca <puts+0x40>
 3be:	09 95       	icall
 3c0:	89 2b       	or	r24, r25
 3c2:	89 f3       	breq	.-30     	; 0x3a6 <puts+0x1c>
 3c4:	0f ef       	ldi	r16, 0xFF	; 255
 3c6:	1f ef       	ldi	r17, 0xFF	; 255
 3c8:	ee cf       	rjmp	.-36     	; 0x3a6 <puts+0x1c>
 3ca:	8a e0       	ldi	r24, 0x0A	; 10
 3cc:	09 95       	icall
 3ce:	89 2b       	or	r24, r25
 3d0:	11 f4       	brne	.+4      	; 0x3d6 <puts+0x4c>
 3d2:	c8 01       	movw	r24, r16
 3d4:	02 c0       	rjmp	.+4      	; 0x3da <puts+0x50>
 3d6:	8f ef       	ldi	r24, 0xFF	; 255
 3d8:	9f ef       	ldi	r25, 0xFF	; 255
 3da:	df 91       	pop	r29
 3dc:	cf 91       	pop	r28
 3de:	1f 91       	pop	r17
 3e0:	0f 91       	pop	r16
 3e2:	08 95       	ret

000003e4 <vfprintf>:
 3e4:	ac e0       	ldi	r26, 0x0C	; 12
 3e6:	b0 e0       	ldi	r27, 0x00	; 0
 3e8:	e8 ef       	ldi	r30, 0xF8	; 248
 3ea:	f1 e0       	ldi	r31, 0x01	; 1
 3ec:	0c 94 e6 05 	jmp	0xbcc	; 0xbcc <__prologue_saves__>
 3f0:	7c 01       	movw	r14, r24
 3f2:	6b 01       	movw	r12, r22
 3f4:	8a 01       	movw	r16, r20
 3f6:	fc 01       	movw	r30, r24
 3f8:	17 82       	std	Z+7, r1	; 0x07
 3fa:	16 82       	std	Z+6, r1	; 0x06
 3fc:	83 81       	ldd	r24, Z+3	; 0x03
 3fe:	81 ff       	sbrs	r24, 1
 400:	bd c1       	rjmp	.+890    	; 0x77c <__stack+0x27d>
 402:	ce 01       	movw	r24, r28
 404:	01 96       	adiw	r24, 0x01	; 1
 406:	4c 01       	movw	r8, r24
 408:	f7 01       	movw	r30, r14
 40a:	93 81       	ldd	r25, Z+3	; 0x03
 40c:	f6 01       	movw	r30, r12
 40e:	93 fd       	sbrc	r25, 3
 410:	85 91       	lpm	r24, Z+
 412:	93 ff       	sbrs	r25, 3
 414:	81 91       	ld	r24, Z+
 416:	6f 01       	movw	r12, r30
 418:	88 23       	and	r24, r24
 41a:	09 f4       	brne	.+2      	; 0x41e <vfprintf+0x3a>
 41c:	ab c1       	rjmp	.+854    	; 0x774 <__stack+0x275>
 41e:	85 32       	cpi	r24, 0x25	; 37
 420:	39 f4       	brne	.+14     	; 0x430 <vfprintf+0x4c>
 422:	93 fd       	sbrc	r25, 3
 424:	85 91       	lpm	r24, Z+
 426:	93 ff       	sbrs	r25, 3
 428:	81 91       	ld	r24, Z+
 42a:	6f 01       	movw	r12, r30
 42c:	85 32       	cpi	r24, 0x25	; 37
 42e:	29 f4       	brne	.+10     	; 0x43a <vfprintf+0x56>
 430:	b7 01       	movw	r22, r14
 432:	90 e0       	ldi	r25, 0x00	; 0
 434:	0e 94 24 05 	call	0xa48	; 0xa48 <fputc>
 438:	e7 cf       	rjmp	.-50     	; 0x408 <vfprintf+0x24>
 43a:	51 2c       	mov	r5, r1
 43c:	31 2c       	mov	r3, r1
 43e:	20 e0       	ldi	r18, 0x00	; 0
 440:	20 32       	cpi	r18, 0x20	; 32
 442:	a0 f4       	brcc	.+40     	; 0x46c <vfprintf+0x88>
 444:	8b 32       	cpi	r24, 0x2B	; 43
 446:	69 f0       	breq	.+26     	; 0x462 <vfprintf+0x7e>
 448:	30 f4       	brcc	.+12     	; 0x456 <vfprintf+0x72>
 44a:	80 32       	cpi	r24, 0x20	; 32
 44c:	59 f0       	breq	.+22     	; 0x464 <vfprintf+0x80>
 44e:	83 32       	cpi	r24, 0x23	; 35
 450:	69 f4       	brne	.+26     	; 0x46c <vfprintf+0x88>
 452:	20 61       	ori	r18, 0x10	; 16
 454:	2c c0       	rjmp	.+88     	; 0x4ae <vfprintf+0xca>
 456:	8d 32       	cpi	r24, 0x2D	; 45
 458:	39 f0       	breq	.+14     	; 0x468 <vfprintf+0x84>
 45a:	80 33       	cpi	r24, 0x30	; 48
 45c:	39 f4       	brne	.+14     	; 0x46c <vfprintf+0x88>
 45e:	21 60       	ori	r18, 0x01	; 1
 460:	26 c0       	rjmp	.+76     	; 0x4ae <vfprintf+0xca>
 462:	22 60       	ori	r18, 0x02	; 2
 464:	24 60       	ori	r18, 0x04	; 4
 466:	23 c0       	rjmp	.+70     	; 0x4ae <vfprintf+0xca>
 468:	28 60       	ori	r18, 0x08	; 8
 46a:	21 c0       	rjmp	.+66     	; 0x4ae <vfprintf+0xca>
 46c:	27 fd       	sbrc	r18, 7
 46e:	27 c0       	rjmp	.+78     	; 0x4be <vfprintf+0xda>
 470:	30 ed       	ldi	r19, 0xD0	; 208
 472:	38 0f       	add	r19, r24
 474:	3a 30       	cpi	r19, 0x0A	; 10
 476:	78 f4       	brcc	.+30     	; 0x496 <vfprintf+0xb2>
 478:	26 ff       	sbrs	r18, 6
 47a:	06 c0       	rjmp	.+12     	; 0x488 <vfprintf+0xa4>
 47c:	fa e0       	ldi	r31, 0x0A	; 10
 47e:	5f 9e       	mul	r5, r31
 480:	30 0d       	add	r19, r0
 482:	11 24       	eor	r1, r1
 484:	53 2e       	mov	r5, r19
 486:	13 c0       	rjmp	.+38     	; 0x4ae <vfprintf+0xca>
 488:	8a e0       	ldi	r24, 0x0A	; 10
 48a:	38 9e       	mul	r3, r24
 48c:	30 0d       	add	r19, r0
 48e:	11 24       	eor	r1, r1
 490:	33 2e       	mov	r3, r19
 492:	20 62       	ori	r18, 0x20	; 32
 494:	0c c0       	rjmp	.+24     	; 0x4ae <vfprintf+0xca>
 496:	8e 32       	cpi	r24, 0x2E	; 46
 498:	21 f4       	brne	.+8      	; 0x4a2 <vfprintf+0xbe>
 49a:	26 fd       	sbrc	r18, 6
 49c:	6b c1       	rjmp	.+726    	; 0x774 <__stack+0x275>
 49e:	20 64       	ori	r18, 0x40	; 64
 4a0:	06 c0       	rjmp	.+12     	; 0x4ae <vfprintf+0xca>
 4a2:	8c 36       	cpi	r24, 0x6C	; 108
 4a4:	11 f4       	brne	.+4      	; 0x4aa <vfprintf+0xc6>
 4a6:	20 68       	ori	r18, 0x80	; 128
 4a8:	02 c0       	rjmp	.+4      	; 0x4ae <vfprintf+0xca>
 4aa:	88 36       	cpi	r24, 0x68	; 104
 4ac:	41 f4       	brne	.+16     	; 0x4be <vfprintf+0xda>
 4ae:	f6 01       	movw	r30, r12
 4b0:	93 fd       	sbrc	r25, 3
 4b2:	85 91       	lpm	r24, Z+
 4b4:	93 ff       	sbrs	r25, 3
 4b6:	81 91       	ld	r24, Z+
 4b8:	6f 01       	movw	r12, r30
 4ba:	81 11       	cpse	r24, r1
 4bc:	c1 cf       	rjmp	.-126    	; 0x440 <vfprintf+0x5c>
 4be:	98 2f       	mov	r25, r24
 4c0:	9f 7d       	andi	r25, 0xDF	; 223
 4c2:	95 54       	subi	r25, 0x45	; 69
 4c4:	93 30       	cpi	r25, 0x03	; 3
 4c6:	28 f4       	brcc	.+10     	; 0x4d2 <vfprintf+0xee>
 4c8:	0c 5f       	subi	r16, 0xFC	; 252
 4ca:	1f 4f       	sbci	r17, 0xFF	; 255
 4cc:	ff e3       	ldi	r31, 0x3F	; 63
 4ce:	f9 83       	std	Y+1, r31	; 0x01
 4d0:	0d c0       	rjmp	.+26     	; 0x4ec <vfprintf+0x108>
 4d2:	83 36       	cpi	r24, 0x63	; 99
 4d4:	31 f0       	breq	.+12     	; 0x4e2 <vfprintf+0xfe>
 4d6:	83 37       	cpi	r24, 0x73	; 115
 4d8:	71 f0       	breq	.+28     	; 0x4f6 <vfprintf+0x112>
 4da:	83 35       	cpi	r24, 0x53	; 83
 4dc:	09 f0       	breq	.+2      	; 0x4e0 <vfprintf+0xfc>
 4de:	5b c0       	rjmp	.+182    	; 0x596 <__stack+0x97>
 4e0:	22 c0       	rjmp	.+68     	; 0x526 <__stack+0x27>
 4e2:	f8 01       	movw	r30, r16
 4e4:	80 81       	ld	r24, Z
 4e6:	89 83       	std	Y+1, r24	; 0x01
 4e8:	0e 5f       	subi	r16, 0xFE	; 254
 4ea:	1f 4f       	sbci	r17, 0xFF	; 255
 4ec:	44 24       	eor	r4, r4
 4ee:	43 94       	inc	r4
 4f0:	51 2c       	mov	r5, r1
 4f2:	54 01       	movw	r10, r8
 4f4:	15 c0       	rjmp	.+42     	; 0x520 <__stack+0x21>
 4f6:	38 01       	movw	r6, r16
 4f8:	f2 e0       	ldi	r31, 0x02	; 2
 4fa:	6f 0e       	add	r6, r31
 4fc:	71 1c       	adc	r7, r1
 4fe:	f8 01       	movw	r30, r16
 500:	a0 80       	ld	r10, Z
 502:	b1 80       	ldd	r11, Z+1	; 0x01
 504:	26 ff       	sbrs	r18, 6
 506:	03 c0       	rjmp	.+6      	; 0x50e <__stack+0xf>
 508:	65 2d       	mov	r22, r5
 50a:	70 e0       	ldi	r23, 0x00	; 0
 50c:	02 c0       	rjmp	.+4      	; 0x512 <__stack+0x13>
 50e:	6f ef       	ldi	r22, 0xFF	; 255
 510:	7f ef       	ldi	r23, 0xFF	; 255
 512:	c5 01       	movw	r24, r10
 514:	2c 87       	std	Y+12, r18	; 0x0c
 516:	0e 94 19 05 	call	0xa32	; 0xa32 <strnlen>
 51a:	2c 01       	movw	r4, r24
 51c:	83 01       	movw	r16, r6
 51e:	2c 85       	ldd	r18, Y+12	; 0x0c
 520:	2f 77       	andi	r18, 0x7F	; 127
 522:	22 2e       	mov	r2, r18
 524:	17 c0       	rjmp	.+46     	; 0x554 <__stack+0x55>
 526:	38 01       	movw	r6, r16
 528:	f2 e0       	ldi	r31, 0x02	; 2
 52a:	6f 0e       	add	r6, r31
 52c:	71 1c       	adc	r7, r1
 52e:	f8 01       	movw	r30, r16
 530:	a0 80       	ld	r10, Z
 532:	b1 80       	ldd	r11, Z+1	; 0x01
 534:	26 ff       	sbrs	r18, 6
 536:	03 c0       	rjmp	.+6      	; 0x53e <__stack+0x3f>
 538:	65 2d       	mov	r22, r5
 53a:	70 e0       	ldi	r23, 0x00	; 0
 53c:	02 c0       	rjmp	.+4      	; 0x542 <__stack+0x43>
 53e:	6f ef       	ldi	r22, 0xFF	; 255
 540:	7f ef       	ldi	r23, 0xFF	; 255
 542:	c5 01       	movw	r24, r10
 544:	2c 87       	std	Y+12, r18	; 0x0c
 546:	0e 94 07 05 	call	0xa0e	; 0xa0e <strnlen_P>
 54a:	2c 01       	movw	r4, r24
 54c:	2c 85       	ldd	r18, Y+12	; 0x0c
 54e:	20 68       	ori	r18, 0x80	; 128
 550:	22 2e       	mov	r2, r18
 552:	83 01       	movw	r16, r6
 554:	23 fc       	sbrc	r2, 3
 556:	1b c0       	rjmp	.+54     	; 0x58e <__stack+0x8f>
 558:	83 2d       	mov	r24, r3
 55a:	90 e0       	ldi	r25, 0x00	; 0
 55c:	48 16       	cp	r4, r24
 55e:	59 06       	cpc	r5, r25
 560:	b0 f4       	brcc	.+44     	; 0x58e <__stack+0x8f>
 562:	b7 01       	movw	r22, r14
 564:	80 e2       	ldi	r24, 0x20	; 32
 566:	90 e0       	ldi	r25, 0x00	; 0
 568:	0e 94 24 05 	call	0xa48	; 0xa48 <fputc>
 56c:	3a 94       	dec	r3
 56e:	f4 cf       	rjmp	.-24     	; 0x558 <__stack+0x59>
 570:	f5 01       	movw	r30, r10
 572:	27 fc       	sbrc	r2, 7
 574:	85 91       	lpm	r24, Z+
 576:	27 fe       	sbrs	r2, 7
 578:	81 91       	ld	r24, Z+
 57a:	5f 01       	movw	r10, r30
 57c:	b7 01       	movw	r22, r14
 57e:	90 e0       	ldi	r25, 0x00	; 0
 580:	0e 94 24 05 	call	0xa48	; 0xa48 <fputc>
 584:	31 10       	cpse	r3, r1
 586:	3a 94       	dec	r3
 588:	f1 e0       	ldi	r31, 0x01	; 1
 58a:	4f 1a       	sub	r4, r31
 58c:	51 08       	sbc	r5, r1
 58e:	41 14       	cp	r4, r1
 590:	51 04       	cpc	r5, r1
 592:	71 f7       	brne	.-36     	; 0x570 <__stack+0x71>
 594:	e5 c0       	rjmp	.+458    	; 0x760 <__stack+0x261>
 596:	84 36       	cpi	r24, 0x64	; 100
 598:	11 f0       	breq	.+4      	; 0x59e <__stack+0x9f>
 59a:	89 36       	cpi	r24, 0x69	; 105
 59c:	39 f5       	brne	.+78     	; 0x5ec <__stack+0xed>
 59e:	f8 01       	movw	r30, r16
 5a0:	27 ff       	sbrs	r18, 7
 5a2:	07 c0       	rjmp	.+14     	; 0x5b2 <__stack+0xb3>
 5a4:	60 81       	ld	r22, Z
 5a6:	71 81       	ldd	r23, Z+1	; 0x01
 5a8:	82 81       	ldd	r24, Z+2	; 0x02
 5aa:	93 81       	ldd	r25, Z+3	; 0x03
 5ac:	0c 5f       	subi	r16, 0xFC	; 252
 5ae:	1f 4f       	sbci	r17, 0xFF	; 255
 5b0:	08 c0       	rjmp	.+16     	; 0x5c2 <__stack+0xc3>
 5b2:	60 81       	ld	r22, Z
 5b4:	71 81       	ldd	r23, Z+1	; 0x01
 5b6:	88 27       	eor	r24, r24
 5b8:	77 fd       	sbrc	r23, 7
 5ba:	80 95       	com	r24
 5bc:	98 2f       	mov	r25, r24
 5be:	0e 5f       	subi	r16, 0xFE	; 254
 5c0:	1f 4f       	sbci	r17, 0xFF	; 255
 5c2:	2f 76       	andi	r18, 0x6F	; 111
 5c4:	b2 2e       	mov	r11, r18
 5c6:	97 ff       	sbrs	r25, 7
 5c8:	09 c0       	rjmp	.+18     	; 0x5dc <__stack+0xdd>
 5ca:	90 95       	com	r25
 5cc:	80 95       	com	r24
 5ce:	70 95       	com	r23
 5d0:	61 95       	neg	r22
 5d2:	7f 4f       	sbci	r23, 0xFF	; 255
 5d4:	8f 4f       	sbci	r24, 0xFF	; 255
 5d6:	9f 4f       	sbci	r25, 0xFF	; 255
 5d8:	20 68       	ori	r18, 0x80	; 128
 5da:	b2 2e       	mov	r11, r18
 5dc:	2a e0       	ldi	r18, 0x0A	; 10
 5de:	30 e0       	ldi	r19, 0x00	; 0
 5e0:	a4 01       	movw	r20, r8
 5e2:	0e 94 56 05 	call	0xaac	; 0xaac <__ultoa_invert>
 5e6:	a8 2e       	mov	r10, r24
 5e8:	a8 18       	sub	r10, r8
 5ea:	44 c0       	rjmp	.+136    	; 0x674 <__stack+0x175>
 5ec:	85 37       	cpi	r24, 0x75	; 117
 5ee:	29 f4       	brne	.+10     	; 0x5fa <__stack+0xfb>
 5f0:	2f 7e       	andi	r18, 0xEF	; 239
 5f2:	b2 2e       	mov	r11, r18
 5f4:	2a e0       	ldi	r18, 0x0A	; 10
 5f6:	30 e0       	ldi	r19, 0x00	; 0
 5f8:	25 c0       	rjmp	.+74     	; 0x644 <__stack+0x145>
 5fa:	f2 2f       	mov	r31, r18
 5fc:	f9 7f       	andi	r31, 0xF9	; 249
 5fe:	bf 2e       	mov	r11, r31
 600:	8f 36       	cpi	r24, 0x6F	; 111
 602:	c1 f0       	breq	.+48     	; 0x634 <__stack+0x135>
 604:	18 f4       	brcc	.+6      	; 0x60c <__stack+0x10d>
 606:	88 35       	cpi	r24, 0x58	; 88
 608:	79 f0       	breq	.+30     	; 0x628 <__stack+0x129>
 60a:	b4 c0       	rjmp	.+360    	; 0x774 <__stack+0x275>
 60c:	80 37       	cpi	r24, 0x70	; 112
 60e:	19 f0       	breq	.+6      	; 0x616 <__stack+0x117>
 610:	88 37       	cpi	r24, 0x78	; 120
 612:	21 f0       	breq	.+8      	; 0x61c <__stack+0x11d>
 614:	af c0       	rjmp	.+350    	; 0x774 <__stack+0x275>
 616:	2f 2f       	mov	r18, r31
 618:	20 61       	ori	r18, 0x10	; 16
 61a:	b2 2e       	mov	r11, r18
 61c:	b4 fe       	sbrs	r11, 4
 61e:	0d c0       	rjmp	.+26     	; 0x63a <__stack+0x13b>
 620:	8b 2d       	mov	r24, r11
 622:	84 60       	ori	r24, 0x04	; 4
 624:	b8 2e       	mov	r11, r24
 626:	09 c0       	rjmp	.+18     	; 0x63a <__stack+0x13b>
 628:	24 ff       	sbrs	r18, 4
 62a:	0a c0       	rjmp	.+20     	; 0x640 <__stack+0x141>
 62c:	9f 2f       	mov	r25, r31
 62e:	96 60       	ori	r25, 0x06	; 6
 630:	b9 2e       	mov	r11, r25
 632:	06 c0       	rjmp	.+12     	; 0x640 <__stack+0x141>
 634:	28 e0       	ldi	r18, 0x08	; 8
 636:	30 e0       	ldi	r19, 0x00	; 0
 638:	05 c0       	rjmp	.+10     	; 0x644 <__stack+0x145>
 63a:	20 e1       	ldi	r18, 0x10	; 16
 63c:	30 e0       	ldi	r19, 0x00	; 0
 63e:	02 c0       	rjmp	.+4      	; 0x644 <__stack+0x145>
 640:	20 e1       	ldi	r18, 0x10	; 16
 642:	32 e0       	ldi	r19, 0x02	; 2
 644:	f8 01       	movw	r30, r16
 646:	b7 fe       	sbrs	r11, 7
 648:	07 c0       	rjmp	.+14     	; 0x658 <__stack+0x159>
 64a:	60 81       	ld	r22, Z
 64c:	71 81       	ldd	r23, Z+1	; 0x01
 64e:	82 81       	ldd	r24, Z+2	; 0x02
 650:	93 81       	ldd	r25, Z+3	; 0x03
 652:	0c 5f       	subi	r16, 0xFC	; 252
 654:	1f 4f       	sbci	r17, 0xFF	; 255
 656:	06 c0       	rjmp	.+12     	; 0x664 <__stack+0x165>
 658:	60 81       	ld	r22, Z
 65a:	71 81       	ldd	r23, Z+1	; 0x01
 65c:	80 e0       	ldi	r24, 0x00	; 0
 65e:	90 e0       	ldi	r25, 0x00	; 0
 660:	0e 5f       	subi	r16, 0xFE	; 254
 662:	1f 4f       	sbci	r17, 0xFF	; 255
 664:	a4 01       	movw	r20, r8
 666:	0e 94 56 05 	call	0xaac	; 0xaac <__ultoa_invert>
 66a:	a8 2e       	mov	r10, r24
 66c:	a8 18       	sub	r10, r8
 66e:	fb 2d       	mov	r31, r11
 670:	ff 77       	andi	r31, 0x7F	; 127
 672:	bf 2e       	mov	r11, r31
 674:	b6 fe       	sbrs	r11, 6
 676:	0b c0       	rjmp	.+22     	; 0x68e <__stack+0x18f>
 678:	2b 2d       	mov	r18, r11
 67a:	2e 7f       	andi	r18, 0xFE	; 254
 67c:	a5 14       	cp	r10, r5
 67e:	50 f4       	brcc	.+20     	; 0x694 <__stack+0x195>
 680:	b4 fe       	sbrs	r11, 4
 682:	0a c0       	rjmp	.+20     	; 0x698 <__stack+0x199>
 684:	b2 fc       	sbrc	r11, 2
 686:	08 c0       	rjmp	.+16     	; 0x698 <__stack+0x199>
 688:	2b 2d       	mov	r18, r11
 68a:	2e 7e       	andi	r18, 0xEE	; 238
 68c:	05 c0       	rjmp	.+10     	; 0x698 <__stack+0x199>
 68e:	7a 2c       	mov	r7, r10
 690:	2b 2d       	mov	r18, r11
 692:	03 c0       	rjmp	.+6      	; 0x69a <__stack+0x19b>
 694:	7a 2c       	mov	r7, r10
 696:	01 c0       	rjmp	.+2      	; 0x69a <__stack+0x19b>
 698:	75 2c       	mov	r7, r5
 69a:	24 ff       	sbrs	r18, 4
 69c:	0d c0       	rjmp	.+26     	; 0x6b8 <__stack+0x1b9>
 69e:	fe 01       	movw	r30, r28
 6a0:	ea 0d       	add	r30, r10
 6a2:	f1 1d       	adc	r31, r1
 6a4:	80 81       	ld	r24, Z
 6a6:	80 33       	cpi	r24, 0x30	; 48
 6a8:	11 f4       	brne	.+4      	; 0x6ae <__stack+0x1af>
 6aa:	29 7e       	andi	r18, 0xE9	; 233
 6ac:	09 c0       	rjmp	.+18     	; 0x6c0 <__stack+0x1c1>
 6ae:	22 ff       	sbrs	r18, 2
 6b0:	06 c0       	rjmp	.+12     	; 0x6be <__stack+0x1bf>
 6b2:	73 94       	inc	r7
 6b4:	73 94       	inc	r7
 6b6:	04 c0       	rjmp	.+8      	; 0x6c0 <__stack+0x1c1>
 6b8:	82 2f       	mov	r24, r18
 6ba:	86 78       	andi	r24, 0x86	; 134
 6bc:	09 f0       	breq	.+2      	; 0x6c0 <__stack+0x1c1>
 6be:	73 94       	inc	r7
 6c0:	23 fd       	sbrc	r18, 3
 6c2:	13 c0       	rjmp	.+38     	; 0x6ea <__stack+0x1eb>
 6c4:	20 ff       	sbrs	r18, 0
 6c6:	06 c0       	rjmp	.+12     	; 0x6d4 <__stack+0x1d5>
 6c8:	5a 2c       	mov	r5, r10
 6ca:	73 14       	cp	r7, r3
 6cc:	18 f4       	brcc	.+6      	; 0x6d4 <__stack+0x1d5>
 6ce:	53 0c       	add	r5, r3
 6d0:	57 18       	sub	r5, r7
 6d2:	73 2c       	mov	r7, r3
 6d4:	73 14       	cp	r7, r3
 6d6:	68 f4       	brcc	.+26     	; 0x6f2 <__stack+0x1f3>
 6d8:	b7 01       	movw	r22, r14
 6da:	80 e2       	ldi	r24, 0x20	; 32
 6dc:	90 e0       	ldi	r25, 0x00	; 0
 6de:	2c 87       	std	Y+12, r18	; 0x0c
 6e0:	0e 94 24 05 	call	0xa48	; 0xa48 <fputc>
 6e4:	73 94       	inc	r7
 6e6:	2c 85       	ldd	r18, Y+12	; 0x0c
 6e8:	f5 cf       	rjmp	.-22     	; 0x6d4 <__stack+0x1d5>
 6ea:	73 14       	cp	r7, r3
 6ec:	10 f4       	brcc	.+4      	; 0x6f2 <__stack+0x1f3>
 6ee:	37 18       	sub	r3, r7
 6f0:	01 c0       	rjmp	.+2      	; 0x6f4 <__stack+0x1f5>
 6f2:	31 2c       	mov	r3, r1
 6f4:	24 ff       	sbrs	r18, 4
 6f6:	12 c0       	rjmp	.+36     	; 0x71c <__stack+0x21d>
 6f8:	b7 01       	movw	r22, r14
 6fa:	80 e3       	ldi	r24, 0x30	; 48
 6fc:	90 e0       	ldi	r25, 0x00	; 0
 6fe:	2c 87       	std	Y+12, r18	; 0x0c
 700:	0e 94 24 05 	call	0xa48	; 0xa48 <fputc>
 704:	2c 85       	ldd	r18, Y+12	; 0x0c
 706:	22 ff       	sbrs	r18, 2
 708:	17 c0       	rjmp	.+46     	; 0x738 <__stack+0x239>
 70a:	21 ff       	sbrs	r18, 1
 70c:	03 c0       	rjmp	.+6      	; 0x714 <__stack+0x215>
 70e:	88 e5       	ldi	r24, 0x58	; 88
 710:	90 e0       	ldi	r25, 0x00	; 0
 712:	02 c0       	rjmp	.+4      	; 0x718 <__stack+0x219>
 714:	88 e7       	ldi	r24, 0x78	; 120
 716:	90 e0       	ldi	r25, 0x00	; 0
 718:	b7 01       	movw	r22, r14
 71a:	0c c0       	rjmp	.+24     	; 0x734 <__stack+0x235>
 71c:	82 2f       	mov	r24, r18
 71e:	86 78       	andi	r24, 0x86	; 134
 720:	59 f0       	breq	.+22     	; 0x738 <__stack+0x239>
 722:	21 fd       	sbrc	r18, 1
 724:	02 c0       	rjmp	.+4      	; 0x72a <__stack+0x22b>
 726:	80 e2       	ldi	r24, 0x20	; 32
 728:	01 c0       	rjmp	.+2      	; 0x72c <__stack+0x22d>
 72a:	8b e2       	ldi	r24, 0x2B	; 43
 72c:	27 fd       	sbrc	r18, 7
 72e:	8d e2       	ldi	r24, 0x2D	; 45
 730:	b7 01       	movw	r22, r14
 732:	90 e0       	ldi	r25, 0x00	; 0
 734:	0e 94 24 05 	call	0xa48	; 0xa48 <fputc>
 738:	a5 14       	cp	r10, r5
 73a:	38 f4       	brcc	.+14     	; 0x74a <__stack+0x24b>
 73c:	b7 01       	movw	r22, r14
 73e:	80 e3       	ldi	r24, 0x30	; 48
 740:	90 e0       	ldi	r25, 0x00	; 0
 742:	0e 94 24 05 	call	0xa48	; 0xa48 <fputc>
 746:	5a 94       	dec	r5
 748:	f7 cf       	rjmp	.-18     	; 0x738 <__stack+0x239>
 74a:	aa 94       	dec	r10
 74c:	f4 01       	movw	r30, r8
 74e:	ea 0d       	add	r30, r10
 750:	f1 1d       	adc	r31, r1
 752:	80 81       	ld	r24, Z
 754:	b7 01       	movw	r22, r14
 756:	90 e0       	ldi	r25, 0x00	; 0
 758:	0e 94 24 05 	call	0xa48	; 0xa48 <fputc>
 75c:	a1 10       	cpse	r10, r1
 75e:	f5 cf       	rjmp	.-22     	; 0x74a <__stack+0x24b>
 760:	33 20       	and	r3, r3
 762:	09 f4       	brne	.+2      	; 0x766 <__stack+0x267>
 764:	51 ce       	rjmp	.-862    	; 0x408 <vfprintf+0x24>
 766:	b7 01       	movw	r22, r14
 768:	80 e2       	ldi	r24, 0x20	; 32
 76a:	90 e0       	ldi	r25, 0x00	; 0
 76c:	0e 94 24 05 	call	0xa48	; 0xa48 <fputc>
 770:	3a 94       	dec	r3
 772:	f6 cf       	rjmp	.-20     	; 0x760 <__stack+0x261>
 774:	f7 01       	movw	r30, r14
 776:	86 81       	ldd	r24, Z+6	; 0x06
 778:	97 81       	ldd	r25, Z+7	; 0x07
 77a:	02 c0       	rjmp	.+4      	; 0x780 <__stack+0x281>
 77c:	8f ef       	ldi	r24, 0xFF	; 255
 77e:	9f ef       	ldi	r25, 0xFF	; 255
 780:	2c 96       	adiw	r28, 0x0c	; 12
 782:	e2 e1       	ldi	r30, 0x12	; 18
 784:	0c 94 02 06 	jmp	0xc04	; 0xc04 <__epilogue_restores__>

00000788 <calloc>:
 788:	0f 93       	push	r16
 78a:	1f 93       	push	r17
 78c:	cf 93       	push	r28
 78e:	df 93       	push	r29
 790:	86 9f       	mul	r24, r22
 792:	80 01       	movw	r16, r0
 794:	87 9f       	mul	r24, r23
 796:	10 0d       	add	r17, r0
 798:	96 9f       	mul	r25, r22
 79a:	10 0d       	add	r17, r0
 79c:	11 24       	eor	r1, r1
 79e:	c8 01       	movw	r24, r16
 7a0:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <malloc>
 7a4:	ec 01       	movw	r28, r24
 7a6:	00 97       	sbiw	r24, 0x00	; 0
 7a8:	29 f0       	breq	.+10     	; 0x7b4 <calloc+0x2c>
 7aa:	a8 01       	movw	r20, r16
 7ac:	60 e0       	ldi	r22, 0x00	; 0
 7ae:	70 e0       	ldi	r23, 0x00	; 0
 7b0:	0e 94 12 05 	call	0xa24	; 0xa24 <memset>
 7b4:	ce 01       	movw	r24, r28
 7b6:	df 91       	pop	r29
 7b8:	cf 91       	pop	r28
 7ba:	1f 91       	pop	r17
 7bc:	0f 91       	pop	r16
 7be:	08 95       	ret

000007c0 <malloc>:
 7c0:	cf 93       	push	r28
 7c2:	df 93       	push	r29
 7c4:	82 30       	cpi	r24, 0x02	; 2
 7c6:	91 05       	cpc	r25, r1
 7c8:	10 f4       	brcc	.+4      	; 0x7ce <malloc+0xe>
 7ca:	82 e0       	ldi	r24, 0x02	; 2
 7cc:	90 e0       	ldi	r25, 0x00	; 0
 7ce:	e0 91 f8 01 	lds	r30, 0x01F8
 7d2:	f0 91 f9 01 	lds	r31, 0x01F9
 7d6:	20 e0       	ldi	r18, 0x00	; 0
 7d8:	30 e0       	ldi	r19, 0x00	; 0
 7da:	a0 e0       	ldi	r26, 0x00	; 0
 7dc:	b0 e0       	ldi	r27, 0x00	; 0
 7de:	30 97       	sbiw	r30, 0x00	; 0
 7e0:	39 f1       	breq	.+78     	; 0x830 <malloc+0x70>
 7e2:	40 81       	ld	r20, Z
 7e4:	51 81       	ldd	r21, Z+1	; 0x01
 7e6:	48 17       	cp	r20, r24
 7e8:	59 07       	cpc	r21, r25
 7ea:	b8 f0       	brcs	.+46     	; 0x81a <malloc+0x5a>
 7ec:	48 17       	cp	r20, r24
 7ee:	59 07       	cpc	r21, r25
 7f0:	71 f4       	brne	.+28     	; 0x80e <malloc+0x4e>
 7f2:	82 81       	ldd	r24, Z+2	; 0x02
 7f4:	93 81       	ldd	r25, Z+3	; 0x03
 7f6:	10 97       	sbiw	r26, 0x00	; 0
 7f8:	29 f0       	breq	.+10     	; 0x804 <malloc+0x44>
 7fa:	13 96       	adiw	r26, 0x03	; 3
 7fc:	9c 93       	st	X, r25
 7fe:	8e 93       	st	-X, r24
 800:	12 97       	sbiw	r26, 0x02	; 2
 802:	2c c0       	rjmp	.+88     	; 0x85c <malloc+0x9c>
 804:	90 93 f9 01 	sts	0x01F9, r25
 808:	80 93 f8 01 	sts	0x01F8, r24
 80c:	27 c0       	rjmp	.+78     	; 0x85c <malloc+0x9c>
 80e:	21 15       	cp	r18, r1
 810:	31 05       	cpc	r19, r1
 812:	31 f0       	breq	.+12     	; 0x820 <malloc+0x60>
 814:	42 17       	cp	r20, r18
 816:	53 07       	cpc	r21, r19
 818:	18 f0       	brcs	.+6      	; 0x820 <malloc+0x60>
 81a:	a9 01       	movw	r20, r18
 81c:	db 01       	movw	r26, r22
 81e:	01 c0       	rjmp	.+2      	; 0x822 <malloc+0x62>
 820:	ef 01       	movw	r28, r30
 822:	9a 01       	movw	r18, r20
 824:	bd 01       	movw	r22, r26
 826:	df 01       	movw	r26, r30
 828:	02 80       	ldd	r0, Z+2	; 0x02
 82a:	f3 81       	ldd	r31, Z+3	; 0x03
 82c:	e0 2d       	mov	r30, r0
 82e:	d7 cf       	rjmp	.-82     	; 0x7de <malloc+0x1e>
 830:	21 15       	cp	r18, r1
 832:	31 05       	cpc	r19, r1
 834:	f9 f0       	breq	.+62     	; 0x874 <malloc+0xb4>
 836:	28 1b       	sub	r18, r24
 838:	39 0b       	sbc	r19, r25
 83a:	24 30       	cpi	r18, 0x04	; 4
 83c:	31 05       	cpc	r19, r1
 83e:	80 f4       	brcc	.+32     	; 0x860 <malloc+0xa0>
 840:	8a 81       	ldd	r24, Y+2	; 0x02
 842:	9b 81       	ldd	r25, Y+3	; 0x03
 844:	61 15       	cp	r22, r1
 846:	71 05       	cpc	r23, r1
 848:	21 f0       	breq	.+8      	; 0x852 <malloc+0x92>
 84a:	fb 01       	movw	r30, r22
 84c:	93 83       	std	Z+3, r25	; 0x03
 84e:	82 83       	std	Z+2, r24	; 0x02
 850:	04 c0       	rjmp	.+8      	; 0x85a <malloc+0x9a>
 852:	90 93 f9 01 	sts	0x01F9, r25
 856:	80 93 f8 01 	sts	0x01F8, r24
 85a:	fe 01       	movw	r30, r28
 85c:	32 96       	adiw	r30, 0x02	; 2
 85e:	44 c0       	rjmp	.+136    	; 0x8e8 <malloc+0x128>
 860:	fe 01       	movw	r30, r28
 862:	e2 0f       	add	r30, r18
 864:	f3 1f       	adc	r31, r19
 866:	81 93       	st	Z+, r24
 868:	91 93       	st	Z+, r25
 86a:	22 50       	subi	r18, 0x02	; 2
 86c:	31 09       	sbc	r19, r1
 86e:	39 83       	std	Y+1, r19	; 0x01
 870:	28 83       	st	Y, r18
 872:	3a c0       	rjmp	.+116    	; 0x8e8 <malloc+0x128>
 874:	20 91 f6 01 	lds	r18, 0x01F6
 878:	30 91 f7 01 	lds	r19, 0x01F7
 87c:	23 2b       	or	r18, r19
 87e:	41 f4       	brne	.+16     	; 0x890 <malloc+0xd0>
 880:	20 91 06 01 	lds	r18, 0x0106
 884:	30 91 07 01 	lds	r19, 0x0107
 888:	30 93 f7 01 	sts	0x01F7, r19
 88c:	20 93 f6 01 	sts	0x01F6, r18
 890:	20 91 04 01 	lds	r18, 0x0104
 894:	30 91 05 01 	lds	r19, 0x0105
 898:	21 15       	cp	r18, r1
 89a:	31 05       	cpc	r19, r1
 89c:	41 f4       	brne	.+16     	; 0x8ae <malloc+0xee>
 89e:	2d b7       	in	r18, 0x3d	; 61
 8a0:	3e b7       	in	r19, 0x3e	; 62
 8a2:	40 91 08 01 	lds	r20, 0x0108
 8a6:	50 91 09 01 	lds	r21, 0x0109
 8aa:	24 1b       	sub	r18, r20
 8ac:	35 0b       	sbc	r19, r21
 8ae:	e0 91 f6 01 	lds	r30, 0x01F6
 8b2:	f0 91 f7 01 	lds	r31, 0x01F7
 8b6:	e2 17       	cp	r30, r18
 8b8:	f3 07       	cpc	r31, r19
 8ba:	a0 f4       	brcc	.+40     	; 0x8e4 <malloc+0x124>
 8bc:	2e 1b       	sub	r18, r30
 8be:	3f 0b       	sbc	r19, r31
 8c0:	28 17       	cp	r18, r24
 8c2:	39 07       	cpc	r19, r25
 8c4:	78 f0       	brcs	.+30     	; 0x8e4 <malloc+0x124>
 8c6:	ac 01       	movw	r20, r24
 8c8:	4e 5f       	subi	r20, 0xFE	; 254
 8ca:	5f 4f       	sbci	r21, 0xFF	; 255
 8cc:	24 17       	cp	r18, r20
 8ce:	35 07       	cpc	r19, r21
 8d0:	48 f0       	brcs	.+18     	; 0x8e4 <malloc+0x124>
 8d2:	4e 0f       	add	r20, r30
 8d4:	5f 1f       	adc	r21, r31
 8d6:	50 93 f7 01 	sts	0x01F7, r21
 8da:	40 93 f6 01 	sts	0x01F6, r20
 8de:	81 93       	st	Z+, r24
 8e0:	91 93       	st	Z+, r25
 8e2:	02 c0       	rjmp	.+4      	; 0x8e8 <malloc+0x128>
 8e4:	e0 e0       	ldi	r30, 0x00	; 0
 8e6:	f0 e0       	ldi	r31, 0x00	; 0
 8e8:	cf 01       	movw	r24, r30
 8ea:	df 91       	pop	r29
 8ec:	cf 91       	pop	r28
 8ee:	08 95       	ret

000008f0 <free>:
 8f0:	cf 93       	push	r28
 8f2:	df 93       	push	r29
 8f4:	00 97       	sbiw	r24, 0x00	; 0
 8f6:	09 f4       	brne	.+2      	; 0x8fa <free+0xa>
 8f8:	87 c0       	rjmp	.+270    	; 0xa08 <free+0x118>
 8fa:	fc 01       	movw	r30, r24
 8fc:	32 97       	sbiw	r30, 0x02	; 2
 8fe:	13 82       	std	Z+3, r1	; 0x03
 900:	12 82       	std	Z+2, r1	; 0x02
 902:	c0 91 f8 01 	lds	r28, 0x01F8
 906:	d0 91 f9 01 	lds	r29, 0x01F9
 90a:	20 97       	sbiw	r28, 0x00	; 0
 90c:	81 f4       	brne	.+32     	; 0x92e <free+0x3e>
 90e:	20 81       	ld	r18, Z
 910:	31 81       	ldd	r19, Z+1	; 0x01
 912:	28 0f       	add	r18, r24
 914:	39 1f       	adc	r19, r25
 916:	80 91 f6 01 	lds	r24, 0x01F6
 91a:	90 91 f7 01 	lds	r25, 0x01F7
 91e:	82 17       	cp	r24, r18
 920:	93 07       	cpc	r25, r19
 922:	79 f5       	brne	.+94     	; 0x982 <free+0x92>
 924:	f0 93 f7 01 	sts	0x01F7, r31
 928:	e0 93 f6 01 	sts	0x01F6, r30
 92c:	6d c0       	rjmp	.+218    	; 0xa08 <free+0x118>
 92e:	de 01       	movw	r26, r28
 930:	20 e0       	ldi	r18, 0x00	; 0
 932:	30 e0       	ldi	r19, 0x00	; 0
 934:	ae 17       	cp	r26, r30
 936:	bf 07       	cpc	r27, r31
 938:	50 f4       	brcc	.+20     	; 0x94e <free+0x5e>
 93a:	12 96       	adiw	r26, 0x02	; 2
 93c:	4d 91       	ld	r20, X+
 93e:	5c 91       	ld	r21, X
 940:	13 97       	sbiw	r26, 0x03	; 3
 942:	9d 01       	movw	r18, r26
 944:	41 15       	cp	r20, r1
 946:	51 05       	cpc	r21, r1
 948:	09 f1       	breq	.+66     	; 0x98c <free+0x9c>
 94a:	da 01       	movw	r26, r20
 94c:	f3 cf       	rjmp	.-26     	; 0x934 <free+0x44>
 94e:	b3 83       	std	Z+3, r27	; 0x03
 950:	a2 83       	std	Z+2, r26	; 0x02
 952:	40 81       	ld	r20, Z
 954:	51 81       	ldd	r21, Z+1	; 0x01
 956:	84 0f       	add	r24, r20
 958:	95 1f       	adc	r25, r21
 95a:	8a 17       	cp	r24, r26
 95c:	9b 07       	cpc	r25, r27
 95e:	71 f4       	brne	.+28     	; 0x97c <free+0x8c>
 960:	8d 91       	ld	r24, X+
 962:	9c 91       	ld	r25, X
 964:	11 97       	sbiw	r26, 0x01	; 1
 966:	84 0f       	add	r24, r20
 968:	95 1f       	adc	r25, r21
 96a:	02 96       	adiw	r24, 0x02	; 2
 96c:	91 83       	std	Z+1, r25	; 0x01
 96e:	80 83       	st	Z, r24
 970:	12 96       	adiw	r26, 0x02	; 2
 972:	8d 91       	ld	r24, X+
 974:	9c 91       	ld	r25, X
 976:	13 97       	sbiw	r26, 0x03	; 3
 978:	93 83       	std	Z+3, r25	; 0x03
 97a:	82 83       	std	Z+2, r24	; 0x02
 97c:	21 15       	cp	r18, r1
 97e:	31 05       	cpc	r19, r1
 980:	29 f4       	brne	.+10     	; 0x98c <free+0x9c>
 982:	f0 93 f9 01 	sts	0x01F9, r31
 986:	e0 93 f8 01 	sts	0x01F8, r30
 98a:	3e c0       	rjmp	.+124    	; 0xa08 <free+0x118>
 98c:	d9 01       	movw	r26, r18
 98e:	13 96       	adiw	r26, 0x03	; 3
 990:	fc 93       	st	X, r31
 992:	ee 93       	st	-X, r30
 994:	12 97       	sbiw	r26, 0x02	; 2
 996:	4d 91       	ld	r20, X+
 998:	5d 91       	ld	r21, X+
 99a:	a4 0f       	add	r26, r20
 99c:	b5 1f       	adc	r27, r21
 99e:	ea 17       	cp	r30, r26
 9a0:	fb 07       	cpc	r31, r27
 9a2:	79 f4       	brne	.+30     	; 0x9c2 <free+0xd2>
 9a4:	80 81       	ld	r24, Z
 9a6:	91 81       	ldd	r25, Z+1	; 0x01
 9a8:	84 0f       	add	r24, r20
 9aa:	95 1f       	adc	r25, r21
 9ac:	02 96       	adiw	r24, 0x02	; 2
 9ae:	d9 01       	movw	r26, r18
 9b0:	11 96       	adiw	r26, 0x01	; 1
 9b2:	9c 93       	st	X, r25
 9b4:	8e 93       	st	-X, r24
 9b6:	82 81       	ldd	r24, Z+2	; 0x02
 9b8:	93 81       	ldd	r25, Z+3	; 0x03
 9ba:	13 96       	adiw	r26, 0x03	; 3
 9bc:	9c 93       	st	X, r25
 9be:	8e 93       	st	-X, r24
 9c0:	12 97       	sbiw	r26, 0x02	; 2
 9c2:	e0 e0       	ldi	r30, 0x00	; 0
 9c4:	f0 e0       	ldi	r31, 0x00	; 0
 9c6:	8a 81       	ldd	r24, Y+2	; 0x02
 9c8:	9b 81       	ldd	r25, Y+3	; 0x03
 9ca:	00 97       	sbiw	r24, 0x00	; 0
 9cc:	19 f0       	breq	.+6      	; 0x9d4 <free+0xe4>
 9ce:	fe 01       	movw	r30, r28
 9d0:	ec 01       	movw	r28, r24
 9d2:	f9 cf       	rjmp	.-14     	; 0x9c6 <free+0xd6>
 9d4:	ce 01       	movw	r24, r28
 9d6:	02 96       	adiw	r24, 0x02	; 2
 9d8:	28 81       	ld	r18, Y
 9da:	39 81       	ldd	r19, Y+1	; 0x01
 9dc:	82 0f       	add	r24, r18
 9de:	93 1f       	adc	r25, r19
 9e0:	20 91 f6 01 	lds	r18, 0x01F6
 9e4:	30 91 f7 01 	lds	r19, 0x01F7
 9e8:	28 17       	cp	r18, r24
 9ea:	39 07       	cpc	r19, r25
 9ec:	69 f4       	brne	.+26     	; 0xa08 <free+0x118>
 9ee:	30 97       	sbiw	r30, 0x00	; 0
 9f0:	29 f4       	brne	.+10     	; 0x9fc <free+0x10c>
 9f2:	10 92 f9 01 	sts	0x01F9, r1
 9f6:	10 92 f8 01 	sts	0x01F8, r1
 9fa:	02 c0       	rjmp	.+4      	; 0xa00 <free+0x110>
 9fc:	13 82       	std	Z+3, r1	; 0x03
 9fe:	12 82       	std	Z+2, r1	; 0x02
 a00:	d0 93 f7 01 	sts	0x01F7, r29
 a04:	c0 93 f6 01 	sts	0x01F6, r28
 a08:	df 91       	pop	r29
 a0a:	cf 91       	pop	r28
 a0c:	08 95       	ret

00000a0e <strnlen_P>:
 a0e:	fc 01       	movw	r30, r24
 a10:	05 90       	lpm	r0, Z+
 a12:	61 50       	subi	r22, 0x01	; 1
 a14:	70 40       	sbci	r23, 0x00	; 0
 a16:	01 10       	cpse	r0, r1
 a18:	d8 f7       	brcc	.-10     	; 0xa10 <strnlen_P+0x2>
 a1a:	80 95       	com	r24
 a1c:	90 95       	com	r25
 a1e:	8e 0f       	add	r24, r30
 a20:	9f 1f       	adc	r25, r31
 a22:	08 95       	ret

00000a24 <memset>:
 a24:	dc 01       	movw	r26, r24
 a26:	01 c0       	rjmp	.+2      	; 0xa2a <memset+0x6>
 a28:	6d 93       	st	X+, r22
 a2a:	41 50       	subi	r20, 0x01	; 1
 a2c:	50 40       	sbci	r21, 0x00	; 0
 a2e:	e0 f7       	brcc	.-8      	; 0xa28 <memset+0x4>
 a30:	08 95       	ret

00000a32 <strnlen>:
 a32:	fc 01       	movw	r30, r24
 a34:	61 50       	subi	r22, 0x01	; 1
 a36:	70 40       	sbci	r23, 0x00	; 0
 a38:	01 90       	ld	r0, Z+
 a3a:	01 10       	cpse	r0, r1
 a3c:	d8 f7       	brcc	.-10     	; 0xa34 <strnlen+0x2>
 a3e:	80 95       	com	r24
 a40:	90 95       	com	r25
 a42:	8e 0f       	add	r24, r30
 a44:	9f 1f       	adc	r25, r31
 a46:	08 95       	ret

00000a48 <fputc>:
 a48:	0f 93       	push	r16
 a4a:	1f 93       	push	r17
 a4c:	cf 93       	push	r28
 a4e:	df 93       	push	r29
 a50:	18 2f       	mov	r17, r24
 a52:	09 2f       	mov	r16, r25
 a54:	eb 01       	movw	r28, r22
 a56:	8b 81       	ldd	r24, Y+3	; 0x03
 a58:	81 fd       	sbrc	r24, 1
 a5a:	03 c0       	rjmp	.+6      	; 0xa62 <fputc+0x1a>
 a5c:	8f ef       	ldi	r24, 0xFF	; 255
 a5e:	9f ef       	ldi	r25, 0xFF	; 255
 a60:	20 c0       	rjmp	.+64     	; 0xaa2 <fputc+0x5a>
 a62:	82 ff       	sbrs	r24, 2
 a64:	10 c0       	rjmp	.+32     	; 0xa86 <fputc+0x3e>
 a66:	4e 81       	ldd	r20, Y+6	; 0x06
 a68:	5f 81       	ldd	r21, Y+7	; 0x07
 a6a:	2c 81       	ldd	r18, Y+4	; 0x04
 a6c:	3d 81       	ldd	r19, Y+5	; 0x05
 a6e:	42 17       	cp	r20, r18
 a70:	53 07       	cpc	r21, r19
 a72:	7c f4       	brge	.+30     	; 0xa92 <fputc+0x4a>
 a74:	e8 81       	ld	r30, Y
 a76:	f9 81       	ldd	r31, Y+1	; 0x01
 a78:	9f 01       	movw	r18, r30
 a7a:	2f 5f       	subi	r18, 0xFF	; 255
 a7c:	3f 4f       	sbci	r19, 0xFF	; 255
 a7e:	39 83       	std	Y+1, r19	; 0x01
 a80:	28 83       	st	Y, r18
 a82:	10 83       	st	Z, r17
 a84:	06 c0       	rjmp	.+12     	; 0xa92 <fputc+0x4a>
 a86:	e8 85       	ldd	r30, Y+8	; 0x08
 a88:	f9 85       	ldd	r31, Y+9	; 0x09
 a8a:	81 2f       	mov	r24, r17
 a8c:	09 95       	icall
 a8e:	89 2b       	or	r24, r25
 a90:	29 f7       	brne	.-54     	; 0xa5c <fputc+0x14>
 a92:	2e 81       	ldd	r18, Y+6	; 0x06
 a94:	3f 81       	ldd	r19, Y+7	; 0x07
 a96:	2f 5f       	subi	r18, 0xFF	; 255
 a98:	3f 4f       	sbci	r19, 0xFF	; 255
 a9a:	3f 83       	std	Y+7, r19	; 0x07
 a9c:	2e 83       	std	Y+6, r18	; 0x06
 a9e:	81 2f       	mov	r24, r17
 aa0:	90 2f       	mov	r25, r16
 aa2:	df 91       	pop	r29
 aa4:	cf 91       	pop	r28
 aa6:	1f 91       	pop	r17
 aa8:	0f 91       	pop	r16
 aaa:	08 95       	ret

00000aac <__ultoa_invert>:
 aac:	fa 01       	movw	r30, r20
 aae:	aa 27       	eor	r26, r26
 ab0:	28 30       	cpi	r18, 0x08	; 8
 ab2:	51 f1       	breq	.+84     	; 0xb08 <__ultoa_invert+0x5c>
 ab4:	20 31       	cpi	r18, 0x10	; 16
 ab6:	81 f1       	breq	.+96     	; 0xb18 <__ultoa_invert+0x6c>
 ab8:	e8 94       	clt
 aba:	6f 93       	push	r22
 abc:	6e 7f       	andi	r22, 0xFE	; 254
 abe:	6e 5f       	subi	r22, 0xFE	; 254
 ac0:	7f 4f       	sbci	r23, 0xFF	; 255
 ac2:	8f 4f       	sbci	r24, 0xFF	; 255
 ac4:	9f 4f       	sbci	r25, 0xFF	; 255
 ac6:	af 4f       	sbci	r26, 0xFF	; 255
 ac8:	b1 e0       	ldi	r27, 0x01	; 1
 aca:	3e d0       	rcall	.+124    	; 0xb48 <__ultoa_invert+0x9c>
 acc:	b4 e0       	ldi	r27, 0x04	; 4
 ace:	3c d0       	rcall	.+120    	; 0xb48 <__ultoa_invert+0x9c>
 ad0:	67 0f       	add	r22, r23
 ad2:	78 1f       	adc	r23, r24
 ad4:	89 1f       	adc	r24, r25
 ad6:	9a 1f       	adc	r25, r26
 ad8:	a1 1d       	adc	r26, r1
 ada:	68 0f       	add	r22, r24
 adc:	79 1f       	adc	r23, r25
 ade:	8a 1f       	adc	r24, r26
 ae0:	91 1d       	adc	r25, r1
 ae2:	a1 1d       	adc	r26, r1
 ae4:	6a 0f       	add	r22, r26
 ae6:	71 1d       	adc	r23, r1
 ae8:	81 1d       	adc	r24, r1
 aea:	91 1d       	adc	r25, r1
 aec:	a1 1d       	adc	r26, r1
 aee:	20 d0       	rcall	.+64     	; 0xb30 <__ultoa_invert+0x84>
 af0:	09 f4       	brne	.+2      	; 0xaf4 <__ultoa_invert+0x48>
 af2:	68 94       	set
 af4:	3f 91       	pop	r19
 af6:	2a e0       	ldi	r18, 0x0A	; 10
 af8:	26 9f       	mul	r18, r22
 afa:	11 24       	eor	r1, r1
 afc:	30 19       	sub	r19, r0
 afe:	30 5d       	subi	r19, 0xD0	; 208
 b00:	31 93       	st	Z+, r19
 b02:	de f6       	brtc	.-74     	; 0xaba <__ultoa_invert+0xe>
 b04:	cf 01       	movw	r24, r30
 b06:	08 95       	ret
 b08:	46 2f       	mov	r20, r22
 b0a:	47 70       	andi	r20, 0x07	; 7
 b0c:	40 5d       	subi	r20, 0xD0	; 208
 b0e:	41 93       	st	Z+, r20
 b10:	b3 e0       	ldi	r27, 0x03	; 3
 b12:	0f d0       	rcall	.+30     	; 0xb32 <__ultoa_invert+0x86>
 b14:	c9 f7       	brne	.-14     	; 0xb08 <__ultoa_invert+0x5c>
 b16:	f6 cf       	rjmp	.-20     	; 0xb04 <__ultoa_invert+0x58>
 b18:	46 2f       	mov	r20, r22
 b1a:	4f 70       	andi	r20, 0x0F	; 15
 b1c:	40 5d       	subi	r20, 0xD0	; 208
 b1e:	4a 33       	cpi	r20, 0x3A	; 58
 b20:	18 f0       	brcs	.+6      	; 0xb28 <__ultoa_invert+0x7c>
 b22:	49 5d       	subi	r20, 0xD9	; 217
 b24:	31 fd       	sbrc	r19, 1
 b26:	40 52       	subi	r20, 0x20	; 32
 b28:	41 93       	st	Z+, r20
 b2a:	02 d0       	rcall	.+4      	; 0xb30 <__ultoa_invert+0x84>
 b2c:	a9 f7       	brne	.-22     	; 0xb18 <__ultoa_invert+0x6c>
 b2e:	ea cf       	rjmp	.-44     	; 0xb04 <__ultoa_invert+0x58>
 b30:	b4 e0       	ldi	r27, 0x04	; 4
 b32:	a6 95       	lsr	r26
 b34:	97 95       	ror	r25
 b36:	87 95       	ror	r24
 b38:	77 95       	ror	r23
 b3a:	67 95       	ror	r22
 b3c:	ba 95       	dec	r27
 b3e:	c9 f7       	brne	.-14     	; 0xb32 <__ultoa_invert+0x86>
 b40:	00 97       	sbiw	r24, 0x00	; 0
 b42:	61 05       	cpc	r22, r1
 b44:	71 05       	cpc	r23, r1
 b46:	08 95       	ret
 b48:	9b 01       	movw	r18, r22
 b4a:	ac 01       	movw	r20, r24
 b4c:	0a 2e       	mov	r0, r26
 b4e:	06 94       	lsr	r0
 b50:	57 95       	ror	r21
 b52:	47 95       	ror	r20
 b54:	37 95       	ror	r19
 b56:	27 95       	ror	r18
 b58:	ba 95       	dec	r27
 b5a:	c9 f7       	brne	.-14     	; 0xb4e <__ultoa_invert+0xa2>
 b5c:	62 0f       	add	r22, r18
 b5e:	73 1f       	adc	r23, r19
 b60:	84 1f       	adc	r24, r20
 b62:	95 1f       	adc	r25, r21
 b64:	a0 1d       	adc	r26, r0
 b66:	08 95       	ret

00000b68 <__divmodsi4>:
 b68:	05 2e       	mov	r0, r21
 b6a:	97 fb       	bst	r25, 7
 b6c:	1e f4       	brtc	.+6      	; 0xb74 <__divmodsi4+0xc>
 b6e:	00 94       	com	r0
 b70:	0e 94 cb 05 	call	0xb96	; 0xb96 <__negsi2>
 b74:	57 fd       	sbrc	r21, 7
 b76:	07 d0       	rcall	.+14     	; 0xb86 <__divmodsi4_neg2>
 b78:	0e 94 1d 06 	call	0xc3a	; 0xc3a <__udivmodsi4>
 b7c:	07 fc       	sbrc	r0, 7
 b7e:	03 d0       	rcall	.+6      	; 0xb86 <__divmodsi4_neg2>
 b80:	4e f4       	brtc	.+18     	; 0xb94 <__divmodsi4_exit>
 b82:	0c 94 cb 05 	jmp	0xb96	; 0xb96 <__negsi2>

00000b86 <__divmodsi4_neg2>:
 b86:	50 95       	com	r21
 b88:	40 95       	com	r20
 b8a:	30 95       	com	r19
 b8c:	21 95       	neg	r18
 b8e:	3f 4f       	sbci	r19, 0xFF	; 255
 b90:	4f 4f       	sbci	r20, 0xFF	; 255
 b92:	5f 4f       	sbci	r21, 0xFF	; 255

00000b94 <__divmodsi4_exit>:
 b94:	08 95       	ret

00000b96 <__negsi2>:
 b96:	90 95       	com	r25
 b98:	80 95       	com	r24
 b9a:	70 95       	com	r23
 b9c:	61 95       	neg	r22
 b9e:	7f 4f       	sbci	r23, 0xFF	; 255
 ba0:	8f 4f       	sbci	r24, 0xFF	; 255
 ba2:	9f 4f       	sbci	r25, 0xFF	; 255
 ba4:	08 95       	ret

00000ba6 <__muluhisi3>:
 ba6:	0e 94 3f 06 	call	0xc7e	; 0xc7e <__umulhisi3>
 baa:	a5 9f       	mul	r26, r21
 bac:	90 0d       	add	r25, r0
 bae:	b4 9f       	mul	r27, r20
 bb0:	90 0d       	add	r25, r0
 bb2:	a4 9f       	mul	r26, r20
 bb4:	80 0d       	add	r24, r0
 bb6:	91 1d       	adc	r25, r1
 bb8:	11 24       	eor	r1, r1
 bba:	08 95       	ret

00000bbc <__mulshisi3>:
 bbc:	b7 ff       	sbrs	r27, 7
 bbe:	0c 94 d3 05 	jmp	0xba6	; 0xba6 <__muluhisi3>

00000bc2 <__mulohisi3>:
 bc2:	0e 94 d3 05 	call	0xba6	; 0xba6 <__muluhisi3>
 bc6:	82 1b       	sub	r24, r18
 bc8:	93 0b       	sbc	r25, r19
 bca:	08 95       	ret

00000bcc <__prologue_saves__>:
 bcc:	2f 92       	push	r2
 bce:	3f 92       	push	r3
 bd0:	4f 92       	push	r4
 bd2:	5f 92       	push	r5
 bd4:	6f 92       	push	r6
 bd6:	7f 92       	push	r7
 bd8:	8f 92       	push	r8
 bda:	9f 92       	push	r9
 bdc:	af 92       	push	r10
 bde:	bf 92       	push	r11
 be0:	cf 92       	push	r12
 be2:	df 92       	push	r13
 be4:	ef 92       	push	r14
 be6:	ff 92       	push	r15
 be8:	0f 93       	push	r16
 bea:	1f 93       	push	r17
 bec:	cf 93       	push	r28
 bee:	df 93       	push	r29
 bf0:	cd b7       	in	r28, 0x3d	; 61
 bf2:	de b7       	in	r29, 0x3e	; 62
 bf4:	ca 1b       	sub	r28, r26
 bf6:	db 0b       	sbc	r29, r27
 bf8:	0f b6       	in	r0, 0x3f	; 63
 bfa:	f8 94       	cli
 bfc:	de bf       	out	0x3e, r29	; 62
 bfe:	0f be       	out	0x3f, r0	; 63
 c00:	cd bf       	out	0x3d, r28	; 61
 c02:	09 94       	ijmp

00000c04 <__epilogue_restores__>:
 c04:	2a 88       	ldd	r2, Y+18	; 0x12
 c06:	39 88       	ldd	r3, Y+17	; 0x11
 c08:	48 88       	ldd	r4, Y+16	; 0x10
 c0a:	5f 84       	ldd	r5, Y+15	; 0x0f
 c0c:	6e 84       	ldd	r6, Y+14	; 0x0e
 c0e:	7d 84       	ldd	r7, Y+13	; 0x0d
 c10:	8c 84       	ldd	r8, Y+12	; 0x0c
 c12:	9b 84       	ldd	r9, Y+11	; 0x0b
 c14:	aa 84       	ldd	r10, Y+10	; 0x0a
 c16:	b9 84       	ldd	r11, Y+9	; 0x09
 c18:	c8 84       	ldd	r12, Y+8	; 0x08
 c1a:	df 80       	ldd	r13, Y+7	; 0x07
 c1c:	ee 80       	ldd	r14, Y+6	; 0x06
 c1e:	fd 80       	ldd	r15, Y+5	; 0x05
 c20:	0c 81       	ldd	r16, Y+4	; 0x04
 c22:	1b 81       	ldd	r17, Y+3	; 0x03
 c24:	aa 81       	ldd	r26, Y+2	; 0x02
 c26:	b9 81       	ldd	r27, Y+1	; 0x01
 c28:	ce 0f       	add	r28, r30
 c2a:	d1 1d       	adc	r29, r1
 c2c:	0f b6       	in	r0, 0x3f	; 63
 c2e:	f8 94       	cli
 c30:	de bf       	out	0x3e, r29	; 62
 c32:	0f be       	out	0x3f, r0	; 63
 c34:	cd bf       	out	0x3d, r28	; 61
 c36:	ed 01       	movw	r28, r26
 c38:	08 95       	ret

00000c3a <__udivmodsi4>:
 c3a:	a1 e2       	ldi	r26, 0x21	; 33
 c3c:	1a 2e       	mov	r1, r26
 c3e:	aa 1b       	sub	r26, r26
 c40:	bb 1b       	sub	r27, r27
 c42:	fd 01       	movw	r30, r26
 c44:	0d c0       	rjmp	.+26     	; 0xc60 <__udivmodsi4_ep>

00000c46 <__udivmodsi4_loop>:
 c46:	aa 1f       	adc	r26, r26
 c48:	bb 1f       	adc	r27, r27
 c4a:	ee 1f       	adc	r30, r30
 c4c:	ff 1f       	adc	r31, r31
 c4e:	a2 17       	cp	r26, r18
 c50:	b3 07       	cpc	r27, r19
 c52:	e4 07       	cpc	r30, r20
 c54:	f5 07       	cpc	r31, r21
 c56:	20 f0       	brcs	.+8      	; 0xc60 <__udivmodsi4_ep>
 c58:	a2 1b       	sub	r26, r18
 c5a:	b3 0b       	sbc	r27, r19
 c5c:	e4 0b       	sbc	r30, r20
 c5e:	f5 0b       	sbc	r31, r21

00000c60 <__udivmodsi4_ep>:
 c60:	66 1f       	adc	r22, r22
 c62:	77 1f       	adc	r23, r23
 c64:	88 1f       	adc	r24, r24
 c66:	99 1f       	adc	r25, r25
 c68:	1a 94       	dec	r1
 c6a:	69 f7       	brne	.-38     	; 0xc46 <__udivmodsi4_loop>
 c6c:	60 95       	com	r22
 c6e:	70 95       	com	r23
 c70:	80 95       	com	r24
 c72:	90 95       	com	r25
 c74:	9b 01       	movw	r18, r22
 c76:	ac 01       	movw	r20, r24
 c78:	bd 01       	movw	r22, r26
 c7a:	cf 01       	movw	r24, r30
 c7c:	08 95       	ret

00000c7e <__umulhisi3>:
 c7e:	a2 9f       	mul	r26, r18
 c80:	b0 01       	movw	r22, r0
 c82:	b3 9f       	mul	r27, r19
 c84:	c0 01       	movw	r24, r0
 c86:	a3 9f       	mul	r26, r19
 c88:	70 0d       	add	r23, r0
 c8a:	81 1d       	adc	r24, r1
 c8c:	11 24       	eor	r1, r1
 c8e:	91 1d       	adc	r25, r1
 c90:	b2 9f       	mul	r27, r18
 c92:	70 0d       	add	r23, r0
 c94:	81 1d       	adc	r24, r1
 c96:	11 24       	eor	r1, r1
 c98:	91 1d       	adc	r25, r1
 c9a:	08 95       	ret

00000c9c <_exit>:
 c9c:	f8 94       	cli

00000c9e <__stop_program>:
 c9e:	ff cf       	rjmp	.-2      	; 0xc9e <__stop_program>
