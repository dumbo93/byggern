
ATmega2560.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000112  00800200  0000128c  00001320  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000128c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  00800312  00800312  00001432  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001432  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000160  00000000  00000000  0000148e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001396  00000000  00000000  000015ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000098b  00000000  00000000  00002984  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000cbc  00000000  00000000  0000330f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000308  00000000  00000000  00003fcc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000042b  00000000  00000000  000042d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000007e2  00000000  00000000  000046ff  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000f0  00000000  00000000  00004ee1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	27 c1       	rjmp	.+590    	; 0x25c <__vector_3>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	87 c0       	rjmp	.+270    	; 0x124 <__bad_interrupt>
      16:	00 00       	nop
      18:	85 c0       	rjmp	.+266    	; 0x124 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	63 c0       	rjmp	.+198    	; 0x124 <__bad_interrupt>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	5f c0       	rjmp	.+190    	; 0x124 <__bad_interrupt>
      66:	00 00       	nop
      68:	5d c0       	rjmp	.+186    	; 0x124 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	49 c0       	rjmp	.+146    	; 0x124 <__bad_interrupt>
      92:	00 00       	nop
      94:	47 c0       	rjmp	.+142    	; 0x124 <__bad_interrupt>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2b c0       	rjmp	.+86     	; 0x124 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	29 c0       	rjmp	.+82     	; 0x124 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	25 c0       	rjmp	.+74     	; 0x124 <__bad_interrupt>
      da:	00 00       	nop
      dc:	23 c0       	rjmp	.+70     	; 0x124 <__bad_interrupt>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	13 e0       	ldi	r17, 0x03	; 3
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	ec e8       	ldi	r30, 0x8C	; 140
      fc:	f2 e1       	ldi	r31, 0x12	; 18
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a2 31       	cpi	r26, 0x12	; 18
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	23 e0       	ldi	r18, 0x03	; 3
     110:	a2 e1       	ldi	r26, 0x12	; 18
     112:	b3 e0       	ldi	r27, 0x03	; 3
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	ad 31       	cpi	r26, 0x1D	; 29
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	84 d1       	rcall	.+776    	; 0x428 <main>
     120:	0c 94 44 09 	jmp	0x1288	; 0x1288 <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <CAN_init>:
	
	for (int i = 0; i < message->length; i++){
		MCP_write(MCP_TXB0SIDH + 5 + i, message->data[i] );
	}
	MCP_request_to_send(MCP_RTS_TX0);
}
     126:	40 e6       	ldi	r20, 0x60	; 96
     128:	60 e6       	ldi	r22, 0x60	; 96
     12a:	80 e6       	ldi	r24, 0x60	; 96
     12c:	1f d1       	rcall	.+574    	; 0x36c <MCP_bit_modify>
     12e:	40 e6       	ldi	r20, 0x60	; 96
     130:	60 e6       	ldi	r22, 0x60	; 96
     132:	80 e7       	ldi	r24, 0x70	; 112
     134:	1b d1       	rcall	.+566    	; 0x36c <MCP_bit_modify>
     136:	44 e0       	ldi	r20, 0x04	; 4
     138:	64 e0       	ldi	r22, 0x04	; 4
     13a:	80 e6       	ldi	r24, 0x60	; 96
     13c:	17 d1       	rcall	.+558    	; 0x36c <MCP_bit_modify>
     13e:	44 e0       	ldi	r20, 0x04	; 4
     140:	64 e0       	ldi	r22, 0x04	; 4
     142:	80 e7       	ldi	r24, 0x70	; 112
     144:	13 d1       	rcall	.+550    	; 0x36c <MCP_bit_modify>
     146:	40 e0       	ldi	r20, 0x00	; 0
     148:	60 ee       	ldi	r22, 0xE0	; 224
     14a:	8f e0       	ldi	r24, 0x0F	; 15
     14c:	0f d1       	rcall	.+542    	; 0x36c <MCP_bit_modify>
     14e:	8e e0       	ldi	r24, 0x0E	; 14
     150:	cd d0       	rcall	.+410    	; 0x2ec <MCP_read>
     152:	80 7e       	andi	r24, 0xE0	; 224
     154:	31 f0       	breq	.+12     	; 0x162 <CAN_init+0x3c>
     156:	86 e0       	ldi	r24, 0x06	; 6
     158:	92 e0       	ldi	r25, 0x02	; 2
     15a:	8d d4       	rcall	.+2330   	; 0xa76 <puts>
     15c:	81 e0       	ldi	r24, 0x01	; 1
     15e:	90 e0       	ldi	r25, 0x00	; 0
     160:	08 95       	ret
     162:	63 e0       	ldi	r22, 0x03	; 3
     164:	8b e2       	ldi	r24, 0x2B	; 43
     166:	ef d0       	rcall	.+478    	; 0x346 <MCP_write>
     168:	e9 e6       	ldi	r30, 0x69	; 105
     16a:	f0 e0       	ldi	r31, 0x00	; 0
     16c:	80 81       	ld	r24, Z
     16e:	80 62       	ori	r24, 0x20	; 32
     170:	80 83       	st	Z, r24
     172:	ea 9a       	sbi	0x1d, 2	; 29
     174:	80 e0       	ldi	r24, 0x00	; 0
     176:	90 e0       	ldi	r25, 0x00	; 0
     178:	08 95       	ret

0000017a <CAN_msg_receive>:

void CAN_msg_receive(can_msg *msg, uint8_t reg)
{
     17a:	cf 92       	push	r12
     17c:	df 92       	push	r13
     17e:	ef 92       	push	r14
     180:	ff 92       	push	r15
     182:	0f 93       	push	r16
     184:	1f 93       	push	r17
     186:	cf 93       	push	r28
     188:	df 93       	push	r29
     18a:	7c 01       	movw	r14, r24
     18c:	c6 2f       	mov	r28, r22

	msg->id = (MCP_read(reg + 1) << 3) | (MCP_read(reg + 2) >> 5); //RXBnSIDH and RXBnSIDL (id)
     18e:	81 e0       	ldi	r24, 0x01	; 1
     190:	86 0f       	add	r24, r22
     192:	ac d0       	rcall	.+344    	; 0x2ec <MCP_read>
     194:	d8 2f       	mov	r29, r24
     196:	82 e0       	ldi	r24, 0x02	; 2
     198:	8c 0f       	add	r24, r28
     19a:	a8 d0       	rcall	.+336    	; 0x2ec <MCP_read>
     19c:	48 2f       	mov	r20, r24
     19e:	42 95       	swap	r20
     1a0:	46 95       	lsr	r20
     1a2:	47 70       	andi	r20, 0x07	; 7
     1a4:	2d 2f       	mov	r18, r29
     1a6:	30 e0       	ldi	r19, 0x00	; 0
     1a8:	c9 01       	movw	r24, r18
     1aa:	88 0f       	add	r24, r24
     1ac:	99 1f       	adc	r25, r25
     1ae:	88 0f       	add	r24, r24
     1b0:	99 1f       	adc	r25, r25
     1b2:	88 0f       	add	r24, r24
     1b4:	99 1f       	adc	r25, r25
     1b6:	84 2b       	or	r24, r20
     1b8:	f7 01       	movw	r30, r14
     1ba:	91 83       	std	Z+1, r25	; 0x01
     1bc:	80 83       	st	Z, r24
	msg->length = (MCP_read(reg + 5) & 0x0F ); // bit 0 to 3 are data length code bits. register + 5 is RXBnDLC (data length)
     1be:	85 e0       	ldi	r24, 0x05	; 5
     1c0:	8c 0f       	add	r24, r28
     1c2:	94 d0       	rcall	.+296    	; 0x2ec <MCP_read>
     1c4:	8f 70       	andi	r24, 0x0F	; 15
     1c6:	f7 01       	movw	r30, r14
     1c8:	82 83       	std	Z+2, r24	; 0x02
		
	int i = 0;
	while( (i < msg->length) && (i < 8) ){
     1ca:	88 23       	and	r24, r24
     1cc:	f1 f0       	breq	.+60     	; 0x20a <CAN_msg_receive+0x90>
     1ce:	0f 2e       	mov	r0, r31
     1d0:	f6 e0       	ldi	r31, 0x06	; 6
     1d2:	df 2e       	mov	r13, r31
     1d4:	f0 2d       	mov	r31, r0
     1d6:	dc 0e       	add	r13, r28
     1d8:	87 01       	movw	r16, r14
     1da:	0d 5f       	subi	r16, 0xFD	; 253
     1dc:	1f 4f       	sbci	r17, 0xFF	; 255
     1de:	0f 2e       	mov	r0, r31
     1e0:	fe e0       	ldi	r31, 0x0E	; 14
     1e2:	cf 2e       	mov	r12, r31
     1e4:	f0 2d       	mov	r31, r0
     1e6:	cc 0e       	add	r12, r28
{

	msg->id = (MCP_read(reg + 1) << 3) | (MCP_read(reg + 2) >> 5); //RXBnSIDH and RXBnSIDL (id)
	msg->length = (MCP_read(reg + 5) & 0x0F ); // bit 0 to 3 are data length code bits. register + 5 is RXBnDLC (data length)
		
	int i = 0;
     1e8:	c0 e0       	ldi	r28, 0x00	; 0
     1ea:	d0 e0       	ldi	r29, 0x00	; 0
	while( (i < msg->length) && (i < 8) ){
		msg->data[i] = MCP_read(reg + 6 + i);	//RXBnDM (receive buffer)
     1ec:	8d 2d       	mov	r24, r13
     1ee:	7e d0       	rcall	.+252    	; 0x2ec <MCP_read>
     1f0:	f8 01       	movw	r30, r16
     1f2:	81 93       	st	Z+, r24
     1f4:	8f 01       	movw	r16, r30
		i++;
     1f6:	21 96       	adiw	r28, 0x01	; 1

	msg->id = (MCP_read(reg + 1) << 3) | (MCP_read(reg + 2) >> 5); //RXBnSIDH and RXBnSIDL (id)
	msg->length = (MCP_read(reg + 5) & 0x0F ); // bit 0 to 3 are data length code bits. register + 5 is RXBnDLC (data length)
		
	int i = 0;
	while( (i < msg->length) && (i < 8) ){
     1f8:	f7 01       	movw	r30, r14
     1fa:	22 81       	ldd	r18, Z+2	; 0x02
     1fc:	30 e0       	ldi	r19, 0x00	; 0
     1fe:	c2 17       	cp	r28, r18
     200:	d3 07       	cpc	r29, r19
     202:	1c f4       	brge	.+6      	; 0x20a <CAN_msg_receive+0x90>
     204:	d3 94       	inc	r13
     206:	dc 10       	cpse	r13, r12
     208:	f1 cf       	rjmp	.-30     	; 0x1ec <CAN_msg_receive+0x72>
		msg->data[i] = MCP_read(reg + 6 + i);	//RXBnDM (receive buffer)
		i++;
	}	
	
}
     20a:	df 91       	pop	r29
     20c:	cf 91       	pop	r28
     20e:	1f 91       	pop	r17
     210:	0f 91       	pop	r16
     212:	ff 90       	pop	r15
     214:	ef 90       	pop	r14
     216:	df 90       	pop	r13
     218:	cf 90       	pop	r12
     21a:	08 95       	ret

0000021c <CAN_handle_interrupt>:

void CAN_handle_interrupt(can_msg *msg)
{
	//printf("EFLG: %x\n", MCP_read(MCP_EFLG));
	//printf("RXB0CTRL: %x\n", MCP_read(MCP_RXB0CTRL));
	switch(interrupt_flag){
     21c:	20 91 12 03 	lds	r18, 0x0312
     220:	21 30       	cpi	r18, 0x01	; 1
     222:	41 f0       	breq	.+16     	; 0x234 <CAN_handle_interrupt+0x18>
     224:	18 f0       	brcs	.+6      	; 0x22c <CAN_handle_interrupt+0x10>
     226:	22 30       	cpi	r18, 0x02	; 2
     228:	69 f0       	breq	.+26     	; 0x244 <CAN_handle_interrupt+0x28>
     22a:	14 c0       	rjmp	.+40     	; 0x254 <CAN_handle_interrupt+0x38>
		case no_flag:
		printf("no interrupt 1\n");
     22c:	83 e3       	ldi	r24, 0x33	; 51
     22e:	92 e0       	ldi	r25, 0x02	; 2
     230:	22 c4       	rjmp	.+2116   	; 0xa76 <puts>
			break;
     232:	08 95       	ret
		case RX0:
			CAN_msg_receive(msg, MCP_RXB0CTRL);
     234:	60 e6       	ldi	r22, 0x60	; 96
     236:	a1 df       	rcall	.-190    	; 0x17a <CAN_msg_receive>
			interrupt_flag = no_flag;
     238:	10 92 12 03 	sts	0x0312, r1
			printf("interrupt handled 1\n");
     23c:	82 e4       	ldi	r24, 0x42	; 66
     23e:	92 e0       	ldi	r25, 0x02	; 2
     240:	1a c4       	rjmp	.+2100   	; 0xa76 <puts>
			break;
     242:	08 95       	ret
		case RX1:
			CAN_msg_receive(msg, MCP_RXB1CTRL);
     244:	60 e7       	ldi	r22, 0x70	; 112
     246:	99 df       	rcall	.-206    	; 0x17a <CAN_msg_receive>
			interrupt_flag = no_flag;
     248:	10 92 12 03 	sts	0x0312, r1
			printf("interrupt handled 2\n");
     24c:	86 e5       	ldi	r24, 0x56	; 86
     24e:	92 e0       	ldi	r25, 0x02	; 2
     250:	12 c4       	rjmp	.+2084   	; 0xa76 <puts>
			break;
     252:	08 95       	ret
		default:
		printf("no interrupt 2\n");
     254:	8a e6       	ldi	r24, 0x6A	; 106
     256:	92 e0       	ldi	r25, 0x02	; 2
     258:	0e c4       	rjmp	.+2076   	; 0xa76 <puts>
     25a:	08 95       	ret

0000025c <__vector_3>:
	
}
#endif

#if defined(__AVR_ATmega2560__)
ISR(INT2_vect){
     25c:	1f 92       	push	r1
     25e:	0f 92       	push	r0
     260:	0f b6       	in	r0, 0x3f	; 63
     262:	0f 92       	push	r0
     264:	11 24       	eor	r1, r1
     266:	0b b6       	in	r0, 0x3b	; 59
     268:	0f 92       	push	r0
     26a:	2f 93       	push	r18
     26c:	3f 93       	push	r19
     26e:	4f 93       	push	r20
     270:	5f 93       	push	r21
     272:	6f 93       	push	r22
     274:	7f 93       	push	r23
     276:	8f 93       	push	r24
     278:	9f 93       	push	r25
     27a:	af 93       	push	r26
     27c:	bf 93       	push	r27
     27e:	ef 93       	push	r30
     280:	ff 93       	push	r31
	uint8_t interrupt = MCP_read(MCP_CANINTF);
     282:	8c e2       	ldi	r24, 0x2C	; 44
     284:	33 d0       	rcall	.+102    	; 0x2ec <MCP_read>

	if (interrupt & MCP_RX0IF){
     286:	80 ff       	sbrs	r24, 0
     288:	08 c0       	rjmp	.+16     	; 0x29a <__vector_3+0x3e>
		interrupt_flag = RX0;
     28a:	81 e0       	ldi	r24, 0x01	; 1
     28c:	80 93 12 03 	sts	0x0312, r24
		// clear CANINTF.RX0IF
		MCP_bit_modify(MCP_CANINTF, 0x01, 0x00);
     290:	40 e0       	ldi	r20, 0x00	; 0
     292:	61 e0       	ldi	r22, 0x01	; 1
     294:	8c e2       	ldi	r24, 0x2C	; 44
     296:	6a d0       	rcall	.+212    	; 0x36c <MCP_bit_modify>
     298:	09 c0       	rjmp	.+18     	; 0x2ac <__vector_3+0x50>
	}
	else if (interrupt & MCP_RX1IF){
     29a:	81 ff       	sbrs	r24, 1
     29c:	07 c0       	rjmp	.+14     	; 0x2ac <__vector_3+0x50>
		interrupt_flag = RX1;
     29e:	82 e0       	ldi	r24, 0x02	; 2
     2a0:	80 93 12 03 	sts	0x0312, r24
		// clear CANINTF.RX1IF
		MCP_bit_modify(MCP_CANINTF, 0x02, 0x00);
     2a4:	40 e0       	ldi	r20, 0x00	; 0
     2a6:	62 e0       	ldi	r22, 0x02	; 2
     2a8:	8c e2       	ldi	r24, 0x2C	; 44
     2aa:	60 d0       	rcall	.+192    	; 0x36c <MCP_bit_modify>
	}
	
}
     2ac:	ff 91       	pop	r31
     2ae:	ef 91       	pop	r30
     2b0:	bf 91       	pop	r27
     2b2:	af 91       	pop	r26
     2b4:	9f 91       	pop	r25
     2b6:	8f 91       	pop	r24
     2b8:	7f 91       	pop	r23
     2ba:	6f 91       	pop	r22
     2bc:	5f 91       	pop	r21
     2be:	4f 91       	pop	r20
     2c0:	3f 91       	pop	r19
     2c2:	2f 91       	pop	r18
     2c4:	0f 90       	pop	r0
     2c6:	0b be       	out	0x3b, r0	; 59
     2c8:	0f 90       	pop	r0
     2ca:	0f be       	out	0x3f, r0	; 63
     2cc:	0f 90       	pop	r0
     2ce:	1f 90       	pop	r1
     2d0:	18 95       	reti

000002d2 <MCP_reset>:
	SPI_transmit_receive(MCP_READ_STATUS);
	uint8_t status = SPI_transmit_receive(0);
	SPI_set_ss(1);
	
	return status;
}
     2d2:	80 e0       	ldi	r24, 0x00	; 0
     2d4:	90 e0       	ldi	r25, 0x00	; 0
     2d6:	75 d0       	rcall	.+234    	; 0x3c2 <SPI_set_ss>
     2d8:	80 ec       	ldi	r24, 0xC0	; 192
     2da:	69 d0       	rcall	.+210    	; 0x3ae <SPI_transmit_receive>
     2dc:	82 e4       	ldi	r24, 0x42	; 66
     2de:	8a 95       	dec	r24
     2e0:	f1 f7       	brne	.-4      	; 0x2de <MCP_reset+0xc>
     2e2:	00 c0       	rjmp	.+0      	; 0x2e4 <MCP_reset+0x12>
     2e4:	81 e0       	ldi	r24, 0x01	; 1
     2e6:	90 e0       	ldi	r25, 0x00	; 0
     2e8:	6c c0       	rjmp	.+216    	; 0x3c2 <SPI_set_ss>
     2ea:	08 95       	ret

000002ec <MCP_read>:
     2ec:	cf 93       	push	r28
     2ee:	c8 2f       	mov	r28, r24
     2f0:	80 e0       	ldi	r24, 0x00	; 0
     2f2:	90 e0       	ldi	r25, 0x00	; 0
     2f4:	66 d0       	rcall	.+204    	; 0x3c2 <SPI_set_ss>
     2f6:	83 e0       	ldi	r24, 0x03	; 3
     2f8:	5a d0       	rcall	.+180    	; 0x3ae <SPI_transmit_receive>
     2fa:	8c 2f       	mov	r24, r28
     2fc:	58 d0       	rcall	.+176    	; 0x3ae <SPI_transmit_receive>
     2fe:	80 e0       	ldi	r24, 0x00	; 0
     300:	56 d0       	rcall	.+172    	; 0x3ae <SPI_transmit_receive>
     302:	c8 2f       	mov	r28, r24
     304:	81 e0       	ldi	r24, 0x01	; 1
     306:	90 e0       	ldi	r25, 0x00	; 0
     308:	5c d0       	rcall	.+184    	; 0x3c2 <SPI_set_ss>
     30a:	8c 2f       	mov	r24, r28
     30c:	cf 91       	pop	r28
     30e:	08 95       	ret

00000310 <MCP_init>:
     310:	cf 93       	push	r28
     312:	df df       	rcall	.-66     	; 0x2d2 <MCP_reset>
     314:	8e e0       	ldi	r24, 0x0E	; 14
     316:	ea df       	rcall	.-44     	; 0x2ec <MCP_read>
     318:	c8 2f       	mov	r28, r24
     31a:	1f 92       	push	r1
     31c:	8f 93       	push	r24
     31e:	29 e7       	ldi	r18, 0x79	; 121
     320:	32 e0       	ldi	r19, 0x02	; 2
     322:	3f 93       	push	r19
     324:	2f 93       	push	r18
     326:	96 d3       	rcall	.+1836   	; 0xa54 <printf>
     328:	c0 7e       	andi	r28, 0xE0	; 224
     32a:	0f 90       	pop	r0
     32c:	0f 90       	pop	r0
     32e:	0f 90       	pop	r0
     330:	0f 90       	pop	r0
     332:	c0 38       	cpi	r28, 0x80	; 128
     334:	29 f0       	breq	.+10     	; 0x340 <MCP_init+0x30>
     336:	85 e8       	ldi	r24, 0x85	; 133
     338:	92 e0       	ldi	r25, 0x02	; 2
     33a:	9d d3       	rcall	.+1850   	; 0xa76 <puts>
     33c:	81 e0       	ldi	r24, 0x01	; 1
     33e:	01 c0       	rjmp	.+2      	; 0x342 <MCP_init+0x32>
     340:	80 e0       	ldi	r24, 0x00	; 0
     342:	cf 91       	pop	r28
     344:	08 95       	ret

00000346 <MCP_write>:
     346:	cf 93       	push	r28
     348:	df 93       	push	r29
     34a:	d8 2f       	mov	r29, r24
     34c:	c6 2f       	mov	r28, r22
     34e:	80 e0       	ldi	r24, 0x00	; 0
     350:	90 e0       	ldi	r25, 0x00	; 0
     352:	37 d0       	rcall	.+110    	; 0x3c2 <SPI_set_ss>
     354:	82 e0       	ldi	r24, 0x02	; 2
     356:	2b d0       	rcall	.+86     	; 0x3ae <SPI_transmit_receive>
     358:	8d 2f       	mov	r24, r29
     35a:	29 d0       	rcall	.+82     	; 0x3ae <SPI_transmit_receive>
     35c:	8c 2f       	mov	r24, r28
     35e:	27 d0       	rcall	.+78     	; 0x3ae <SPI_transmit_receive>
     360:	81 e0       	ldi	r24, 0x01	; 1
     362:	90 e0       	ldi	r25, 0x00	; 0
     364:	2e d0       	rcall	.+92     	; 0x3c2 <SPI_set_ss>
     366:	df 91       	pop	r29
     368:	cf 91       	pop	r28
     36a:	08 95       	ret

0000036c <MCP_bit_modify>:

void MCP_bit_modify( uint8_t address, uint8_t mask, uint8_t data )
{
     36c:	1f 93       	push	r17
     36e:	cf 93       	push	r28
     370:	df 93       	push	r29
     372:	18 2f       	mov	r17, r24
     374:	d6 2f       	mov	r29, r22
     376:	c4 2f       	mov	r28, r20
	SPI_set_ss(0);
     378:	80 e0       	ldi	r24, 0x00	; 0
     37a:	90 e0       	ldi	r25, 0x00	; 0
     37c:	22 d0       	rcall	.+68     	; 0x3c2 <SPI_set_ss>
	SPI_transmit_receive(MCP_BITMOD);
     37e:	85 e0       	ldi	r24, 0x05	; 5
     380:	16 d0       	rcall	.+44     	; 0x3ae <SPI_transmit_receive>
	
	SPI_transmit_receive(address);
     382:	81 2f       	mov	r24, r17
     384:	14 d0       	rcall	.+40     	; 0x3ae <SPI_transmit_receive>
	SPI_transmit_receive(mask);
     386:	8d 2f       	mov	r24, r29
     388:	12 d0       	rcall	.+36     	; 0x3ae <SPI_transmit_receive>
	SPI_transmit_receive(data);
     38a:	8c 2f       	mov	r24, r28
     38c:	10 d0       	rcall	.+32     	; 0x3ae <SPI_transmit_receive>
	
	SPI_set_ss(1);
     38e:	81 e0       	ldi	r24, 0x01	; 1
     390:	90 e0       	ldi	r25, 0x00	; 0
     392:	17 d0       	rcall	.+46     	; 0x3c2 <SPI_set_ss>
     394:	df 91       	pop	r29
     396:	cf 91       	pop	r28
     398:	1f 91       	pop	r17
     39a:	08 95       	ret

0000039c <SPI_init>:
	// Set MOSI, SCK and SS output
	#if defined(__AVR_ATmega162__)
	DDRB |= (1 << DDB5)|(1 << DDB7)|(1 << DDB4);
	#endif
	#if defined(__AVR_ATmega2560__)
	DDRB |= (1 << DDB2)|(1 << DDB1)|(1 << DDB0) | (1 << DDB7);
     39c:	84 b1       	in	r24, 0x04	; 4
     39e:	87 68       	ori	r24, 0x87	; 135
     3a0:	84 b9       	out	0x04, r24	; 4
	#endif
	
	// Enable SPI, Master, set clock rate
	SPCR = (1 << MSTR)|(1 << SPR0);
     3a2:	81 e1       	ldi	r24, 0x11	; 17
     3a4:	8c bd       	out	0x2c, r24	; 44
	
	SPCR |= (1 << SPE);
     3a6:	8c b5       	in	r24, 0x2c	; 44
     3a8:	80 64       	ori	r24, 0x40	; 64
     3aa:	8c bd       	out	0x2c, r24	; 44
     3ac:	08 95       	ret

000003ae <SPI_transmit_receive>:
}

uint8_t SPI_transmit_receive(uint8_t data)
{
	// Start transmission (write to data register)
	SPDR = data;
     3ae:	8e bd       	out	0x2e, r24	; 46
	// Wait for transmission complete
	//printf("Hello from SPI transmit receive 1\n");
	while(!(SPSR & (1 << SPIF)));
     3b0:	0d b4       	in	r0, 0x2d	; 45
     3b2:	07 fe       	sbrs	r0, 7
     3b4:	fd cf       	rjmp	.-6      	; 0x3b0 <SPI_transmit_receive+0x2>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3b6:	82 e4       	ldi	r24, 0x42	; 66
     3b8:	8a 95       	dec	r24
     3ba:	f1 f7       	brne	.-4      	; 0x3b8 <SPI_transmit_receive+0xa>
     3bc:	00 c0       	rjmp	.+0      	; 0x3be <SPI_transmit_receive+0x10>
	//printf("Hello from SPI transmit receive 2\n");
	
	_delay_us(200);
	return SPDR;
     3be:	8e b5       	in	r24, 0x2e	; 46
	
}
     3c0:	08 95       	ret

000003c2 <SPI_set_ss>:
		clear_bit(PORTB, PB4);
	}
	#endif
	
	#if defined(__AVR_ATmega2560__)
	if (val == 1){
     3c2:	81 30       	cpi	r24, 0x01	; 1
     3c4:	91 05       	cpc	r25, r1
     3c6:	11 f4       	brne	.+4      	; 0x3cc <SPI_set_ss+0xa>
		set_bit(PORTB, PB7);
     3c8:	2f 9a       	sbi	0x05, 7	; 5
     3ca:	08 95       	ret
	}
	else if (val == 0){
     3cc:	89 2b       	or	r24, r25
     3ce:	09 f4       	brne	.+2      	; 0x3d2 <SPI_set_ss+0x10>
		clear_bit(PORTB, PB7);
     3d0:	2f 98       	cbi	0x05, 7	; 5
     3d2:	08 95       	ret

000003d4 <UART_Transmit>:

// transmit data
void UART_Transmit (unsigned char data)
{
	// Wait for empty transmit buffer
	while (!( UCSR0A & (1<<UDRE0))); 
     3d4:	e0 ec       	ldi	r30, 0xC0	; 192
     3d6:	f0 e0       	ldi	r31, 0x00	; 0
     3d8:	90 81       	ld	r25, Z
     3da:	95 ff       	sbrs	r25, 5
     3dc:	fd cf       	rjmp	.-6      	; 0x3d8 <UART_Transmit+0x4>
	
	// Put data into buffer, sends the data
	UDR0 = data;  
     3de:	80 93 c6 00 	sts	0x00C6, r24
     3e2:	08 95       	ret

000003e4 <UART_Recieve>:

// function to receive data
unsigned char UART_Recieve (void)
{
	//Wait for data to be received
	while(!(UCSR0A & (1<<RXC0)));  
     3e4:	e0 ec       	ldi	r30, 0xC0	; 192
     3e6:	f0 e0       	ldi	r31, 0x00	; 0
     3e8:	80 81       	ld	r24, Z
     3ea:	88 23       	and	r24, r24
     3ec:	ec f7       	brge	.-6      	; 0x3e8 <UART_Recieve+0x4>
	
	//Get and return received data from buffer
	return UDR0;  
     3ee:	80 91 c6 00 	lds	r24, 0x00C6
     3f2:	08 95       	ret

000003f4 <UART_Init>:

void UART_Init( unsigned int ubrr ){
	/* 
	Set baud rate
	 */
	UBRR0H |= (unsigned char)(ubrr>>8);
     3f4:	e5 ec       	ldi	r30, 0xC5	; 197
     3f6:	f0 e0       	ldi	r31, 0x00	; 0
     3f8:	20 81       	ld	r18, Z
     3fa:	92 2b       	or	r25, r18
     3fc:	90 83       	st	Z, r25
	UBRR0L |= (unsigned char)ubrr;
     3fe:	e4 ec       	ldi	r30, 0xC4	; 196
     400:	f0 e0       	ldi	r31, 0x00	; 0
     402:	90 81       	ld	r25, Z
     404:	89 2b       	or	r24, r25
     406:	80 83       	st	Z, r24
	/* 
	Enable receiver and transmitter
	 */
	UCSR0B |= (1<<RXEN0)|(1<<TXEN0);
     408:	e1 ec       	ldi	r30, 0xC1	; 193
     40a:	f0 e0       	ldi	r31, 0x00	; 0
     40c:	80 81       	ld	r24, Z
     40e:	88 61       	ori	r24, 0x18	; 24
     410:	80 83       	st	Z, r24
	 */
	#if defined(__AVR_ATmega162__)
	UCSR0C |= (1<<URSEL0)|(1<<USBS0)|(1<<UCSZ00)|(1<<UCSZ01);
	#endif
	#if defined(__AVR_ATmega2560__)
	UCSR0C |= (1<<USBS0)|(1<<UCSZ00)|(1<<UCSZ01);
     412:	e2 ec       	ldi	r30, 0xC2	; 194
     414:	f0 e0       	ldi	r31, 0x00	; 0
     416:	80 81       	ld	r24, Z
     418:	8e 60       	ori	r24, 0x0E	; 14
     41a:	80 83       	st	Z, r24
	#endif
	
	fdevopen(&UART_Transmit, &UART_Recieve);
     41c:	62 ef       	ldi	r22, 0xF2	; 242
     41e:	71 e0       	ldi	r23, 0x01	; 1
     420:	8a ee       	ldi	r24, 0xEA	; 234
     422:	91 e0       	ldi	r25, 0x01	; 1
     424:	cd c2       	rjmp	.+1434   	; 0x9c0 <fdevopen>
     426:	08 95       	ret

00000428 <main>:
#include <avr/io.h>
#include <util/delay.h>
//#include <stdio.h>
#include <avr/interrupt.h>

int main( void ){
     428:	cf 93       	push	r28
     42a:	df 93       	push	r29
     42c:	cd b7       	in	r28, 0x3d	; 61
     42e:	de b7       	in	r29, 0x3e	; 62
     430:	2b 97       	sbiw	r28, 0x0b	; 11
     432:	0f b6       	in	r0, 0x3f	; 63
     434:	f8 94       	cli
     436:	de bf       	out	0x3e, r29	; 62
     438:	0f be       	out	0x3f, r0	; 63
     43a:	cd bf       	out	0x3d, r28	; 61
	cli();
     43c:	f8 94       	cli
	// Initializations
	UART_Init( MYUBRR );
     43e:	87 e6       	ldi	r24, 0x67	; 103
     440:	90 e0       	ldi	r25, 0x00	; 0
     442:	d8 df       	rcall	.-80     	; 0x3f4 <UART_Init>
	//printf("UART\n");
	SPI_init();
     444:	ab df       	rcall	.-170    	; 0x39c <SPI_init>
	//printf("SPI\n");
	MCP_init();
     446:	64 df       	rcall	.-312    	; 0x310 <MCP_init>
	//printf("MCP\n");
	CAN_init();
     448:	6e de       	rcall	.-804    	; 0x126 <CAN_init>
	//printf("CAN\n");
	COUNTER_init();
     44a:	3c d0       	rcall	.+120    	; 0x4c4 <COUNTER_init>
	//printf("COUNTER\n");
	////while(1){printf("\n\n\nInit done\n");}
	printf("\n\n\nInit done\n");
     44c:	86 eb       	ldi	r24, 0xB6	; 182
     44e:	92 e0       	ldi	r25, 0x02	; 2
     450:	12 d3       	rcall	.+1572   	; 0xa76 <puts>
	sei();
     452:	78 94       	sei
		//printf("After interrupt\n");
		//printf("Message received\n");
		//printf("\n\nSent message: %s \t Received message: %s \n", send.data, receive.data);
		//printf("Sent id: %d \t Received id: %d \n", send.id, receive.id);
		//printf("Sent length: %d \t Received length: %d \n", send.length, receive.length);
		printf("\n\nReceived message (x, y): (%d, %d) \n",receive.data[0], receive.data[1]);
     454:	0f 2e       	mov	r0, r31
     456:	f3 ec       	ldi	r31, 0xC3	; 195
     458:	cf 2e       	mov	r12, r31
     45a:	f2 e0       	ldi	r31, 0x02	; 2
     45c:	df 2e       	mov	r13, r31
     45e:	f0 2d       	mov	r31, r0
		printf("Received id: %d \n", receive.id);
     460:	0f 2e       	mov	r0, r31
     462:	f9 ee       	ldi	r31, 0xE9	; 233
     464:	ef 2e       	mov	r14, r31
     466:	f2 e0       	ldi	r31, 0x02	; 2
     468:	ff 2e       	mov	r15, r31
     46a:	f0 2d       	mov	r31, r0
		printf("Received length: %d  \n", receive.length);
     46c:	0b ef       	ldi	r16, 0xFB	; 251
     46e:	12 e0       	ldi	r17, 0x02	; 2
		//printf("While loop\n");
		//CAN_msg_send(&send);
		//printf("Message sent\n");
		//_delay_ms(500);
		//printf("Before interrupt\n");
		CAN_handle_interrupt(&receive);
     470:	ce 01       	movw	r24, r28
     472:	01 96       	adiw	r24, 0x01	; 1
     474:	d3 de       	rcall	.-602    	; 0x21c <CAN_handle_interrupt>
		//printf("After interrupt\n");
		//printf("Message received\n");
		//printf("\n\nSent message: %s \t Received message: %s \n", send.data, receive.data);
		//printf("Sent id: %d \t Received id: %d \n", send.id, receive.id);
		//printf("Sent length: %d \t Received length: %d \n", send.length, receive.length);
		printf("\n\nReceived message (x, y): (%d, %d) \n",receive.data[0], receive.data[1]);
     476:	8d 81       	ldd	r24, Y+5	; 0x05
     478:	1f 92       	push	r1
     47a:	8f 93       	push	r24
     47c:	8c 81       	ldd	r24, Y+4	; 0x04
     47e:	1f 92       	push	r1
     480:	8f 93       	push	r24
     482:	df 92       	push	r13
     484:	cf 92       	push	r12
     486:	e6 d2       	rcall	.+1484   	; 0xa54 <printf>
		printf("Received id: %d \n", receive.id);
     488:	8a 81       	ldd	r24, Y+2	; 0x02
     48a:	8f 93       	push	r24
     48c:	89 81       	ldd	r24, Y+1	; 0x01
     48e:	8f 93       	push	r24
     490:	ff 92       	push	r15
     492:	ef 92       	push	r14
     494:	df d2       	rcall	.+1470   	; 0xa54 <printf>
		printf("Received length: %d  \n", receive.length);
     496:	8b 81       	ldd	r24, Y+3	; 0x03
     498:	1f 92       	push	r1
     49a:	8f 93       	push	r24
     49c:	1f 93       	push	r17
     49e:	0f 93       	push	r16
     4a0:	d9 d2       	rcall	.+1458   	; 0xa54 <printf>
		SERVO_set_position(receive.data[0]);
     4a2:	8c 81       	ldd	r24, Y+4	; 0x04
     4a4:	32 d0       	rcall	.+100    	; 0x50a <SERVO_set_position>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4a6:	2f ef       	ldi	r18, 0xFF	; 255
     4a8:	80 e7       	ldi	r24, 0x70	; 112
     4aa:	92 e0       	ldi	r25, 0x02	; 2
     4ac:	21 50       	subi	r18, 0x01	; 1
     4ae:	80 40       	sbci	r24, 0x00	; 0
     4b0:	90 40       	sbci	r25, 0x00	; 0
     4b2:	e1 f7       	brne	.-8      	; 0x4ac <main+0x84>
     4b4:	00 c0       	rjmp	.+0      	; 0x4b6 <main+0x8e>
     4b6:	00 00       	nop
     4b8:	0f b6       	in	r0, 0x3f	; 63
     4ba:	f8 94       	cli
     4bc:	de bf       	out	0x3e, r29	; 62
     4be:	0f be       	out	0x3f, r0	; 63
     4c0:	cd bf       	out	0x3d, r28	; 61
     4c2:	d6 cf       	rjmp	.-84     	; 0x470 <main+0x48>

000004c4 <COUNTER_init>:
#include <avr/io.h>

void COUNTER_init()
{
	// Clear OC1A on compare match, set OC1A at BOTTOM (non-inverting)
	TCCR1A |= (1 << COM1A1) | (0 << COM1A0);
     4c4:	a0 e8       	ldi	r26, 0x80	; 128
     4c6:	b0 e0       	ldi	r27, 0x00	; 0
     4c8:	8c 91       	ld	r24, X
     4ca:	80 68       	ori	r24, 0x80	; 128
     4cc:	8c 93       	st	X, r24
	
	// Set to mode 14 (Fast PWM)
	TCCR1B |= (1 << WGM13) | (1 << WGM12);
     4ce:	e1 e8       	ldi	r30, 0x81	; 129
     4d0:	f0 e0       	ldi	r31, 0x00	; 0
     4d2:	80 81       	ld	r24, Z
     4d4:	88 61       	ori	r24, 0x18	; 24
     4d6:	80 83       	st	Z, r24
	TCCR1A |= (1 << WGM11) | (0 << WGM10);
     4d8:	8c 91       	ld	r24, X
     4da:	82 60       	ori	r24, 0x02	; 2
     4dc:	8c 93       	st	X, r24
	
	// Set prescaler to 1/8
	TCCR1B |= (0 << CS12) | (1 << CS11) | (1 << CS10);
     4de:	80 81       	ld	r24, Z
     4e0:	83 60       	ori	r24, 0x03	; 3
     4e2:	80 83       	st	Z, r24
	
	// Set TOP
	// frequency = 50 Hz
	// trekke fra 1?
	ICR1 = F_CPU/(64*50);
     4e4:	88 e8       	ldi	r24, 0x88	; 136
     4e6:	93 e1       	ldi	r25, 0x13	; 19
     4e8:	90 93 87 00 	sts	0x0087, r25
     4ec:	80 93 86 00 	sts	0x0086, r24
	
	// Set OC1A to output
	DDRB |= (1 << DDB5);
     4f0:	25 9a       	sbi	0x04, 5	; 4
     4f2:	08 95       	ret

000004f4 <COUNTER_set_pulse_width>:
}

void COUNTER_set_pulse_width(float pulse_width_ms)
{
	//float pulse_width_s = pulse_width_ms/1000;
	OCR1A = F_CPU/64/1000 * pulse_width_ms;
     4f4:	20 e0       	ldi	r18, 0x00	; 0
     4f6:	30 e0       	ldi	r19, 0x00	; 0
     4f8:	4a e7       	ldi	r20, 0x7A	; 122
     4fa:	53 e4       	ldi	r21, 0x43	; 67
     4fc:	fe d1       	rcall	.+1020   	; 0x8fa <__mulsf3>
     4fe:	1b d1       	rcall	.+566    	; 0x736 <__fixunssfsi>
     500:	70 93 89 00 	sts	0x0089, r23
     504:	60 93 88 00 	sts	0x0088, r22
     508:	08 95       	ret

0000050a <SERVO_set_position>:
#include "counter.h"
#include <stdlib.h>


void SERVO_set_position(uint8_t pos)
{
     50a:	cf 92       	push	r12
     50c:	df 92       	push	r13
     50e:	ef 92       	push	r14
     510:	ff 92       	push	r15

	float pulse_width_ms;
	pulse_width_ms = (float)pos/255 * (MAX - MIN) + MIN; //Scaled between MIN and MAX
     512:	68 2f       	mov	r22, r24
     514:	70 e0       	ldi	r23, 0x00	; 0
     516:	80 e0       	ldi	r24, 0x00	; 0
     518:	90 e0       	ldi	r25, 0x00	; 0
     51a:	39 d1       	rcall	.+626    	; 0x78e <__floatunsisf>
     51c:	20 e0       	ldi	r18, 0x00	; 0
     51e:	30 e0       	ldi	r19, 0x00	; 0
     520:	4f e7       	ldi	r20, 0x7F	; 127
     522:	53 e4       	ldi	r21, 0x43	; 67
     524:	a0 d0       	rcall	.+320    	; 0x666 <__divsf3>
     526:	29 e9       	ldi	r18, 0x99	; 153
     528:	39 e9       	ldi	r19, 0x99	; 153
     52a:	49 e9       	ldi	r20, 0x99	; 153
     52c:	5f e3       	ldi	r21, 0x3F	; 63
     52e:	e5 d1       	rcall	.+970    	; 0x8fa <__mulsf3>
     530:	26 e6       	ldi	r18, 0x66	; 102
     532:	36 e6       	ldi	r19, 0x66	; 102
     534:	46 e6       	ldi	r20, 0x66	; 102
     536:	5f e3       	ldi	r21, 0x3F	; 63
     538:	2e d0       	rcall	.+92     	; 0x596 <__addsf3>
     53a:	6b 01       	movw	r12, r22
     53c:	7c 01       	movw	r14, r24
	
	if ( pulse_width_ms > MAX){ pulse_width_ms = MAX; }
     53e:	26 e6       	ldi	r18, 0x66	; 102
     540:	36 e6       	ldi	r19, 0x66	; 102
     542:	46 e0       	ldi	r20, 0x06	; 6
     544:	50 e4       	ldi	r21, 0x40	; 64
     546:	d5 d1       	rcall	.+938    	; 0x8f2 <__gesf2>
     548:	18 16       	cp	r1, r24
     54a:	54 f0       	brlt	.+20     	; 0x560 <SERVO_set_position+0x56>
	else if ( pulse_width_ms < MIN ){ pulse_width_ms = MIN; }
     54c:	26 e6       	ldi	r18, 0x66	; 102
     54e:	36 e6       	ldi	r19, 0x66	; 102
     550:	46 e6       	ldi	r20, 0x66	; 102
     552:	5f e3       	ldi	r21, 0x3F	; 63
     554:	c7 01       	movw	r24, r14
     556:	b6 01       	movw	r22, r12
     558:	82 d0       	rcall	.+260    	; 0x65e <__cmpsf2>
     55a:	88 23       	and	r24, r24
     55c:	5c f0       	brlt	.+22     	; 0x574 <SERVO_set_position+0x6a>
     55e:	12 c0       	rjmp	.+36     	; 0x584 <SERVO_set_position+0x7a>
{

	float pulse_width_ms;
	pulse_width_ms = (float)pos/255 * (MAX - MIN) + MIN; //Scaled between MIN and MAX
	
	if ( pulse_width_ms > MAX){ pulse_width_ms = MAX; }
     560:	0f 2e       	mov	r0, r31
     562:	f6 e6       	ldi	r31, 0x66	; 102
     564:	cf 2e       	mov	r12, r31
     566:	dc 2c       	mov	r13, r12
     568:	f6 e0       	ldi	r31, 0x06	; 6
     56a:	ef 2e       	mov	r14, r31
     56c:	f0 e4       	ldi	r31, 0x40	; 64
     56e:	ff 2e       	mov	r15, r31
     570:	f0 2d       	mov	r31, r0
     572:	08 c0       	rjmp	.+16     	; 0x584 <SERVO_set_position+0x7a>
	else if ( pulse_width_ms < MIN ){ pulse_width_ms = MIN; }
     574:	0f 2e       	mov	r0, r31
     576:	f6 e6       	ldi	r31, 0x66	; 102
     578:	cf 2e       	mov	r12, r31
     57a:	dc 2c       	mov	r13, r12
     57c:	ec 2c       	mov	r14, r12
     57e:	ff e3       	ldi	r31, 0x3F	; 63
     580:	ff 2e       	mov	r15, r31
     582:	f0 2d       	mov	r31, r0
	COUNTER_set_pulse_width(pulse_width_ms);
     584:	c7 01       	movw	r24, r14
     586:	b6 01       	movw	r22, r12
     588:	b5 df       	rcall	.-150    	; 0x4f4 <COUNTER_set_pulse_width>
}
     58a:	ff 90       	pop	r15
     58c:	ef 90       	pop	r14
     58e:	df 90       	pop	r13
     590:	cf 90       	pop	r12
     592:	08 95       	ret

00000594 <__subsf3>:
     594:	50 58       	subi	r21, 0x80	; 128

00000596 <__addsf3>:
     596:	bb 27       	eor	r27, r27
     598:	aa 27       	eor	r26, r26
     59a:	0e d0       	rcall	.+28     	; 0x5b8 <__addsf3x>
     59c:	70 c1       	rjmp	.+736    	; 0x87e <__fp_round>
     59e:	61 d1       	rcall	.+706    	; 0x862 <__fp_pscA>
     5a0:	30 f0       	brcs	.+12     	; 0x5ae <__addsf3+0x18>
     5a2:	66 d1       	rcall	.+716    	; 0x870 <__fp_pscB>
     5a4:	20 f0       	brcs	.+8      	; 0x5ae <__addsf3+0x18>
     5a6:	31 f4       	brne	.+12     	; 0x5b4 <__addsf3+0x1e>
     5a8:	9f 3f       	cpi	r25, 0xFF	; 255
     5aa:	11 f4       	brne	.+4      	; 0x5b0 <__addsf3+0x1a>
     5ac:	1e f4       	brtc	.+6      	; 0x5b4 <__addsf3+0x1e>
     5ae:	56 c1       	rjmp	.+684    	; 0x85c <__fp_nan>
     5b0:	0e f4       	brtc	.+2      	; 0x5b4 <__addsf3+0x1e>
     5b2:	e0 95       	com	r30
     5b4:	e7 fb       	bst	r30, 7
     5b6:	4c c1       	rjmp	.+664    	; 0x850 <__fp_inf>

000005b8 <__addsf3x>:
     5b8:	e9 2f       	mov	r30, r25
     5ba:	72 d1       	rcall	.+740    	; 0x8a0 <__fp_split3>
     5bc:	80 f3       	brcs	.-32     	; 0x59e <__addsf3+0x8>
     5be:	ba 17       	cp	r27, r26
     5c0:	62 07       	cpc	r22, r18
     5c2:	73 07       	cpc	r23, r19
     5c4:	84 07       	cpc	r24, r20
     5c6:	95 07       	cpc	r25, r21
     5c8:	18 f0       	brcs	.+6      	; 0x5d0 <__addsf3x+0x18>
     5ca:	71 f4       	brne	.+28     	; 0x5e8 <__addsf3x+0x30>
     5cc:	9e f5       	brtc	.+102    	; 0x634 <__addsf3x+0x7c>
     5ce:	8a c1       	rjmp	.+788    	; 0x8e4 <__fp_zero>
     5d0:	0e f4       	brtc	.+2      	; 0x5d4 <__addsf3x+0x1c>
     5d2:	e0 95       	com	r30
     5d4:	0b 2e       	mov	r0, r27
     5d6:	ba 2f       	mov	r27, r26
     5d8:	a0 2d       	mov	r26, r0
     5da:	0b 01       	movw	r0, r22
     5dc:	b9 01       	movw	r22, r18
     5de:	90 01       	movw	r18, r0
     5e0:	0c 01       	movw	r0, r24
     5e2:	ca 01       	movw	r24, r20
     5e4:	a0 01       	movw	r20, r0
     5e6:	11 24       	eor	r1, r1
     5e8:	ff 27       	eor	r31, r31
     5ea:	59 1b       	sub	r21, r25
     5ec:	99 f0       	breq	.+38     	; 0x614 <__addsf3x+0x5c>
     5ee:	59 3f       	cpi	r21, 0xF9	; 249
     5f0:	50 f4       	brcc	.+20     	; 0x606 <__addsf3x+0x4e>
     5f2:	50 3e       	cpi	r21, 0xE0	; 224
     5f4:	68 f1       	brcs	.+90     	; 0x650 <__addsf3x+0x98>
     5f6:	1a 16       	cp	r1, r26
     5f8:	f0 40       	sbci	r31, 0x00	; 0
     5fa:	a2 2f       	mov	r26, r18
     5fc:	23 2f       	mov	r18, r19
     5fe:	34 2f       	mov	r19, r20
     600:	44 27       	eor	r20, r20
     602:	58 5f       	subi	r21, 0xF8	; 248
     604:	f3 cf       	rjmp	.-26     	; 0x5ec <__addsf3x+0x34>
     606:	46 95       	lsr	r20
     608:	37 95       	ror	r19
     60a:	27 95       	ror	r18
     60c:	a7 95       	ror	r26
     60e:	f0 40       	sbci	r31, 0x00	; 0
     610:	53 95       	inc	r21
     612:	c9 f7       	brne	.-14     	; 0x606 <__addsf3x+0x4e>
     614:	7e f4       	brtc	.+30     	; 0x634 <__addsf3x+0x7c>
     616:	1f 16       	cp	r1, r31
     618:	ba 0b       	sbc	r27, r26
     61a:	62 0b       	sbc	r22, r18
     61c:	73 0b       	sbc	r23, r19
     61e:	84 0b       	sbc	r24, r20
     620:	ba f0       	brmi	.+46     	; 0x650 <__addsf3x+0x98>
     622:	91 50       	subi	r25, 0x01	; 1
     624:	a1 f0       	breq	.+40     	; 0x64e <__addsf3x+0x96>
     626:	ff 0f       	add	r31, r31
     628:	bb 1f       	adc	r27, r27
     62a:	66 1f       	adc	r22, r22
     62c:	77 1f       	adc	r23, r23
     62e:	88 1f       	adc	r24, r24
     630:	c2 f7       	brpl	.-16     	; 0x622 <__addsf3x+0x6a>
     632:	0e c0       	rjmp	.+28     	; 0x650 <__addsf3x+0x98>
     634:	ba 0f       	add	r27, r26
     636:	62 1f       	adc	r22, r18
     638:	73 1f       	adc	r23, r19
     63a:	84 1f       	adc	r24, r20
     63c:	48 f4       	brcc	.+18     	; 0x650 <__addsf3x+0x98>
     63e:	87 95       	ror	r24
     640:	77 95       	ror	r23
     642:	67 95       	ror	r22
     644:	b7 95       	ror	r27
     646:	f7 95       	ror	r31
     648:	9e 3f       	cpi	r25, 0xFE	; 254
     64a:	08 f0       	brcs	.+2      	; 0x64e <__addsf3x+0x96>
     64c:	b3 cf       	rjmp	.-154    	; 0x5b4 <__addsf3+0x1e>
     64e:	93 95       	inc	r25
     650:	88 0f       	add	r24, r24
     652:	08 f0       	brcs	.+2      	; 0x656 <__addsf3x+0x9e>
     654:	99 27       	eor	r25, r25
     656:	ee 0f       	add	r30, r30
     658:	97 95       	ror	r25
     65a:	87 95       	ror	r24
     65c:	08 95       	ret

0000065e <__cmpsf2>:
     65e:	d4 d0       	rcall	.+424    	; 0x808 <__fp_cmp>
     660:	08 f4       	brcc	.+2      	; 0x664 <__cmpsf2+0x6>
     662:	81 e0       	ldi	r24, 0x01	; 1
     664:	08 95       	ret

00000666 <__divsf3>:
     666:	0c d0       	rcall	.+24     	; 0x680 <__divsf3x>
     668:	0a c1       	rjmp	.+532    	; 0x87e <__fp_round>
     66a:	02 d1       	rcall	.+516    	; 0x870 <__fp_pscB>
     66c:	40 f0       	brcs	.+16     	; 0x67e <__divsf3+0x18>
     66e:	f9 d0       	rcall	.+498    	; 0x862 <__fp_pscA>
     670:	30 f0       	brcs	.+12     	; 0x67e <__divsf3+0x18>
     672:	21 f4       	brne	.+8      	; 0x67c <__divsf3+0x16>
     674:	5f 3f       	cpi	r21, 0xFF	; 255
     676:	19 f0       	breq	.+6      	; 0x67e <__divsf3+0x18>
     678:	eb c0       	rjmp	.+470    	; 0x850 <__fp_inf>
     67a:	51 11       	cpse	r21, r1
     67c:	34 c1       	rjmp	.+616    	; 0x8e6 <__fp_szero>
     67e:	ee c0       	rjmp	.+476    	; 0x85c <__fp_nan>

00000680 <__divsf3x>:
     680:	0f d1       	rcall	.+542    	; 0x8a0 <__fp_split3>
     682:	98 f3       	brcs	.-26     	; 0x66a <__divsf3+0x4>

00000684 <__divsf3_pse>:
     684:	99 23       	and	r25, r25
     686:	c9 f3       	breq	.-14     	; 0x67a <__divsf3+0x14>
     688:	55 23       	and	r21, r21
     68a:	b1 f3       	breq	.-20     	; 0x678 <__divsf3+0x12>
     68c:	95 1b       	sub	r25, r21
     68e:	55 0b       	sbc	r21, r21
     690:	bb 27       	eor	r27, r27
     692:	aa 27       	eor	r26, r26
     694:	62 17       	cp	r22, r18
     696:	73 07       	cpc	r23, r19
     698:	84 07       	cpc	r24, r20
     69a:	38 f0       	brcs	.+14     	; 0x6aa <__divsf3_pse+0x26>
     69c:	9f 5f       	subi	r25, 0xFF	; 255
     69e:	5f 4f       	sbci	r21, 0xFF	; 255
     6a0:	22 0f       	add	r18, r18
     6a2:	33 1f       	adc	r19, r19
     6a4:	44 1f       	adc	r20, r20
     6a6:	aa 1f       	adc	r26, r26
     6a8:	a9 f3       	breq	.-22     	; 0x694 <__divsf3_pse+0x10>
     6aa:	33 d0       	rcall	.+102    	; 0x712 <__divsf3_pse+0x8e>
     6ac:	0e 2e       	mov	r0, r30
     6ae:	3a f0       	brmi	.+14     	; 0x6be <__divsf3_pse+0x3a>
     6b0:	e0 e8       	ldi	r30, 0x80	; 128
     6b2:	30 d0       	rcall	.+96     	; 0x714 <__divsf3_pse+0x90>
     6b4:	91 50       	subi	r25, 0x01	; 1
     6b6:	50 40       	sbci	r21, 0x00	; 0
     6b8:	e6 95       	lsr	r30
     6ba:	00 1c       	adc	r0, r0
     6bc:	ca f7       	brpl	.-14     	; 0x6b0 <__divsf3_pse+0x2c>
     6be:	29 d0       	rcall	.+82     	; 0x712 <__divsf3_pse+0x8e>
     6c0:	fe 2f       	mov	r31, r30
     6c2:	27 d0       	rcall	.+78     	; 0x712 <__divsf3_pse+0x8e>
     6c4:	66 0f       	add	r22, r22
     6c6:	77 1f       	adc	r23, r23
     6c8:	88 1f       	adc	r24, r24
     6ca:	bb 1f       	adc	r27, r27
     6cc:	26 17       	cp	r18, r22
     6ce:	37 07       	cpc	r19, r23
     6d0:	48 07       	cpc	r20, r24
     6d2:	ab 07       	cpc	r26, r27
     6d4:	b0 e8       	ldi	r27, 0x80	; 128
     6d6:	09 f0       	breq	.+2      	; 0x6da <__divsf3_pse+0x56>
     6d8:	bb 0b       	sbc	r27, r27
     6da:	80 2d       	mov	r24, r0
     6dc:	bf 01       	movw	r22, r30
     6de:	ff 27       	eor	r31, r31
     6e0:	93 58       	subi	r25, 0x83	; 131
     6e2:	5f 4f       	sbci	r21, 0xFF	; 255
     6e4:	2a f0       	brmi	.+10     	; 0x6f0 <__divsf3_pse+0x6c>
     6e6:	9e 3f       	cpi	r25, 0xFE	; 254
     6e8:	51 05       	cpc	r21, r1
     6ea:	68 f0       	brcs	.+26     	; 0x706 <__divsf3_pse+0x82>
     6ec:	b1 c0       	rjmp	.+354    	; 0x850 <__fp_inf>
     6ee:	fb c0       	rjmp	.+502    	; 0x8e6 <__fp_szero>
     6f0:	5f 3f       	cpi	r21, 0xFF	; 255
     6f2:	ec f3       	brlt	.-6      	; 0x6ee <__divsf3_pse+0x6a>
     6f4:	98 3e       	cpi	r25, 0xE8	; 232
     6f6:	dc f3       	brlt	.-10     	; 0x6ee <__divsf3_pse+0x6a>
     6f8:	86 95       	lsr	r24
     6fa:	77 95       	ror	r23
     6fc:	67 95       	ror	r22
     6fe:	b7 95       	ror	r27
     700:	f7 95       	ror	r31
     702:	9f 5f       	subi	r25, 0xFF	; 255
     704:	c9 f7       	brne	.-14     	; 0x6f8 <__divsf3_pse+0x74>
     706:	88 0f       	add	r24, r24
     708:	91 1d       	adc	r25, r1
     70a:	96 95       	lsr	r25
     70c:	87 95       	ror	r24
     70e:	97 f9       	bld	r25, 7
     710:	08 95       	ret
     712:	e1 e0       	ldi	r30, 0x01	; 1
     714:	66 0f       	add	r22, r22
     716:	77 1f       	adc	r23, r23
     718:	88 1f       	adc	r24, r24
     71a:	bb 1f       	adc	r27, r27
     71c:	62 17       	cp	r22, r18
     71e:	73 07       	cpc	r23, r19
     720:	84 07       	cpc	r24, r20
     722:	ba 07       	cpc	r27, r26
     724:	20 f0       	brcs	.+8      	; 0x72e <__divsf3_pse+0xaa>
     726:	62 1b       	sub	r22, r18
     728:	73 0b       	sbc	r23, r19
     72a:	84 0b       	sbc	r24, r20
     72c:	ba 0b       	sbc	r27, r26
     72e:	ee 1f       	adc	r30, r30
     730:	88 f7       	brcc	.-30     	; 0x714 <__divsf3_pse+0x90>
     732:	e0 95       	com	r30
     734:	08 95       	ret

00000736 <__fixunssfsi>:
     736:	bc d0       	rcall	.+376    	; 0x8b0 <__fp_splitA>
     738:	88 f0       	brcs	.+34     	; 0x75c <__fixunssfsi+0x26>
     73a:	9f 57       	subi	r25, 0x7F	; 127
     73c:	90 f0       	brcs	.+36     	; 0x762 <__fixunssfsi+0x2c>
     73e:	b9 2f       	mov	r27, r25
     740:	99 27       	eor	r25, r25
     742:	b7 51       	subi	r27, 0x17	; 23
     744:	a0 f0       	brcs	.+40     	; 0x76e <__fixunssfsi+0x38>
     746:	d1 f0       	breq	.+52     	; 0x77c <__fixunssfsi+0x46>
     748:	66 0f       	add	r22, r22
     74a:	77 1f       	adc	r23, r23
     74c:	88 1f       	adc	r24, r24
     74e:	99 1f       	adc	r25, r25
     750:	1a f0       	brmi	.+6      	; 0x758 <__fixunssfsi+0x22>
     752:	ba 95       	dec	r27
     754:	c9 f7       	brne	.-14     	; 0x748 <__fixunssfsi+0x12>
     756:	12 c0       	rjmp	.+36     	; 0x77c <__fixunssfsi+0x46>
     758:	b1 30       	cpi	r27, 0x01	; 1
     75a:	81 f0       	breq	.+32     	; 0x77c <__fixunssfsi+0x46>
     75c:	c3 d0       	rcall	.+390    	; 0x8e4 <__fp_zero>
     75e:	b1 e0       	ldi	r27, 0x01	; 1
     760:	08 95       	ret
     762:	c0 c0       	rjmp	.+384    	; 0x8e4 <__fp_zero>
     764:	67 2f       	mov	r22, r23
     766:	78 2f       	mov	r23, r24
     768:	88 27       	eor	r24, r24
     76a:	b8 5f       	subi	r27, 0xF8	; 248
     76c:	39 f0       	breq	.+14     	; 0x77c <__fixunssfsi+0x46>
     76e:	b9 3f       	cpi	r27, 0xF9	; 249
     770:	cc f3       	brlt	.-14     	; 0x764 <__fixunssfsi+0x2e>
     772:	86 95       	lsr	r24
     774:	77 95       	ror	r23
     776:	67 95       	ror	r22
     778:	b3 95       	inc	r27
     77a:	d9 f7       	brne	.-10     	; 0x772 <__fixunssfsi+0x3c>
     77c:	3e f4       	brtc	.+14     	; 0x78c <__fixunssfsi+0x56>
     77e:	90 95       	com	r25
     780:	80 95       	com	r24
     782:	70 95       	com	r23
     784:	61 95       	neg	r22
     786:	7f 4f       	sbci	r23, 0xFF	; 255
     788:	8f 4f       	sbci	r24, 0xFF	; 255
     78a:	9f 4f       	sbci	r25, 0xFF	; 255
     78c:	08 95       	ret

0000078e <__floatunsisf>:
     78e:	e8 94       	clt
     790:	09 c0       	rjmp	.+18     	; 0x7a4 <__floatsisf+0x12>

00000792 <__floatsisf>:
     792:	97 fb       	bst	r25, 7
     794:	3e f4       	brtc	.+14     	; 0x7a4 <__floatsisf+0x12>
     796:	90 95       	com	r25
     798:	80 95       	com	r24
     79a:	70 95       	com	r23
     79c:	61 95       	neg	r22
     79e:	7f 4f       	sbci	r23, 0xFF	; 255
     7a0:	8f 4f       	sbci	r24, 0xFF	; 255
     7a2:	9f 4f       	sbci	r25, 0xFF	; 255
     7a4:	99 23       	and	r25, r25
     7a6:	a9 f0       	breq	.+42     	; 0x7d2 <__floatsisf+0x40>
     7a8:	f9 2f       	mov	r31, r25
     7aa:	96 e9       	ldi	r25, 0x96	; 150
     7ac:	bb 27       	eor	r27, r27
     7ae:	93 95       	inc	r25
     7b0:	f6 95       	lsr	r31
     7b2:	87 95       	ror	r24
     7b4:	77 95       	ror	r23
     7b6:	67 95       	ror	r22
     7b8:	b7 95       	ror	r27
     7ba:	f1 11       	cpse	r31, r1
     7bc:	f8 cf       	rjmp	.-16     	; 0x7ae <__floatsisf+0x1c>
     7be:	fa f4       	brpl	.+62     	; 0x7fe <__floatsisf+0x6c>
     7c0:	bb 0f       	add	r27, r27
     7c2:	11 f4       	brne	.+4      	; 0x7c8 <__floatsisf+0x36>
     7c4:	60 ff       	sbrs	r22, 0
     7c6:	1b c0       	rjmp	.+54     	; 0x7fe <__floatsisf+0x6c>
     7c8:	6f 5f       	subi	r22, 0xFF	; 255
     7ca:	7f 4f       	sbci	r23, 0xFF	; 255
     7cc:	8f 4f       	sbci	r24, 0xFF	; 255
     7ce:	9f 4f       	sbci	r25, 0xFF	; 255
     7d0:	16 c0       	rjmp	.+44     	; 0x7fe <__floatsisf+0x6c>
     7d2:	88 23       	and	r24, r24
     7d4:	11 f0       	breq	.+4      	; 0x7da <__floatsisf+0x48>
     7d6:	96 e9       	ldi	r25, 0x96	; 150
     7d8:	11 c0       	rjmp	.+34     	; 0x7fc <__floatsisf+0x6a>
     7da:	77 23       	and	r23, r23
     7dc:	21 f0       	breq	.+8      	; 0x7e6 <__floatsisf+0x54>
     7de:	9e e8       	ldi	r25, 0x8E	; 142
     7e0:	87 2f       	mov	r24, r23
     7e2:	76 2f       	mov	r23, r22
     7e4:	05 c0       	rjmp	.+10     	; 0x7f0 <__floatsisf+0x5e>
     7e6:	66 23       	and	r22, r22
     7e8:	71 f0       	breq	.+28     	; 0x806 <__floatsisf+0x74>
     7ea:	96 e8       	ldi	r25, 0x86	; 134
     7ec:	86 2f       	mov	r24, r22
     7ee:	70 e0       	ldi	r23, 0x00	; 0
     7f0:	60 e0       	ldi	r22, 0x00	; 0
     7f2:	2a f0       	brmi	.+10     	; 0x7fe <__floatsisf+0x6c>
     7f4:	9a 95       	dec	r25
     7f6:	66 0f       	add	r22, r22
     7f8:	77 1f       	adc	r23, r23
     7fa:	88 1f       	adc	r24, r24
     7fc:	da f7       	brpl	.-10     	; 0x7f4 <__floatsisf+0x62>
     7fe:	88 0f       	add	r24, r24
     800:	96 95       	lsr	r25
     802:	87 95       	ror	r24
     804:	97 f9       	bld	r25, 7
     806:	08 95       	ret

00000808 <__fp_cmp>:
     808:	99 0f       	add	r25, r25
     80a:	00 08       	sbc	r0, r0
     80c:	55 0f       	add	r21, r21
     80e:	aa 0b       	sbc	r26, r26
     810:	e0 e8       	ldi	r30, 0x80	; 128
     812:	fe ef       	ldi	r31, 0xFE	; 254
     814:	16 16       	cp	r1, r22
     816:	17 06       	cpc	r1, r23
     818:	e8 07       	cpc	r30, r24
     81a:	f9 07       	cpc	r31, r25
     81c:	c0 f0       	brcs	.+48     	; 0x84e <__fp_cmp+0x46>
     81e:	12 16       	cp	r1, r18
     820:	13 06       	cpc	r1, r19
     822:	e4 07       	cpc	r30, r20
     824:	f5 07       	cpc	r31, r21
     826:	98 f0       	brcs	.+38     	; 0x84e <__fp_cmp+0x46>
     828:	62 1b       	sub	r22, r18
     82a:	73 0b       	sbc	r23, r19
     82c:	84 0b       	sbc	r24, r20
     82e:	95 0b       	sbc	r25, r21
     830:	39 f4       	brne	.+14     	; 0x840 <__fp_cmp+0x38>
     832:	0a 26       	eor	r0, r26
     834:	61 f0       	breq	.+24     	; 0x84e <__fp_cmp+0x46>
     836:	23 2b       	or	r18, r19
     838:	24 2b       	or	r18, r20
     83a:	25 2b       	or	r18, r21
     83c:	21 f4       	brne	.+8      	; 0x846 <__fp_cmp+0x3e>
     83e:	08 95       	ret
     840:	0a 26       	eor	r0, r26
     842:	09 f4       	brne	.+2      	; 0x846 <__fp_cmp+0x3e>
     844:	a1 40       	sbci	r26, 0x01	; 1
     846:	a6 95       	lsr	r26
     848:	8f ef       	ldi	r24, 0xFF	; 255
     84a:	81 1d       	adc	r24, r1
     84c:	81 1d       	adc	r24, r1
     84e:	08 95       	ret

00000850 <__fp_inf>:
     850:	97 f9       	bld	r25, 7
     852:	9f 67       	ori	r25, 0x7F	; 127
     854:	80 e8       	ldi	r24, 0x80	; 128
     856:	70 e0       	ldi	r23, 0x00	; 0
     858:	60 e0       	ldi	r22, 0x00	; 0
     85a:	08 95       	ret

0000085c <__fp_nan>:
     85c:	9f ef       	ldi	r25, 0xFF	; 255
     85e:	80 ec       	ldi	r24, 0xC0	; 192
     860:	08 95       	ret

00000862 <__fp_pscA>:
     862:	00 24       	eor	r0, r0
     864:	0a 94       	dec	r0
     866:	16 16       	cp	r1, r22
     868:	17 06       	cpc	r1, r23
     86a:	18 06       	cpc	r1, r24
     86c:	09 06       	cpc	r0, r25
     86e:	08 95       	ret

00000870 <__fp_pscB>:
     870:	00 24       	eor	r0, r0
     872:	0a 94       	dec	r0
     874:	12 16       	cp	r1, r18
     876:	13 06       	cpc	r1, r19
     878:	14 06       	cpc	r1, r20
     87a:	05 06       	cpc	r0, r21
     87c:	08 95       	ret

0000087e <__fp_round>:
     87e:	09 2e       	mov	r0, r25
     880:	03 94       	inc	r0
     882:	00 0c       	add	r0, r0
     884:	11 f4       	brne	.+4      	; 0x88a <__fp_round+0xc>
     886:	88 23       	and	r24, r24
     888:	52 f0       	brmi	.+20     	; 0x89e <__fp_round+0x20>
     88a:	bb 0f       	add	r27, r27
     88c:	40 f4       	brcc	.+16     	; 0x89e <__fp_round+0x20>
     88e:	bf 2b       	or	r27, r31
     890:	11 f4       	brne	.+4      	; 0x896 <__fp_round+0x18>
     892:	60 ff       	sbrs	r22, 0
     894:	04 c0       	rjmp	.+8      	; 0x89e <__fp_round+0x20>
     896:	6f 5f       	subi	r22, 0xFF	; 255
     898:	7f 4f       	sbci	r23, 0xFF	; 255
     89a:	8f 4f       	sbci	r24, 0xFF	; 255
     89c:	9f 4f       	sbci	r25, 0xFF	; 255
     89e:	08 95       	ret

000008a0 <__fp_split3>:
     8a0:	57 fd       	sbrc	r21, 7
     8a2:	90 58       	subi	r25, 0x80	; 128
     8a4:	44 0f       	add	r20, r20
     8a6:	55 1f       	adc	r21, r21
     8a8:	59 f0       	breq	.+22     	; 0x8c0 <__fp_splitA+0x10>
     8aa:	5f 3f       	cpi	r21, 0xFF	; 255
     8ac:	71 f0       	breq	.+28     	; 0x8ca <__fp_splitA+0x1a>
     8ae:	47 95       	ror	r20

000008b0 <__fp_splitA>:
     8b0:	88 0f       	add	r24, r24
     8b2:	97 fb       	bst	r25, 7
     8b4:	99 1f       	adc	r25, r25
     8b6:	61 f0       	breq	.+24     	; 0x8d0 <__fp_splitA+0x20>
     8b8:	9f 3f       	cpi	r25, 0xFF	; 255
     8ba:	79 f0       	breq	.+30     	; 0x8da <__fp_splitA+0x2a>
     8bc:	87 95       	ror	r24
     8be:	08 95       	ret
     8c0:	12 16       	cp	r1, r18
     8c2:	13 06       	cpc	r1, r19
     8c4:	14 06       	cpc	r1, r20
     8c6:	55 1f       	adc	r21, r21
     8c8:	f2 cf       	rjmp	.-28     	; 0x8ae <__fp_split3+0xe>
     8ca:	46 95       	lsr	r20
     8cc:	f1 df       	rcall	.-30     	; 0x8b0 <__fp_splitA>
     8ce:	08 c0       	rjmp	.+16     	; 0x8e0 <__fp_splitA+0x30>
     8d0:	16 16       	cp	r1, r22
     8d2:	17 06       	cpc	r1, r23
     8d4:	18 06       	cpc	r1, r24
     8d6:	99 1f       	adc	r25, r25
     8d8:	f1 cf       	rjmp	.-30     	; 0x8bc <__fp_splitA+0xc>
     8da:	86 95       	lsr	r24
     8dc:	71 05       	cpc	r23, r1
     8de:	61 05       	cpc	r22, r1
     8e0:	08 94       	sec
     8e2:	08 95       	ret

000008e4 <__fp_zero>:
     8e4:	e8 94       	clt

000008e6 <__fp_szero>:
     8e6:	bb 27       	eor	r27, r27
     8e8:	66 27       	eor	r22, r22
     8ea:	77 27       	eor	r23, r23
     8ec:	cb 01       	movw	r24, r22
     8ee:	97 f9       	bld	r25, 7
     8f0:	08 95       	ret

000008f2 <__gesf2>:
     8f2:	8a df       	rcall	.-236    	; 0x808 <__fp_cmp>
     8f4:	08 f4       	brcc	.+2      	; 0x8f8 <__gesf2+0x6>
     8f6:	8f ef       	ldi	r24, 0xFF	; 255
     8f8:	08 95       	ret

000008fa <__mulsf3>:
     8fa:	0b d0       	rcall	.+22     	; 0x912 <__mulsf3x>
     8fc:	c0 cf       	rjmp	.-128    	; 0x87e <__fp_round>
     8fe:	b1 df       	rcall	.-158    	; 0x862 <__fp_pscA>
     900:	28 f0       	brcs	.+10     	; 0x90c <__mulsf3+0x12>
     902:	b6 df       	rcall	.-148    	; 0x870 <__fp_pscB>
     904:	18 f0       	brcs	.+6      	; 0x90c <__mulsf3+0x12>
     906:	95 23       	and	r25, r21
     908:	09 f0       	breq	.+2      	; 0x90c <__mulsf3+0x12>
     90a:	a2 cf       	rjmp	.-188    	; 0x850 <__fp_inf>
     90c:	a7 cf       	rjmp	.-178    	; 0x85c <__fp_nan>
     90e:	11 24       	eor	r1, r1
     910:	ea cf       	rjmp	.-44     	; 0x8e6 <__fp_szero>

00000912 <__mulsf3x>:
     912:	c6 df       	rcall	.-116    	; 0x8a0 <__fp_split3>
     914:	a0 f3       	brcs	.-24     	; 0x8fe <__mulsf3+0x4>

00000916 <__mulsf3_pse>:
     916:	95 9f       	mul	r25, r21
     918:	d1 f3       	breq	.-12     	; 0x90e <__mulsf3+0x14>
     91a:	95 0f       	add	r25, r21
     91c:	50 e0       	ldi	r21, 0x00	; 0
     91e:	55 1f       	adc	r21, r21
     920:	62 9f       	mul	r22, r18
     922:	f0 01       	movw	r30, r0
     924:	72 9f       	mul	r23, r18
     926:	bb 27       	eor	r27, r27
     928:	f0 0d       	add	r31, r0
     92a:	b1 1d       	adc	r27, r1
     92c:	63 9f       	mul	r22, r19
     92e:	aa 27       	eor	r26, r26
     930:	f0 0d       	add	r31, r0
     932:	b1 1d       	adc	r27, r1
     934:	aa 1f       	adc	r26, r26
     936:	64 9f       	mul	r22, r20
     938:	66 27       	eor	r22, r22
     93a:	b0 0d       	add	r27, r0
     93c:	a1 1d       	adc	r26, r1
     93e:	66 1f       	adc	r22, r22
     940:	82 9f       	mul	r24, r18
     942:	22 27       	eor	r18, r18
     944:	b0 0d       	add	r27, r0
     946:	a1 1d       	adc	r26, r1
     948:	62 1f       	adc	r22, r18
     94a:	73 9f       	mul	r23, r19
     94c:	b0 0d       	add	r27, r0
     94e:	a1 1d       	adc	r26, r1
     950:	62 1f       	adc	r22, r18
     952:	83 9f       	mul	r24, r19
     954:	a0 0d       	add	r26, r0
     956:	61 1d       	adc	r22, r1
     958:	22 1f       	adc	r18, r18
     95a:	74 9f       	mul	r23, r20
     95c:	33 27       	eor	r19, r19
     95e:	a0 0d       	add	r26, r0
     960:	61 1d       	adc	r22, r1
     962:	23 1f       	adc	r18, r19
     964:	84 9f       	mul	r24, r20
     966:	60 0d       	add	r22, r0
     968:	21 1d       	adc	r18, r1
     96a:	82 2f       	mov	r24, r18
     96c:	76 2f       	mov	r23, r22
     96e:	6a 2f       	mov	r22, r26
     970:	11 24       	eor	r1, r1
     972:	9f 57       	subi	r25, 0x7F	; 127
     974:	50 40       	sbci	r21, 0x00	; 0
     976:	8a f0       	brmi	.+34     	; 0x99a <__mulsf3_pse+0x84>
     978:	e1 f0       	breq	.+56     	; 0x9b2 <__mulsf3_pse+0x9c>
     97a:	88 23       	and	r24, r24
     97c:	4a f0       	brmi	.+18     	; 0x990 <__mulsf3_pse+0x7a>
     97e:	ee 0f       	add	r30, r30
     980:	ff 1f       	adc	r31, r31
     982:	bb 1f       	adc	r27, r27
     984:	66 1f       	adc	r22, r22
     986:	77 1f       	adc	r23, r23
     988:	88 1f       	adc	r24, r24
     98a:	91 50       	subi	r25, 0x01	; 1
     98c:	50 40       	sbci	r21, 0x00	; 0
     98e:	a9 f7       	brne	.-22     	; 0x97a <__mulsf3_pse+0x64>
     990:	9e 3f       	cpi	r25, 0xFE	; 254
     992:	51 05       	cpc	r21, r1
     994:	70 f0       	brcs	.+28     	; 0x9b2 <__mulsf3_pse+0x9c>
     996:	5c cf       	rjmp	.-328    	; 0x850 <__fp_inf>
     998:	a6 cf       	rjmp	.-180    	; 0x8e6 <__fp_szero>
     99a:	5f 3f       	cpi	r21, 0xFF	; 255
     99c:	ec f3       	brlt	.-6      	; 0x998 <__mulsf3_pse+0x82>
     99e:	98 3e       	cpi	r25, 0xE8	; 232
     9a0:	dc f3       	brlt	.-10     	; 0x998 <__mulsf3_pse+0x82>
     9a2:	86 95       	lsr	r24
     9a4:	77 95       	ror	r23
     9a6:	67 95       	ror	r22
     9a8:	b7 95       	ror	r27
     9aa:	f7 95       	ror	r31
     9ac:	e7 95       	ror	r30
     9ae:	9f 5f       	subi	r25, 0xFF	; 255
     9b0:	c1 f7       	brne	.-16     	; 0x9a2 <__mulsf3_pse+0x8c>
     9b2:	fe 2b       	or	r31, r30
     9b4:	88 0f       	add	r24, r24
     9b6:	91 1d       	adc	r25, r1
     9b8:	96 95       	lsr	r25
     9ba:	87 95       	ror	r24
     9bc:	97 f9       	bld	r25, 7
     9be:	08 95       	ret

000009c0 <fdevopen>:
     9c0:	0f 93       	push	r16
     9c2:	1f 93       	push	r17
     9c4:	cf 93       	push	r28
     9c6:	df 93       	push	r29
     9c8:	ec 01       	movw	r28, r24
     9ca:	8b 01       	movw	r16, r22
     9cc:	00 97       	sbiw	r24, 0x00	; 0
     9ce:	31 f4       	brne	.+12     	; 0x9dc <fdevopen+0x1c>
     9d0:	61 15       	cp	r22, r1
     9d2:	71 05       	cpc	r23, r1
     9d4:	19 f4       	brne	.+6      	; 0x9dc <fdevopen+0x1c>
     9d6:	80 e0       	ldi	r24, 0x00	; 0
     9d8:	90 e0       	ldi	r25, 0x00	; 0
     9da:	37 c0       	rjmp	.+110    	; 0xa4a <fdevopen+0x8a>
     9dc:	6e e0       	ldi	r22, 0x0E	; 14
     9de:	70 e0       	ldi	r23, 0x00	; 0
     9e0:	81 e0       	ldi	r24, 0x01	; 1
     9e2:	90 e0       	ldi	r25, 0x00	; 0
     9e4:	63 d2       	rcall	.+1222   	; 0xeac <calloc>
     9e6:	fc 01       	movw	r30, r24
     9e8:	00 97       	sbiw	r24, 0x00	; 0
     9ea:	a9 f3       	breq	.-22     	; 0x9d6 <fdevopen+0x16>
     9ec:	80 e8       	ldi	r24, 0x80	; 128
     9ee:	83 83       	std	Z+3, r24	; 0x03
     9f0:	01 15       	cp	r16, r1
     9f2:	11 05       	cpc	r17, r1
     9f4:	71 f0       	breq	.+28     	; 0xa12 <fdevopen+0x52>
     9f6:	13 87       	std	Z+11, r17	; 0x0b
     9f8:	02 87       	std	Z+10, r16	; 0x0a
     9fa:	81 e8       	ldi	r24, 0x81	; 129
     9fc:	83 83       	std	Z+3, r24	; 0x03
     9fe:	80 91 13 03 	lds	r24, 0x0313
     a02:	90 91 14 03 	lds	r25, 0x0314
     a06:	89 2b       	or	r24, r25
     a08:	21 f4       	brne	.+8      	; 0xa12 <fdevopen+0x52>
     a0a:	f0 93 14 03 	sts	0x0314, r31
     a0e:	e0 93 13 03 	sts	0x0313, r30
     a12:	20 97       	sbiw	r28, 0x00	; 0
     a14:	c9 f0       	breq	.+50     	; 0xa48 <fdevopen+0x88>
     a16:	d1 87       	std	Z+9, r29	; 0x09
     a18:	c0 87       	std	Z+8, r28	; 0x08
     a1a:	83 81       	ldd	r24, Z+3	; 0x03
     a1c:	82 60       	ori	r24, 0x02	; 2
     a1e:	83 83       	std	Z+3, r24	; 0x03
     a20:	80 91 15 03 	lds	r24, 0x0315
     a24:	90 91 16 03 	lds	r25, 0x0316
     a28:	89 2b       	or	r24, r25
     a2a:	71 f4       	brne	.+28     	; 0xa48 <fdevopen+0x88>
     a2c:	f0 93 16 03 	sts	0x0316, r31
     a30:	e0 93 15 03 	sts	0x0315, r30
     a34:	80 91 17 03 	lds	r24, 0x0317
     a38:	90 91 18 03 	lds	r25, 0x0318
     a3c:	89 2b       	or	r24, r25
     a3e:	21 f4       	brne	.+8      	; 0xa48 <fdevopen+0x88>
     a40:	f0 93 18 03 	sts	0x0318, r31
     a44:	e0 93 17 03 	sts	0x0317, r30
     a48:	cf 01       	movw	r24, r30
     a4a:	df 91       	pop	r29
     a4c:	cf 91       	pop	r28
     a4e:	1f 91       	pop	r17
     a50:	0f 91       	pop	r16
     a52:	08 95       	ret

00000a54 <printf>:
     a54:	cf 93       	push	r28
     a56:	df 93       	push	r29
     a58:	cd b7       	in	r28, 0x3d	; 61
     a5a:	de b7       	in	r29, 0x3e	; 62
     a5c:	fe 01       	movw	r30, r28
     a5e:	36 96       	adiw	r30, 0x06	; 6
     a60:	61 91       	ld	r22, Z+
     a62:	71 91       	ld	r23, Z+
     a64:	af 01       	movw	r20, r30
     a66:	80 91 15 03 	lds	r24, 0x0315
     a6a:	90 91 16 03 	lds	r25, 0x0316
     a6e:	30 d0       	rcall	.+96     	; 0xad0 <vfprintf>
     a70:	df 91       	pop	r29
     a72:	cf 91       	pop	r28
     a74:	08 95       	ret

00000a76 <puts>:
     a76:	0f 93       	push	r16
     a78:	1f 93       	push	r17
     a7a:	cf 93       	push	r28
     a7c:	df 93       	push	r29
     a7e:	e0 91 15 03 	lds	r30, 0x0315
     a82:	f0 91 16 03 	lds	r31, 0x0316
     a86:	23 81       	ldd	r18, Z+3	; 0x03
     a88:	21 ff       	sbrs	r18, 1
     a8a:	1b c0       	rjmp	.+54     	; 0xac2 <puts+0x4c>
     a8c:	ec 01       	movw	r28, r24
     a8e:	00 e0       	ldi	r16, 0x00	; 0
     a90:	10 e0       	ldi	r17, 0x00	; 0
     a92:	89 91       	ld	r24, Y+
     a94:	60 91 15 03 	lds	r22, 0x0315
     a98:	70 91 16 03 	lds	r23, 0x0316
     a9c:	db 01       	movw	r26, r22
     a9e:	18 96       	adiw	r26, 0x08	; 8
     aa0:	ed 91       	ld	r30, X+
     aa2:	fc 91       	ld	r31, X
     aa4:	19 97       	sbiw	r26, 0x09	; 9
     aa6:	88 23       	and	r24, r24
     aa8:	31 f0       	breq	.+12     	; 0xab6 <puts+0x40>
     aaa:	19 95       	eicall
     aac:	89 2b       	or	r24, r25
     aae:	89 f3       	breq	.-30     	; 0xa92 <puts+0x1c>
     ab0:	0f ef       	ldi	r16, 0xFF	; 255
     ab2:	1f ef       	ldi	r17, 0xFF	; 255
     ab4:	ee cf       	rjmp	.-36     	; 0xa92 <puts+0x1c>
     ab6:	8a e0       	ldi	r24, 0x0A	; 10
     ab8:	19 95       	eicall
     aba:	89 2b       	or	r24, r25
     abc:	11 f4       	brne	.+4      	; 0xac2 <puts+0x4c>
     abe:	c8 01       	movw	r24, r16
     ac0:	02 c0       	rjmp	.+4      	; 0xac6 <puts+0x50>
     ac2:	8f ef       	ldi	r24, 0xFF	; 255
     ac4:	9f ef       	ldi	r25, 0xFF	; 255
     ac6:	df 91       	pop	r29
     ac8:	cf 91       	pop	r28
     aca:	1f 91       	pop	r17
     acc:	0f 91       	pop	r16
     ace:	08 95       	ret

00000ad0 <vfprintf>:
     ad0:	2f 92       	push	r2
     ad2:	3f 92       	push	r3
     ad4:	4f 92       	push	r4
     ad6:	5f 92       	push	r5
     ad8:	6f 92       	push	r6
     ada:	7f 92       	push	r7
     adc:	8f 92       	push	r8
     ade:	9f 92       	push	r9
     ae0:	af 92       	push	r10
     ae2:	bf 92       	push	r11
     ae4:	cf 92       	push	r12
     ae6:	df 92       	push	r13
     ae8:	ef 92       	push	r14
     aea:	ff 92       	push	r15
     aec:	0f 93       	push	r16
     aee:	1f 93       	push	r17
     af0:	cf 93       	push	r28
     af2:	df 93       	push	r29
     af4:	cd b7       	in	r28, 0x3d	; 61
     af6:	de b7       	in	r29, 0x3e	; 62
     af8:	2c 97       	sbiw	r28, 0x0c	; 12
     afa:	0f b6       	in	r0, 0x3f	; 63
     afc:	f8 94       	cli
     afe:	de bf       	out	0x3e, r29	; 62
     b00:	0f be       	out	0x3f, r0	; 63
     b02:	cd bf       	out	0x3d, r28	; 61
     b04:	7c 01       	movw	r14, r24
     b06:	6b 01       	movw	r12, r22
     b08:	8a 01       	movw	r16, r20
     b0a:	fc 01       	movw	r30, r24
     b0c:	17 82       	std	Z+7, r1	; 0x07
     b0e:	16 82       	std	Z+6, r1	; 0x06
     b10:	83 81       	ldd	r24, Z+3	; 0x03
     b12:	81 ff       	sbrs	r24, 1
     b14:	b0 c1       	rjmp	.+864    	; 0xe76 <vfprintf+0x3a6>
     b16:	ce 01       	movw	r24, r28
     b18:	01 96       	adiw	r24, 0x01	; 1
     b1a:	4c 01       	movw	r8, r24
     b1c:	f7 01       	movw	r30, r14
     b1e:	93 81       	ldd	r25, Z+3	; 0x03
     b20:	f6 01       	movw	r30, r12
     b22:	93 fd       	sbrc	r25, 3
     b24:	85 91       	lpm	r24, Z+
     b26:	93 ff       	sbrs	r25, 3
     b28:	81 91       	ld	r24, Z+
     b2a:	6f 01       	movw	r12, r30
     b2c:	88 23       	and	r24, r24
     b2e:	09 f4       	brne	.+2      	; 0xb32 <vfprintf+0x62>
     b30:	9e c1       	rjmp	.+828    	; 0xe6e <vfprintf+0x39e>
     b32:	85 32       	cpi	r24, 0x25	; 37
     b34:	39 f4       	brne	.+14     	; 0xb44 <vfprintf+0x74>
     b36:	93 fd       	sbrc	r25, 3
     b38:	85 91       	lpm	r24, Z+
     b3a:	93 ff       	sbrs	r25, 3
     b3c:	81 91       	ld	r24, Z+
     b3e:	6f 01       	movw	r12, r30
     b40:	85 32       	cpi	r24, 0x25	; 37
     b42:	21 f4       	brne	.+8      	; 0xb4c <vfprintf+0x7c>
     b44:	b7 01       	movw	r22, r14
     b46:	90 e0       	ldi	r25, 0x00	; 0
     b48:	0f d3       	rcall	.+1566   	; 0x1168 <fputc>
     b4a:	e8 cf       	rjmp	.-48     	; 0xb1c <vfprintf+0x4c>
     b4c:	51 2c       	mov	r5, r1
     b4e:	31 2c       	mov	r3, r1
     b50:	20 e0       	ldi	r18, 0x00	; 0
     b52:	20 32       	cpi	r18, 0x20	; 32
     b54:	a0 f4       	brcc	.+40     	; 0xb7e <vfprintf+0xae>
     b56:	8b 32       	cpi	r24, 0x2B	; 43
     b58:	69 f0       	breq	.+26     	; 0xb74 <vfprintf+0xa4>
     b5a:	30 f4       	brcc	.+12     	; 0xb68 <vfprintf+0x98>
     b5c:	80 32       	cpi	r24, 0x20	; 32
     b5e:	59 f0       	breq	.+22     	; 0xb76 <vfprintf+0xa6>
     b60:	83 32       	cpi	r24, 0x23	; 35
     b62:	69 f4       	brne	.+26     	; 0xb7e <vfprintf+0xae>
     b64:	20 61       	ori	r18, 0x10	; 16
     b66:	2c c0       	rjmp	.+88     	; 0xbc0 <vfprintf+0xf0>
     b68:	8d 32       	cpi	r24, 0x2D	; 45
     b6a:	39 f0       	breq	.+14     	; 0xb7a <vfprintf+0xaa>
     b6c:	80 33       	cpi	r24, 0x30	; 48
     b6e:	39 f4       	brne	.+14     	; 0xb7e <vfprintf+0xae>
     b70:	21 60       	ori	r18, 0x01	; 1
     b72:	26 c0       	rjmp	.+76     	; 0xbc0 <vfprintf+0xf0>
     b74:	22 60       	ori	r18, 0x02	; 2
     b76:	24 60       	ori	r18, 0x04	; 4
     b78:	23 c0       	rjmp	.+70     	; 0xbc0 <vfprintf+0xf0>
     b7a:	28 60       	ori	r18, 0x08	; 8
     b7c:	21 c0       	rjmp	.+66     	; 0xbc0 <vfprintf+0xf0>
     b7e:	27 fd       	sbrc	r18, 7
     b80:	27 c0       	rjmp	.+78     	; 0xbd0 <vfprintf+0x100>
     b82:	30 ed       	ldi	r19, 0xD0	; 208
     b84:	38 0f       	add	r19, r24
     b86:	3a 30       	cpi	r19, 0x0A	; 10
     b88:	78 f4       	brcc	.+30     	; 0xba8 <vfprintf+0xd8>
     b8a:	26 ff       	sbrs	r18, 6
     b8c:	06 c0       	rjmp	.+12     	; 0xb9a <vfprintf+0xca>
     b8e:	fa e0       	ldi	r31, 0x0A	; 10
     b90:	5f 9e       	mul	r5, r31
     b92:	30 0d       	add	r19, r0
     b94:	11 24       	eor	r1, r1
     b96:	53 2e       	mov	r5, r19
     b98:	13 c0       	rjmp	.+38     	; 0xbc0 <vfprintf+0xf0>
     b9a:	8a e0       	ldi	r24, 0x0A	; 10
     b9c:	38 9e       	mul	r3, r24
     b9e:	30 0d       	add	r19, r0
     ba0:	11 24       	eor	r1, r1
     ba2:	33 2e       	mov	r3, r19
     ba4:	20 62       	ori	r18, 0x20	; 32
     ba6:	0c c0       	rjmp	.+24     	; 0xbc0 <vfprintf+0xf0>
     ba8:	8e 32       	cpi	r24, 0x2E	; 46
     baa:	21 f4       	brne	.+8      	; 0xbb4 <vfprintf+0xe4>
     bac:	26 fd       	sbrc	r18, 6
     bae:	5f c1       	rjmp	.+702    	; 0xe6e <vfprintf+0x39e>
     bb0:	20 64       	ori	r18, 0x40	; 64
     bb2:	06 c0       	rjmp	.+12     	; 0xbc0 <vfprintf+0xf0>
     bb4:	8c 36       	cpi	r24, 0x6C	; 108
     bb6:	11 f4       	brne	.+4      	; 0xbbc <vfprintf+0xec>
     bb8:	20 68       	ori	r18, 0x80	; 128
     bba:	02 c0       	rjmp	.+4      	; 0xbc0 <vfprintf+0xf0>
     bbc:	88 36       	cpi	r24, 0x68	; 104
     bbe:	41 f4       	brne	.+16     	; 0xbd0 <vfprintf+0x100>
     bc0:	f6 01       	movw	r30, r12
     bc2:	93 fd       	sbrc	r25, 3
     bc4:	85 91       	lpm	r24, Z+
     bc6:	93 ff       	sbrs	r25, 3
     bc8:	81 91       	ld	r24, Z+
     bca:	6f 01       	movw	r12, r30
     bcc:	81 11       	cpse	r24, r1
     bce:	c1 cf       	rjmp	.-126    	; 0xb52 <vfprintf+0x82>
     bd0:	98 2f       	mov	r25, r24
     bd2:	9f 7d       	andi	r25, 0xDF	; 223
     bd4:	95 54       	subi	r25, 0x45	; 69
     bd6:	93 30       	cpi	r25, 0x03	; 3
     bd8:	28 f4       	brcc	.+10     	; 0xbe4 <vfprintf+0x114>
     bda:	0c 5f       	subi	r16, 0xFC	; 252
     bdc:	1f 4f       	sbci	r17, 0xFF	; 255
     bde:	ff e3       	ldi	r31, 0x3F	; 63
     be0:	f9 83       	std	Y+1, r31	; 0x01
     be2:	0d c0       	rjmp	.+26     	; 0xbfe <vfprintf+0x12e>
     be4:	83 36       	cpi	r24, 0x63	; 99
     be6:	31 f0       	breq	.+12     	; 0xbf4 <vfprintf+0x124>
     be8:	83 37       	cpi	r24, 0x73	; 115
     bea:	71 f0       	breq	.+28     	; 0xc08 <vfprintf+0x138>
     bec:	83 35       	cpi	r24, 0x53	; 83
     bee:	09 f0       	breq	.+2      	; 0xbf2 <vfprintf+0x122>
     bf0:	57 c0       	rjmp	.+174    	; 0xca0 <vfprintf+0x1d0>
     bf2:	21 c0       	rjmp	.+66     	; 0xc36 <vfprintf+0x166>
     bf4:	f8 01       	movw	r30, r16
     bf6:	80 81       	ld	r24, Z
     bf8:	89 83       	std	Y+1, r24	; 0x01
     bfa:	0e 5f       	subi	r16, 0xFE	; 254
     bfc:	1f 4f       	sbci	r17, 0xFF	; 255
     bfe:	44 24       	eor	r4, r4
     c00:	43 94       	inc	r4
     c02:	51 2c       	mov	r5, r1
     c04:	54 01       	movw	r10, r8
     c06:	14 c0       	rjmp	.+40     	; 0xc30 <vfprintf+0x160>
     c08:	38 01       	movw	r6, r16
     c0a:	f2 e0       	ldi	r31, 0x02	; 2
     c0c:	6f 0e       	add	r6, r31
     c0e:	71 1c       	adc	r7, r1
     c10:	f8 01       	movw	r30, r16
     c12:	a0 80       	ld	r10, Z
     c14:	b1 80       	ldd	r11, Z+1	; 0x01
     c16:	26 ff       	sbrs	r18, 6
     c18:	03 c0       	rjmp	.+6      	; 0xc20 <vfprintf+0x150>
     c1a:	65 2d       	mov	r22, r5
     c1c:	70 e0       	ldi	r23, 0x00	; 0
     c1e:	02 c0       	rjmp	.+4      	; 0xc24 <vfprintf+0x154>
     c20:	6f ef       	ldi	r22, 0xFF	; 255
     c22:	7f ef       	ldi	r23, 0xFF	; 255
     c24:	c5 01       	movw	r24, r10
     c26:	2c 87       	std	Y+12, r18	; 0x0c
     c28:	94 d2       	rcall	.+1320   	; 0x1152 <strnlen>
     c2a:	2c 01       	movw	r4, r24
     c2c:	83 01       	movw	r16, r6
     c2e:	2c 85       	ldd	r18, Y+12	; 0x0c
     c30:	2f 77       	andi	r18, 0x7F	; 127
     c32:	22 2e       	mov	r2, r18
     c34:	16 c0       	rjmp	.+44     	; 0xc62 <vfprintf+0x192>
     c36:	38 01       	movw	r6, r16
     c38:	f2 e0       	ldi	r31, 0x02	; 2
     c3a:	6f 0e       	add	r6, r31
     c3c:	71 1c       	adc	r7, r1
     c3e:	f8 01       	movw	r30, r16
     c40:	a0 80       	ld	r10, Z
     c42:	b1 80       	ldd	r11, Z+1	; 0x01
     c44:	26 ff       	sbrs	r18, 6
     c46:	03 c0       	rjmp	.+6      	; 0xc4e <vfprintf+0x17e>
     c48:	65 2d       	mov	r22, r5
     c4a:	70 e0       	ldi	r23, 0x00	; 0
     c4c:	02 c0       	rjmp	.+4      	; 0xc52 <vfprintf+0x182>
     c4e:	6f ef       	ldi	r22, 0xFF	; 255
     c50:	7f ef       	ldi	r23, 0xFF	; 255
     c52:	c5 01       	movw	r24, r10
     c54:	2c 87       	std	Y+12, r18	; 0x0c
     c56:	6b d2       	rcall	.+1238   	; 0x112e <strnlen_P>
     c58:	2c 01       	movw	r4, r24
     c5a:	2c 85       	ldd	r18, Y+12	; 0x0c
     c5c:	20 68       	ori	r18, 0x80	; 128
     c5e:	22 2e       	mov	r2, r18
     c60:	83 01       	movw	r16, r6
     c62:	23 fc       	sbrc	r2, 3
     c64:	19 c0       	rjmp	.+50     	; 0xc98 <vfprintf+0x1c8>
     c66:	83 2d       	mov	r24, r3
     c68:	90 e0       	ldi	r25, 0x00	; 0
     c6a:	48 16       	cp	r4, r24
     c6c:	59 06       	cpc	r5, r25
     c6e:	a0 f4       	brcc	.+40     	; 0xc98 <vfprintf+0x1c8>
     c70:	b7 01       	movw	r22, r14
     c72:	80 e2       	ldi	r24, 0x20	; 32
     c74:	90 e0       	ldi	r25, 0x00	; 0
     c76:	78 d2       	rcall	.+1264   	; 0x1168 <fputc>
     c78:	3a 94       	dec	r3
     c7a:	f5 cf       	rjmp	.-22     	; 0xc66 <vfprintf+0x196>
     c7c:	f5 01       	movw	r30, r10
     c7e:	27 fc       	sbrc	r2, 7
     c80:	85 91       	lpm	r24, Z+
     c82:	27 fe       	sbrs	r2, 7
     c84:	81 91       	ld	r24, Z+
     c86:	5f 01       	movw	r10, r30
     c88:	b7 01       	movw	r22, r14
     c8a:	90 e0       	ldi	r25, 0x00	; 0
     c8c:	6d d2       	rcall	.+1242   	; 0x1168 <fputc>
     c8e:	31 10       	cpse	r3, r1
     c90:	3a 94       	dec	r3
     c92:	f1 e0       	ldi	r31, 0x01	; 1
     c94:	4f 1a       	sub	r4, r31
     c96:	51 08       	sbc	r5, r1
     c98:	41 14       	cp	r4, r1
     c9a:	51 04       	cpc	r5, r1
     c9c:	79 f7       	brne	.-34     	; 0xc7c <vfprintf+0x1ac>
     c9e:	de c0       	rjmp	.+444    	; 0xe5c <vfprintf+0x38c>
     ca0:	84 36       	cpi	r24, 0x64	; 100
     ca2:	11 f0       	breq	.+4      	; 0xca8 <vfprintf+0x1d8>
     ca4:	89 36       	cpi	r24, 0x69	; 105
     ca6:	31 f5       	brne	.+76     	; 0xcf4 <vfprintf+0x224>
     ca8:	f8 01       	movw	r30, r16
     caa:	27 ff       	sbrs	r18, 7
     cac:	07 c0       	rjmp	.+14     	; 0xcbc <vfprintf+0x1ec>
     cae:	60 81       	ld	r22, Z
     cb0:	71 81       	ldd	r23, Z+1	; 0x01
     cb2:	82 81       	ldd	r24, Z+2	; 0x02
     cb4:	93 81       	ldd	r25, Z+3	; 0x03
     cb6:	0c 5f       	subi	r16, 0xFC	; 252
     cb8:	1f 4f       	sbci	r17, 0xFF	; 255
     cba:	08 c0       	rjmp	.+16     	; 0xccc <vfprintf+0x1fc>
     cbc:	60 81       	ld	r22, Z
     cbe:	71 81       	ldd	r23, Z+1	; 0x01
     cc0:	88 27       	eor	r24, r24
     cc2:	77 fd       	sbrc	r23, 7
     cc4:	80 95       	com	r24
     cc6:	98 2f       	mov	r25, r24
     cc8:	0e 5f       	subi	r16, 0xFE	; 254
     cca:	1f 4f       	sbci	r17, 0xFF	; 255
     ccc:	2f 76       	andi	r18, 0x6F	; 111
     cce:	b2 2e       	mov	r11, r18
     cd0:	97 ff       	sbrs	r25, 7
     cd2:	09 c0       	rjmp	.+18     	; 0xce6 <vfprintf+0x216>
     cd4:	90 95       	com	r25
     cd6:	80 95       	com	r24
     cd8:	70 95       	com	r23
     cda:	61 95       	neg	r22
     cdc:	7f 4f       	sbci	r23, 0xFF	; 255
     cde:	8f 4f       	sbci	r24, 0xFF	; 255
     ce0:	9f 4f       	sbci	r25, 0xFF	; 255
     ce2:	20 68       	ori	r18, 0x80	; 128
     ce4:	b2 2e       	mov	r11, r18
     ce6:	2a e0       	ldi	r18, 0x0A	; 10
     ce8:	30 e0       	ldi	r19, 0x00	; 0
     cea:	a4 01       	movw	r20, r8
     cec:	6f d2       	rcall	.+1246   	; 0x11cc <__ultoa_invert>
     cee:	a8 2e       	mov	r10, r24
     cf0:	a8 18       	sub	r10, r8
     cf2:	43 c0       	rjmp	.+134    	; 0xd7a <vfprintf+0x2aa>
     cf4:	85 37       	cpi	r24, 0x75	; 117
     cf6:	29 f4       	brne	.+10     	; 0xd02 <vfprintf+0x232>
     cf8:	2f 7e       	andi	r18, 0xEF	; 239
     cfa:	b2 2e       	mov	r11, r18
     cfc:	2a e0       	ldi	r18, 0x0A	; 10
     cfe:	30 e0       	ldi	r19, 0x00	; 0
     d00:	25 c0       	rjmp	.+74     	; 0xd4c <vfprintf+0x27c>
     d02:	f2 2f       	mov	r31, r18
     d04:	f9 7f       	andi	r31, 0xF9	; 249
     d06:	bf 2e       	mov	r11, r31
     d08:	8f 36       	cpi	r24, 0x6F	; 111
     d0a:	c1 f0       	breq	.+48     	; 0xd3c <vfprintf+0x26c>
     d0c:	18 f4       	brcc	.+6      	; 0xd14 <vfprintf+0x244>
     d0e:	88 35       	cpi	r24, 0x58	; 88
     d10:	79 f0       	breq	.+30     	; 0xd30 <vfprintf+0x260>
     d12:	ad c0       	rjmp	.+346    	; 0xe6e <vfprintf+0x39e>
     d14:	80 37       	cpi	r24, 0x70	; 112
     d16:	19 f0       	breq	.+6      	; 0xd1e <vfprintf+0x24e>
     d18:	88 37       	cpi	r24, 0x78	; 120
     d1a:	21 f0       	breq	.+8      	; 0xd24 <vfprintf+0x254>
     d1c:	a8 c0       	rjmp	.+336    	; 0xe6e <vfprintf+0x39e>
     d1e:	2f 2f       	mov	r18, r31
     d20:	20 61       	ori	r18, 0x10	; 16
     d22:	b2 2e       	mov	r11, r18
     d24:	b4 fe       	sbrs	r11, 4
     d26:	0d c0       	rjmp	.+26     	; 0xd42 <vfprintf+0x272>
     d28:	8b 2d       	mov	r24, r11
     d2a:	84 60       	ori	r24, 0x04	; 4
     d2c:	b8 2e       	mov	r11, r24
     d2e:	09 c0       	rjmp	.+18     	; 0xd42 <vfprintf+0x272>
     d30:	24 ff       	sbrs	r18, 4
     d32:	0a c0       	rjmp	.+20     	; 0xd48 <vfprintf+0x278>
     d34:	9f 2f       	mov	r25, r31
     d36:	96 60       	ori	r25, 0x06	; 6
     d38:	b9 2e       	mov	r11, r25
     d3a:	06 c0       	rjmp	.+12     	; 0xd48 <vfprintf+0x278>
     d3c:	28 e0       	ldi	r18, 0x08	; 8
     d3e:	30 e0       	ldi	r19, 0x00	; 0
     d40:	05 c0       	rjmp	.+10     	; 0xd4c <vfprintf+0x27c>
     d42:	20 e1       	ldi	r18, 0x10	; 16
     d44:	30 e0       	ldi	r19, 0x00	; 0
     d46:	02 c0       	rjmp	.+4      	; 0xd4c <vfprintf+0x27c>
     d48:	20 e1       	ldi	r18, 0x10	; 16
     d4a:	32 e0       	ldi	r19, 0x02	; 2
     d4c:	f8 01       	movw	r30, r16
     d4e:	b7 fe       	sbrs	r11, 7
     d50:	07 c0       	rjmp	.+14     	; 0xd60 <vfprintf+0x290>
     d52:	60 81       	ld	r22, Z
     d54:	71 81       	ldd	r23, Z+1	; 0x01
     d56:	82 81       	ldd	r24, Z+2	; 0x02
     d58:	93 81       	ldd	r25, Z+3	; 0x03
     d5a:	0c 5f       	subi	r16, 0xFC	; 252
     d5c:	1f 4f       	sbci	r17, 0xFF	; 255
     d5e:	06 c0       	rjmp	.+12     	; 0xd6c <vfprintf+0x29c>
     d60:	60 81       	ld	r22, Z
     d62:	71 81       	ldd	r23, Z+1	; 0x01
     d64:	80 e0       	ldi	r24, 0x00	; 0
     d66:	90 e0       	ldi	r25, 0x00	; 0
     d68:	0e 5f       	subi	r16, 0xFE	; 254
     d6a:	1f 4f       	sbci	r17, 0xFF	; 255
     d6c:	a4 01       	movw	r20, r8
     d6e:	2e d2       	rcall	.+1116   	; 0x11cc <__ultoa_invert>
     d70:	a8 2e       	mov	r10, r24
     d72:	a8 18       	sub	r10, r8
     d74:	fb 2d       	mov	r31, r11
     d76:	ff 77       	andi	r31, 0x7F	; 127
     d78:	bf 2e       	mov	r11, r31
     d7a:	b6 fe       	sbrs	r11, 6
     d7c:	0b c0       	rjmp	.+22     	; 0xd94 <vfprintf+0x2c4>
     d7e:	2b 2d       	mov	r18, r11
     d80:	2e 7f       	andi	r18, 0xFE	; 254
     d82:	a5 14       	cp	r10, r5
     d84:	50 f4       	brcc	.+20     	; 0xd9a <vfprintf+0x2ca>
     d86:	b4 fe       	sbrs	r11, 4
     d88:	0a c0       	rjmp	.+20     	; 0xd9e <vfprintf+0x2ce>
     d8a:	b2 fc       	sbrc	r11, 2
     d8c:	08 c0       	rjmp	.+16     	; 0xd9e <vfprintf+0x2ce>
     d8e:	2b 2d       	mov	r18, r11
     d90:	2e 7e       	andi	r18, 0xEE	; 238
     d92:	05 c0       	rjmp	.+10     	; 0xd9e <vfprintf+0x2ce>
     d94:	7a 2c       	mov	r7, r10
     d96:	2b 2d       	mov	r18, r11
     d98:	03 c0       	rjmp	.+6      	; 0xda0 <vfprintf+0x2d0>
     d9a:	7a 2c       	mov	r7, r10
     d9c:	01 c0       	rjmp	.+2      	; 0xda0 <vfprintf+0x2d0>
     d9e:	75 2c       	mov	r7, r5
     da0:	24 ff       	sbrs	r18, 4
     da2:	0d c0       	rjmp	.+26     	; 0xdbe <vfprintf+0x2ee>
     da4:	fe 01       	movw	r30, r28
     da6:	ea 0d       	add	r30, r10
     da8:	f1 1d       	adc	r31, r1
     daa:	80 81       	ld	r24, Z
     dac:	80 33       	cpi	r24, 0x30	; 48
     dae:	11 f4       	brne	.+4      	; 0xdb4 <vfprintf+0x2e4>
     db0:	29 7e       	andi	r18, 0xE9	; 233
     db2:	09 c0       	rjmp	.+18     	; 0xdc6 <vfprintf+0x2f6>
     db4:	22 ff       	sbrs	r18, 2
     db6:	06 c0       	rjmp	.+12     	; 0xdc4 <vfprintf+0x2f4>
     db8:	73 94       	inc	r7
     dba:	73 94       	inc	r7
     dbc:	04 c0       	rjmp	.+8      	; 0xdc6 <vfprintf+0x2f6>
     dbe:	82 2f       	mov	r24, r18
     dc0:	86 78       	andi	r24, 0x86	; 134
     dc2:	09 f0       	breq	.+2      	; 0xdc6 <vfprintf+0x2f6>
     dc4:	73 94       	inc	r7
     dc6:	23 fd       	sbrc	r18, 3
     dc8:	12 c0       	rjmp	.+36     	; 0xdee <vfprintf+0x31e>
     dca:	20 ff       	sbrs	r18, 0
     dcc:	06 c0       	rjmp	.+12     	; 0xdda <vfprintf+0x30a>
     dce:	5a 2c       	mov	r5, r10
     dd0:	73 14       	cp	r7, r3
     dd2:	18 f4       	brcc	.+6      	; 0xdda <vfprintf+0x30a>
     dd4:	53 0c       	add	r5, r3
     dd6:	57 18       	sub	r5, r7
     dd8:	73 2c       	mov	r7, r3
     dda:	73 14       	cp	r7, r3
     ddc:	60 f4       	brcc	.+24     	; 0xdf6 <vfprintf+0x326>
     dde:	b7 01       	movw	r22, r14
     de0:	80 e2       	ldi	r24, 0x20	; 32
     de2:	90 e0       	ldi	r25, 0x00	; 0
     de4:	2c 87       	std	Y+12, r18	; 0x0c
     de6:	c0 d1       	rcall	.+896    	; 0x1168 <fputc>
     de8:	73 94       	inc	r7
     dea:	2c 85       	ldd	r18, Y+12	; 0x0c
     dec:	f6 cf       	rjmp	.-20     	; 0xdda <vfprintf+0x30a>
     dee:	73 14       	cp	r7, r3
     df0:	10 f4       	brcc	.+4      	; 0xdf6 <vfprintf+0x326>
     df2:	37 18       	sub	r3, r7
     df4:	01 c0       	rjmp	.+2      	; 0xdf8 <vfprintf+0x328>
     df6:	31 2c       	mov	r3, r1
     df8:	24 ff       	sbrs	r18, 4
     dfa:	11 c0       	rjmp	.+34     	; 0xe1e <vfprintf+0x34e>
     dfc:	b7 01       	movw	r22, r14
     dfe:	80 e3       	ldi	r24, 0x30	; 48
     e00:	90 e0       	ldi	r25, 0x00	; 0
     e02:	2c 87       	std	Y+12, r18	; 0x0c
     e04:	b1 d1       	rcall	.+866    	; 0x1168 <fputc>
     e06:	2c 85       	ldd	r18, Y+12	; 0x0c
     e08:	22 ff       	sbrs	r18, 2
     e0a:	16 c0       	rjmp	.+44     	; 0xe38 <vfprintf+0x368>
     e0c:	21 ff       	sbrs	r18, 1
     e0e:	03 c0       	rjmp	.+6      	; 0xe16 <vfprintf+0x346>
     e10:	88 e5       	ldi	r24, 0x58	; 88
     e12:	90 e0       	ldi	r25, 0x00	; 0
     e14:	02 c0       	rjmp	.+4      	; 0xe1a <vfprintf+0x34a>
     e16:	88 e7       	ldi	r24, 0x78	; 120
     e18:	90 e0       	ldi	r25, 0x00	; 0
     e1a:	b7 01       	movw	r22, r14
     e1c:	0c c0       	rjmp	.+24     	; 0xe36 <vfprintf+0x366>
     e1e:	82 2f       	mov	r24, r18
     e20:	86 78       	andi	r24, 0x86	; 134
     e22:	51 f0       	breq	.+20     	; 0xe38 <vfprintf+0x368>
     e24:	21 fd       	sbrc	r18, 1
     e26:	02 c0       	rjmp	.+4      	; 0xe2c <vfprintf+0x35c>
     e28:	80 e2       	ldi	r24, 0x20	; 32
     e2a:	01 c0       	rjmp	.+2      	; 0xe2e <vfprintf+0x35e>
     e2c:	8b e2       	ldi	r24, 0x2B	; 43
     e2e:	27 fd       	sbrc	r18, 7
     e30:	8d e2       	ldi	r24, 0x2D	; 45
     e32:	b7 01       	movw	r22, r14
     e34:	90 e0       	ldi	r25, 0x00	; 0
     e36:	98 d1       	rcall	.+816    	; 0x1168 <fputc>
     e38:	a5 14       	cp	r10, r5
     e3a:	30 f4       	brcc	.+12     	; 0xe48 <vfprintf+0x378>
     e3c:	b7 01       	movw	r22, r14
     e3e:	80 e3       	ldi	r24, 0x30	; 48
     e40:	90 e0       	ldi	r25, 0x00	; 0
     e42:	92 d1       	rcall	.+804    	; 0x1168 <fputc>
     e44:	5a 94       	dec	r5
     e46:	f8 cf       	rjmp	.-16     	; 0xe38 <vfprintf+0x368>
     e48:	aa 94       	dec	r10
     e4a:	f4 01       	movw	r30, r8
     e4c:	ea 0d       	add	r30, r10
     e4e:	f1 1d       	adc	r31, r1
     e50:	80 81       	ld	r24, Z
     e52:	b7 01       	movw	r22, r14
     e54:	90 e0       	ldi	r25, 0x00	; 0
     e56:	88 d1       	rcall	.+784    	; 0x1168 <fputc>
     e58:	a1 10       	cpse	r10, r1
     e5a:	f6 cf       	rjmp	.-20     	; 0xe48 <vfprintf+0x378>
     e5c:	33 20       	and	r3, r3
     e5e:	09 f4       	brne	.+2      	; 0xe62 <vfprintf+0x392>
     e60:	5d ce       	rjmp	.-838    	; 0xb1c <vfprintf+0x4c>
     e62:	b7 01       	movw	r22, r14
     e64:	80 e2       	ldi	r24, 0x20	; 32
     e66:	90 e0       	ldi	r25, 0x00	; 0
     e68:	7f d1       	rcall	.+766    	; 0x1168 <fputc>
     e6a:	3a 94       	dec	r3
     e6c:	f7 cf       	rjmp	.-18     	; 0xe5c <vfprintf+0x38c>
     e6e:	f7 01       	movw	r30, r14
     e70:	86 81       	ldd	r24, Z+6	; 0x06
     e72:	97 81       	ldd	r25, Z+7	; 0x07
     e74:	02 c0       	rjmp	.+4      	; 0xe7a <vfprintf+0x3aa>
     e76:	8f ef       	ldi	r24, 0xFF	; 255
     e78:	9f ef       	ldi	r25, 0xFF	; 255
     e7a:	2c 96       	adiw	r28, 0x0c	; 12
     e7c:	0f b6       	in	r0, 0x3f	; 63
     e7e:	f8 94       	cli
     e80:	de bf       	out	0x3e, r29	; 62
     e82:	0f be       	out	0x3f, r0	; 63
     e84:	cd bf       	out	0x3d, r28	; 61
     e86:	df 91       	pop	r29
     e88:	cf 91       	pop	r28
     e8a:	1f 91       	pop	r17
     e8c:	0f 91       	pop	r16
     e8e:	ff 90       	pop	r15
     e90:	ef 90       	pop	r14
     e92:	df 90       	pop	r13
     e94:	cf 90       	pop	r12
     e96:	bf 90       	pop	r11
     e98:	af 90       	pop	r10
     e9a:	9f 90       	pop	r9
     e9c:	8f 90       	pop	r8
     e9e:	7f 90       	pop	r7
     ea0:	6f 90       	pop	r6
     ea2:	5f 90       	pop	r5
     ea4:	4f 90       	pop	r4
     ea6:	3f 90       	pop	r3
     ea8:	2f 90       	pop	r2
     eaa:	08 95       	ret

00000eac <calloc>:
     eac:	0f 93       	push	r16
     eae:	1f 93       	push	r17
     eb0:	cf 93       	push	r28
     eb2:	df 93       	push	r29
     eb4:	86 9f       	mul	r24, r22
     eb6:	80 01       	movw	r16, r0
     eb8:	87 9f       	mul	r24, r23
     eba:	10 0d       	add	r17, r0
     ebc:	96 9f       	mul	r25, r22
     ebe:	10 0d       	add	r17, r0
     ec0:	11 24       	eor	r1, r1
     ec2:	c8 01       	movw	r24, r16
     ec4:	0d d0       	rcall	.+26     	; 0xee0 <malloc>
     ec6:	ec 01       	movw	r28, r24
     ec8:	00 97       	sbiw	r24, 0x00	; 0
     eca:	21 f0       	breq	.+8      	; 0xed4 <calloc+0x28>
     ecc:	a8 01       	movw	r20, r16
     ece:	60 e0       	ldi	r22, 0x00	; 0
     ed0:	70 e0       	ldi	r23, 0x00	; 0
     ed2:	38 d1       	rcall	.+624    	; 0x1144 <memset>
     ed4:	ce 01       	movw	r24, r28
     ed6:	df 91       	pop	r29
     ed8:	cf 91       	pop	r28
     eda:	1f 91       	pop	r17
     edc:	0f 91       	pop	r16
     ede:	08 95       	ret

00000ee0 <malloc>:
     ee0:	cf 93       	push	r28
     ee2:	df 93       	push	r29
     ee4:	82 30       	cpi	r24, 0x02	; 2
     ee6:	91 05       	cpc	r25, r1
     ee8:	10 f4       	brcc	.+4      	; 0xeee <malloc+0xe>
     eea:	82 e0       	ldi	r24, 0x02	; 2
     eec:	90 e0       	ldi	r25, 0x00	; 0
     eee:	e0 91 1b 03 	lds	r30, 0x031B
     ef2:	f0 91 1c 03 	lds	r31, 0x031C
     ef6:	20 e0       	ldi	r18, 0x00	; 0
     ef8:	30 e0       	ldi	r19, 0x00	; 0
     efa:	a0 e0       	ldi	r26, 0x00	; 0
     efc:	b0 e0       	ldi	r27, 0x00	; 0
     efe:	30 97       	sbiw	r30, 0x00	; 0
     f00:	39 f1       	breq	.+78     	; 0xf50 <malloc+0x70>
     f02:	40 81       	ld	r20, Z
     f04:	51 81       	ldd	r21, Z+1	; 0x01
     f06:	48 17       	cp	r20, r24
     f08:	59 07       	cpc	r21, r25
     f0a:	b8 f0       	brcs	.+46     	; 0xf3a <malloc+0x5a>
     f0c:	48 17       	cp	r20, r24
     f0e:	59 07       	cpc	r21, r25
     f10:	71 f4       	brne	.+28     	; 0xf2e <malloc+0x4e>
     f12:	82 81       	ldd	r24, Z+2	; 0x02
     f14:	93 81       	ldd	r25, Z+3	; 0x03
     f16:	10 97       	sbiw	r26, 0x00	; 0
     f18:	29 f0       	breq	.+10     	; 0xf24 <malloc+0x44>
     f1a:	13 96       	adiw	r26, 0x03	; 3
     f1c:	9c 93       	st	X, r25
     f1e:	8e 93       	st	-X, r24
     f20:	12 97       	sbiw	r26, 0x02	; 2
     f22:	2c c0       	rjmp	.+88     	; 0xf7c <malloc+0x9c>
     f24:	90 93 1c 03 	sts	0x031C, r25
     f28:	80 93 1b 03 	sts	0x031B, r24
     f2c:	27 c0       	rjmp	.+78     	; 0xf7c <malloc+0x9c>
     f2e:	21 15       	cp	r18, r1
     f30:	31 05       	cpc	r19, r1
     f32:	31 f0       	breq	.+12     	; 0xf40 <malloc+0x60>
     f34:	42 17       	cp	r20, r18
     f36:	53 07       	cpc	r21, r19
     f38:	18 f0       	brcs	.+6      	; 0xf40 <malloc+0x60>
     f3a:	a9 01       	movw	r20, r18
     f3c:	db 01       	movw	r26, r22
     f3e:	01 c0       	rjmp	.+2      	; 0xf42 <malloc+0x62>
     f40:	ef 01       	movw	r28, r30
     f42:	9a 01       	movw	r18, r20
     f44:	bd 01       	movw	r22, r26
     f46:	df 01       	movw	r26, r30
     f48:	02 80       	ldd	r0, Z+2	; 0x02
     f4a:	f3 81       	ldd	r31, Z+3	; 0x03
     f4c:	e0 2d       	mov	r30, r0
     f4e:	d7 cf       	rjmp	.-82     	; 0xefe <malloc+0x1e>
     f50:	21 15       	cp	r18, r1
     f52:	31 05       	cpc	r19, r1
     f54:	f9 f0       	breq	.+62     	; 0xf94 <malloc+0xb4>
     f56:	28 1b       	sub	r18, r24
     f58:	39 0b       	sbc	r19, r25
     f5a:	24 30       	cpi	r18, 0x04	; 4
     f5c:	31 05       	cpc	r19, r1
     f5e:	80 f4       	brcc	.+32     	; 0xf80 <malloc+0xa0>
     f60:	8a 81       	ldd	r24, Y+2	; 0x02
     f62:	9b 81       	ldd	r25, Y+3	; 0x03
     f64:	61 15       	cp	r22, r1
     f66:	71 05       	cpc	r23, r1
     f68:	21 f0       	breq	.+8      	; 0xf72 <malloc+0x92>
     f6a:	fb 01       	movw	r30, r22
     f6c:	93 83       	std	Z+3, r25	; 0x03
     f6e:	82 83       	std	Z+2, r24	; 0x02
     f70:	04 c0       	rjmp	.+8      	; 0xf7a <malloc+0x9a>
     f72:	90 93 1c 03 	sts	0x031C, r25
     f76:	80 93 1b 03 	sts	0x031B, r24
     f7a:	fe 01       	movw	r30, r28
     f7c:	32 96       	adiw	r30, 0x02	; 2
     f7e:	44 c0       	rjmp	.+136    	; 0x1008 <malloc+0x128>
     f80:	fe 01       	movw	r30, r28
     f82:	e2 0f       	add	r30, r18
     f84:	f3 1f       	adc	r31, r19
     f86:	81 93       	st	Z+, r24
     f88:	91 93       	st	Z+, r25
     f8a:	22 50       	subi	r18, 0x02	; 2
     f8c:	31 09       	sbc	r19, r1
     f8e:	39 83       	std	Y+1, r19	; 0x01
     f90:	28 83       	st	Y, r18
     f92:	3a c0       	rjmp	.+116    	; 0x1008 <malloc+0x128>
     f94:	20 91 19 03 	lds	r18, 0x0319
     f98:	30 91 1a 03 	lds	r19, 0x031A
     f9c:	23 2b       	or	r18, r19
     f9e:	41 f4       	brne	.+16     	; 0xfb0 <malloc+0xd0>
     fa0:	20 91 02 02 	lds	r18, 0x0202
     fa4:	30 91 03 02 	lds	r19, 0x0203
     fa8:	30 93 1a 03 	sts	0x031A, r19
     fac:	20 93 19 03 	sts	0x0319, r18
     fb0:	20 91 00 02 	lds	r18, 0x0200
     fb4:	30 91 01 02 	lds	r19, 0x0201
     fb8:	21 15       	cp	r18, r1
     fba:	31 05       	cpc	r19, r1
     fbc:	41 f4       	brne	.+16     	; 0xfce <malloc+0xee>
     fbe:	2d b7       	in	r18, 0x3d	; 61
     fc0:	3e b7       	in	r19, 0x3e	; 62
     fc2:	40 91 04 02 	lds	r20, 0x0204
     fc6:	50 91 05 02 	lds	r21, 0x0205
     fca:	24 1b       	sub	r18, r20
     fcc:	35 0b       	sbc	r19, r21
     fce:	e0 91 19 03 	lds	r30, 0x0319
     fd2:	f0 91 1a 03 	lds	r31, 0x031A
     fd6:	e2 17       	cp	r30, r18
     fd8:	f3 07       	cpc	r31, r19
     fda:	a0 f4       	brcc	.+40     	; 0x1004 <malloc+0x124>
     fdc:	2e 1b       	sub	r18, r30
     fde:	3f 0b       	sbc	r19, r31
     fe0:	28 17       	cp	r18, r24
     fe2:	39 07       	cpc	r19, r25
     fe4:	78 f0       	brcs	.+30     	; 0x1004 <malloc+0x124>
     fe6:	ac 01       	movw	r20, r24
     fe8:	4e 5f       	subi	r20, 0xFE	; 254
     fea:	5f 4f       	sbci	r21, 0xFF	; 255
     fec:	24 17       	cp	r18, r20
     fee:	35 07       	cpc	r19, r21
     ff0:	48 f0       	brcs	.+18     	; 0x1004 <malloc+0x124>
     ff2:	4e 0f       	add	r20, r30
     ff4:	5f 1f       	adc	r21, r31
     ff6:	50 93 1a 03 	sts	0x031A, r21
     ffa:	40 93 19 03 	sts	0x0319, r20
     ffe:	81 93       	st	Z+, r24
    1000:	91 93       	st	Z+, r25
    1002:	02 c0       	rjmp	.+4      	; 0x1008 <malloc+0x128>
    1004:	e0 e0       	ldi	r30, 0x00	; 0
    1006:	f0 e0       	ldi	r31, 0x00	; 0
    1008:	cf 01       	movw	r24, r30
    100a:	df 91       	pop	r29
    100c:	cf 91       	pop	r28
    100e:	08 95       	ret

00001010 <free>:
    1010:	cf 93       	push	r28
    1012:	df 93       	push	r29
    1014:	00 97       	sbiw	r24, 0x00	; 0
    1016:	09 f4       	brne	.+2      	; 0x101a <free+0xa>
    1018:	87 c0       	rjmp	.+270    	; 0x1128 <free+0x118>
    101a:	fc 01       	movw	r30, r24
    101c:	32 97       	sbiw	r30, 0x02	; 2
    101e:	13 82       	std	Z+3, r1	; 0x03
    1020:	12 82       	std	Z+2, r1	; 0x02
    1022:	c0 91 1b 03 	lds	r28, 0x031B
    1026:	d0 91 1c 03 	lds	r29, 0x031C
    102a:	20 97       	sbiw	r28, 0x00	; 0
    102c:	81 f4       	brne	.+32     	; 0x104e <free+0x3e>
    102e:	20 81       	ld	r18, Z
    1030:	31 81       	ldd	r19, Z+1	; 0x01
    1032:	28 0f       	add	r18, r24
    1034:	39 1f       	adc	r19, r25
    1036:	80 91 19 03 	lds	r24, 0x0319
    103a:	90 91 1a 03 	lds	r25, 0x031A
    103e:	82 17       	cp	r24, r18
    1040:	93 07       	cpc	r25, r19
    1042:	79 f5       	brne	.+94     	; 0x10a2 <free+0x92>
    1044:	f0 93 1a 03 	sts	0x031A, r31
    1048:	e0 93 19 03 	sts	0x0319, r30
    104c:	6d c0       	rjmp	.+218    	; 0x1128 <free+0x118>
    104e:	de 01       	movw	r26, r28
    1050:	20 e0       	ldi	r18, 0x00	; 0
    1052:	30 e0       	ldi	r19, 0x00	; 0
    1054:	ae 17       	cp	r26, r30
    1056:	bf 07       	cpc	r27, r31
    1058:	50 f4       	brcc	.+20     	; 0x106e <free+0x5e>
    105a:	12 96       	adiw	r26, 0x02	; 2
    105c:	4d 91       	ld	r20, X+
    105e:	5c 91       	ld	r21, X
    1060:	13 97       	sbiw	r26, 0x03	; 3
    1062:	9d 01       	movw	r18, r26
    1064:	41 15       	cp	r20, r1
    1066:	51 05       	cpc	r21, r1
    1068:	09 f1       	breq	.+66     	; 0x10ac <free+0x9c>
    106a:	da 01       	movw	r26, r20
    106c:	f3 cf       	rjmp	.-26     	; 0x1054 <free+0x44>
    106e:	b3 83       	std	Z+3, r27	; 0x03
    1070:	a2 83       	std	Z+2, r26	; 0x02
    1072:	40 81       	ld	r20, Z
    1074:	51 81       	ldd	r21, Z+1	; 0x01
    1076:	84 0f       	add	r24, r20
    1078:	95 1f       	adc	r25, r21
    107a:	8a 17       	cp	r24, r26
    107c:	9b 07       	cpc	r25, r27
    107e:	71 f4       	brne	.+28     	; 0x109c <free+0x8c>
    1080:	8d 91       	ld	r24, X+
    1082:	9c 91       	ld	r25, X
    1084:	11 97       	sbiw	r26, 0x01	; 1
    1086:	84 0f       	add	r24, r20
    1088:	95 1f       	adc	r25, r21
    108a:	02 96       	adiw	r24, 0x02	; 2
    108c:	91 83       	std	Z+1, r25	; 0x01
    108e:	80 83       	st	Z, r24
    1090:	12 96       	adiw	r26, 0x02	; 2
    1092:	8d 91       	ld	r24, X+
    1094:	9c 91       	ld	r25, X
    1096:	13 97       	sbiw	r26, 0x03	; 3
    1098:	93 83       	std	Z+3, r25	; 0x03
    109a:	82 83       	std	Z+2, r24	; 0x02
    109c:	21 15       	cp	r18, r1
    109e:	31 05       	cpc	r19, r1
    10a0:	29 f4       	brne	.+10     	; 0x10ac <free+0x9c>
    10a2:	f0 93 1c 03 	sts	0x031C, r31
    10a6:	e0 93 1b 03 	sts	0x031B, r30
    10aa:	3e c0       	rjmp	.+124    	; 0x1128 <free+0x118>
    10ac:	d9 01       	movw	r26, r18
    10ae:	13 96       	adiw	r26, 0x03	; 3
    10b0:	fc 93       	st	X, r31
    10b2:	ee 93       	st	-X, r30
    10b4:	12 97       	sbiw	r26, 0x02	; 2
    10b6:	4d 91       	ld	r20, X+
    10b8:	5d 91       	ld	r21, X+
    10ba:	a4 0f       	add	r26, r20
    10bc:	b5 1f       	adc	r27, r21
    10be:	ea 17       	cp	r30, r26
    10c0:	fb 07       	cpc	r31, r27
    10c2:	79 f4       	brne	.+30     	; 0x10e2 <free+0xd2>
    10c4:	80 81       	ld	r24, Z
    10c6:	91 81       	ldd	r25, Z+1	; 0x01
    10c8:	84 0f       	add	r24, r20
    10ca:	95 1f       	adc	r25, r21
    10cc:	02 96       	adiw	r24, 0x02	; 2
    10ce:	d9 01       	movw	r26, r18
    10d0:	11 96       	adiw	r26, 0x01	; 1
    10d2:	9c 93       	st	X, r25
    10d4:	8e 93       	st	-X, r24
    10d6:	82 81       	ldd	r24, Z+2	; 0x02
    10d8:	93 81       	ldd	r25, Z+3	; 0x03
    10da:	13 96       	adiw	r26, 0x03	; 3
    10dc:	9c 93       	st	X, r25
    10de:	8e 93       	st	-X, r24
    10e0:	12 97       	sbiw	r26, 0x02	; 2
    10e2:	e0 e0       	ldi	r30, 0x00	; 0
    10e4:	f0 e0       	ldi	r31, 0x00	; 0
    10e6:	8a 81       	ldd	r24, Y+2	; 0x02
    10e8:	9b 81       	ldd	r25, Y+3	; 0x03
    10ea:	00 97       	sbiw	r24, 0x00	; 0
    10ec:	19 f0       	breq	.+6      	; 0x10f4 <free+0xe4>
    10ee:	fe 01       	movw	r30, r28
    10f0:	ec 01       	movw	r28, r24
    10f2:	f9 cf       	rjmp	.-14     	; 0x10e6 <free+0xd6>
    10f4:	ce 01       	movw	r24, r28
    10f6:	02 96       	adiw	r24, 0x02	; 2
    10f8:	28 81       	ld	r18, Y
    10fa:	39 81       	ldd	r19, Y+1	; 0x01
    10fc:	82 0f       	add	r24, r18
    10fe:	93 1f       	adc	r25, r19
    1100:	20 91 19 03 	lds	r18, 0x0319
    1104:	30 91 1a 03 	lds	r19, 0x031A
    1108:	28 17       	cp	r18, r24
    110a:	39 07       	cpc	r19, r25
    110c:	69 f4       	brne	.+26     	; 0x1128 <free+0x118>
    110e:	30 97       	sbiw	r30, 0x00	; 0
    1110:	29 f4       	brne	.+10     	; 0x111c <free+0x10c>
    1112:	10 92 1c 03 	sts	0x031C, r1
    1116:	10 92 1b 03 	sts	0x031B, r1
    111a:	02 c0       	rjmp	.+4      	; 0x1120 <free+0x110>
    111c:	13 82       	std	Z+3, r1	; 0x03
    111e:	12 82       	std	Z+2, r1	; 0x02
    1120:	d0 93 1a 03 	sts	0x031A, r29
    1124:	c0 93 19 03 	sts	0x0319, r28
    1128:	df 91       	pop	r29
    112a:	cf 91       	pop	r28
    112c:	08 95       	ret

0000112e <strnlen_P>:
    112e:	fc 01       	movw	r30, r24
    1130:	05 90       	lpm	r0, Z+
    1132:	61 50       	subi	r22, 0x01	; 1
    1134:	70 40       	sbci	r23, 0x00	; 0
    1136:	01 10       	cpse	r0, r1
    1138:	d8 f7       	brcc	.-10     	; 0x1130 <strnlen_P+0x2>
    113a:	80 95       	com	r24
    113c:	90 95       	com	r25
    113e:	8e 0f       	add	r24, r30
    1140:	9f 1f       	adc	r25, r31
    1142:	08 95       	ret

00001144 <memset>:
    1144:	dc 01       	movw	r26, r24
    1146:	01 c0       	rjmp	.+2      	; 0x114a <memset+0x6>
    1148:	6d 93       	st	X+, r22
    114a:	41 50       	subi	r20, 0x01	; 1
    114c:	50 40       	sbci	r21, 0x00	; 0
    114e:	e0 f7       	brcc	.-8      	; 0x1148 <memset+0x4>
    1150:	08 95       	ret

00001152 <strnlen>:
    1152:	fc 01       	movw	r30, r24
    1154:	61 50       	subi	r22, 0x01	; 1
    1156:	70 40       	sbci	r23, 0x00	; 0
    1158:	01 90       	ld	r0, Z+
    115a:	01 10       	cpse	r0, r1
    115c:	d8 f7       	brcc	.-10     	; 0x1154 <strnlen+0x2>
    115e:	80 95       	com	r24
    1160:	90 95       	com	r25
    1162:	8e 0f       	add	r24, r30
    1164:	9f 1f       	adc	r25, r31
    1166:	08 95       	ret

00001168 <fputc>:
    1168:	0f 93       	push	r16
    116a:	1f 93       	push	r17
    116c:	cf 93       	push	r28
    116e:	df 93       	push	r29
    1170:	18 2f       	mov	r17, r24
    1172:	09 2f       	mov	r16, r25
    1174:	eb 01       	movw	r28, r22
    1176:	8b 81       	ldd	r24, Y+3	; 0x03
    1178:	81 fd       	sbrc	r24, 1
    117a:	03 c0       	rjmp	.+6      	; 0x1182 <fputc+0x1a>
    117c:	8f ef       	ldi	r24, 0xFF	; 255
    117e:	9f ef       	ldi	r25, 0xFF	; 255
    1180:	20 c0       	rjmp	.+64     	; 0x11c2 <fputc+0x5a>
    1182:	82 ff       	sbrs	r24, 2
    1184:	10 c0       	rjmp	.+32     	; 0x11a6 <fputc+0x3e>
    1186:	4e 81       	ldd	r20, Y+6	; 0x06
    1188:	5f 81       	ldd	r21, Y+7	; 0x07
    118a:	2c 81       	ldd	r18, Y+4	; 0x04
    118c:	3d 81       	ldd	r19, Y+5	; 0x05
    118e:	42 17       	cp	r20, r18
    1190:	53 07       	cpc	r21, r19
    1192:	7c f4       	brge	.+30     	; 0x11b2 <fputc+0x4a>
    1194:	e8 81       	ld	r30, Y
    1196:	f9 81       	ldd	r31, Y+1	; 0x01
    1198:	9f 01       	movw	r18, r30
    119a:	2f 5f       	subi	r18, 0xFF	; 255
    119c:	3f 4f       	sbci	r19, 0xFF	; 255
    119e:	39 83       	std	Y+1, r19	; 0x01
    11a0:	28 83       	st	Y, r18
    11a2:	10 83       	st	Z, r17
    11a4:	06 c0       	rjmp	.+12     	; 0x11b2 <fputc+0x4a>
    11a6:	e8 85       	ldd	r30, Y+8	; 0x08
    11a8:	f9 85       	ldd	r31, Y+9	; 0x09
    11aa:	81 2f       	mov	r24, r17
    11ac:	19 95       	eicall
    11ae:	89 2b       	or	r24, r25
    11b0:	29 f7       	brne	.-54     	; 0x117c <fputc+0x14>
    11b2:	2e 81       	ldd	r18, Y+6	; 0x06
    11b4:	3f 81       	ldd	r19, Y+7	; 0x07
    11b6:	2f 5f       	subi	r18, 0xFF	; 255
    11b8:	3f 4f       	sbci	r19, 0xFF	; 255
    11ba:	3f 83       	std	Y+7, r19	; 0x07
    11bc:	2e 83       	std	Y+6, r18	; 0x06
    11be:	81 2f       	mov	r24, r17
    11c0:	90 2f       	mov	r25, r16
    11c2:	df 91       	pop	r29
    11c4:	cf 91       	pop	r28
    11c6:	1f 91       	pop	r17
    11c8:	0f 91       	pop	r16
    11ca:	08 95       	ret

000011cc <__ultoa_invert>:
    11cc:	fa 01       	movw	r30, r20
    11ce:	aa 27       	eor	r26, r26
    11d0:	28 30       	cpi	r18, 0x08	; 8
    11d2:	51 f1       	breq	.+84     	; 0x1228 <__ultoa_invert+0x5c>
    11d4:	20 31       	cpi	r18, 0x10	; 16
    11d6:	81 f1       	breq	.+96     	; 0x1238 <__ultoa_invert+0x6c>
    11d8:	e8 94       	clt
    11da:	6f 93       	push	r22
    11dc:	6e 7f       	andi	r22, 0xFE	; 254
    11de:	6e 5f       	subi	r22, 0xFE	; 254
    11e0:	7f 4f       	sbci	r23, 0xFF	; 255
    11e2:	8f 4f       	sbci	r24, 0xFF	; 255
    11e4:	9f 4f       	sbci	r25, 0xFF	; 255
    11e6:	af 4f       	sbci	r26, 0xFF	; 255
    11e8:	b1 e0       	ldi	r27, 0x01	; 1
    11ea:	3e d0       	rcall	.+124    	; 0x1268 <__ultoa_invert+0x9c>
    11ec:	b4 e0       	ldi	r27, 0x04	; 4
    11ee:	3c d0       	rcall	.+120    	; 0x1268 <__ultoa_invert+0x9c>
    11f0:	67 0f       	add	r22, r23
    11f2:	78 1f       	adc	r23, r24
    11f4:	89 1f       	adc	r24, r25
    11f6:	9a 1f       	adc	r25, r26
    11f8:	a1 1d       	adc	r26, r1
    11fa:	68 0f       	add	r22, r24
    11fc:	79 1f       	adc	r23, r25
    11fe:	8a 1f       	adc	r24, r26
    1200:	91 1d       	adc	r25, r1
    1202:	a1 1d       	adc	r26, r1
    1204:	6a 0f       	add	r22, r26
    1206:	71 1d       	adc	r23, r1
    1208:	81 1d       	adc	r24, r1
    120a:	91 1d       	adc	r25, r1
    120c:	a1 1d       	adc	r26, r1
    120e:	20 d0       	rcall	.+64     	; 0x1250 <__ultoa_invert+0x84>
    1210:	09 f4       	brne	.+2      	; 0x1214 <__ultoa_invert+0x48>
    1212:	68 94       	set
    1214:	3f 91       	pop	r19
    1216:	2a e0       	ldi	r18, 0x0A	; 10
    1218:	26 9f       	mul	r18, r22
    121a:	11 24       	eor	r1, r1
    121c:	30 19       	sub	r19, r0
    121e:	30 5d       	subi	r19, 0xD0	; 208
    1220:	31 93       	st	Z+, r19
    1222:	de f6       	brtc	.-74     	; 0x11da <__ultoa_invert+0xe>
    1224:	cf 01       	movw	r24, r30
    1226:	08 95       	ret
    1228:	46 2f       	mov	r20, r22
    122a:	47 70       	andi	r20, 0x07	; 7
    122c:	40 5d       	subi	r20, 0xD0	; 208
    122e:	41 93       	st	Z+, r20
    1230:	b3 e0       	ldi	r27, 0x03	; 3
    1232:	0f d0       	rcall	.+30     	; 0x1252 <__ultoa_invert+0x86>
    1234:	c9 f7       	brne	.-14     	; 0x1228 <__ultoa_invert+0x5c>
    1236:	f6 cf       	rjmp	.-20     	; 0x1224 <__ultoa_invert+0x58>
    1238:	46 2f       	mov	r20, r22
    123a:	4f 70       	andi	r20, 0x0F	; 15
    123c:	40 5d       	subi	r20, 0xD0	; 208
    123e:	4a 33       	cpi	r20, 0x3A	; 58
    1240:	18 f0       	brcs	.+6      	; 0x1248 <__ultoa_invert+0x7c>
    1242:	49 5d       	subi	r20, 0xD9	; 217
    1244:	31 fd       	sbrc	r19, 1
    1246:	40 52       	subi	r20, 0x20	; 32
    1248:	41 93       	st	Z+, r20
    124a:	02 d0       	rcall	.+4      	; 0x1250 <__ultoa_invert+0x84>
    124c:	a9 f7       	brne	.-22     	; 0x1238 <__ultoa_invert+0x6c>
    124e:	ea cf       	rjmp	.-44     	; 0x1224 <__ultoa_invert+0x58>
    1250:	b4 e0       	ldi	r27, 0x04	; 4
    1252:	a6 95       	lsr	r26
    1254:	97 95       	ror	r25
    1256:	87 95       	ror	r24
    1258:	77 95       	ror	r23
    125a:	67 95       	ror	r22
    125c:	ba 95       	dec	r27
    125e:	c9 f7       	brne	.-14     	; 0x1252 <__ultoa_invert+0x86>
    1260:	00 97       	sbiw	r24, 0x00	; 0
    1262:	61 05       	cpc	r22, r1
    1264:	71 05       	cpc	r23, r1
    1266:	08 95       	ret
    1268:	9b 01       	movw	r18, r22
    126a:	ac 01       	movw	r20, r24
    126c:	0a 2e       	mov	r0, r26
    126e:	06 94       	lsr	r0
    1270:	57 95       	ror	r21
    1272:	47 95       	ror	r20
    1274:	37 95       	ror	r19
    1276:	27 95       	ror	r18
    1278:	ba 95       	dec	r27
    127a:	c9 f7       	brne	.-14     	; 0x126e <__ultoa_invert+0xa2>
    127c:	62 0f       	add	r22, r18
    127e:	73 1f       	adc	r23, r19
    1280:	84 1f       	adc	r24, r20
    1282:	95 1f       	adc	r25, r21
    1284:	a0 1d       	adc	r26, r0
    1286:	08 95       	ret

00001288 <_exit>:
    1288:	f8 94       	cli

0000128a <__stop_program>:
    128a:	ff cf       	rjmp	.-2      	; 0x128a <__stop_program>
