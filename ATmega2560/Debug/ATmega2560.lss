
ATmega2560.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001ce  00800200  00000ce4  00000d78  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ce4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  008003ce  008003ce  00000f46  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000f46  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000118  00000000  00000000  00000fa2  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001244  00000000  00000000  000010ba  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000080d  00000000  00000000  000022fe  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000a0c  00000000  00000000  00002b0b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000029c  00000000  00000000  00003518  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003ad  00000000  00000000  000037b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000719  00000000  00000000  00003b61  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000c8  00000000  00000000  0000427a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	b1 c0       	rjmp	.+354    	; 0x170 <__vector_3>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	13 e0       	ldi	r17, 0x03	; 3
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e4 ee       	ldi	r30, 0xE4	; 228
  fc:	fc e0       	ldi	r31, 0x0C	; 12
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	ae 3c       	cpi	r26, 0xCE	; 206
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	23 e0       	ldi	r18, 0x03	; 3
 110:	ae ec       	ldi	r26, 0xCE	; 206
 112:	b3 e0       	ldi	r27, 0x03	; 3
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a9 3d       	cpi	r26, 0xD9	; 217
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	1e d1       	rcall	.+572    	; 0x35c <main>
 120:	df c5       	rjmp	.+3006   	; 0xce0 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <CAN_init>:
			CAN_msg_receive(msg, MCP_RXB1CTRL);
			interrupt_flag = no_flag;
			printf("interrupt handled 2\n");
			break;
		default:
		printf("no interrupt 2\n");
 124:	40 e6       	ldi	r20, 0x60	; 96
 126:	60 e6       	ldi	r22, 0x60	; 96
 128:	80 e6       	ldi	r24, 0x60	; 96
 12a:	bb d0       	rcall	.+374    	; 0x2a2 <MCP_bit_modify>
 12c:	40 e6       	ldi	r20, 0x60	; 96
 12e:	60 e6       	ldi	r22, 0x60	; 96
 130:	80 e7       	ldi	r24, 0x70	; 112
 132:	b7 d0       	rcall	.+366    	; 0x2a2 <MCP_bit_modify>
 134:	44 e0       	ldi	r20, 0x04	; 4
 136:	64 e0       	ldi	r22, 0x04	; 4
 138:	80 e6       	ldi	r24, 0x60	; 96
 13a:	b3 d0       	rcall	.+358    	; 0x2a2 <MCP_bit_modify>
 13c:	44 e0       	ldi	r20, 0x04	; 4
 13e:	64 e0       	ldi	r22, 0x04	; 4
 140:	80 e7       	ldi	r24, 0x70	; 112
 142:	af d0       	rcall	.+350    	; 0x2a2 <MCP_bit_modify>
 144:	40 e0       	ldi	r20, 0x00	; 0
 146:	60 ee       	ldi	r22, 0xE0	; 224
 148:	8f e0       	ldi	r24, 0x0F	; 15
 14a:	ab d0       	rcall	.+342    	; 0x2a2 <MCP_bit_modify>
 14c:	8e e0       	ldi	r24, 0x0E	; 14
 14e:	54 d0       	rcall	.+168    	; 0x1f8 <MCP_read>
 150:	80 7e       	andi	r24, 0xE0	; 224
 152:	21 f0       	breq	.+8      	; 0x15c <CAN_init+0x38>
 154:	86 e0       	ldi	r24, 0x06	; 6
 156:	92 e0       	ldi	r25, 0x02	; 2
 158:	ba c1       	rjmp	.+884    	; 0x4ce <puts>
 15a:	08 95       	ret
 15c:	63 e0       	ldi	r22, 0x03	; 3
 15e:	8b e2       	ldi	r24, 0x2B	; 43
 160:	8d d0       	rcall	.+282    	; 0x27c <MCP_write>
 162:	e9 e6       	ldi	r30, 0x69	; 105
 164:	f0 e0       	ldi	r31, 0x00	; 0
 166:	80 81       	ld	r24, Z
 168:	80 62       	ori	r24, 0x20	; 32
 16a:	80 83       	st	Z, r24
 16c:	ea 9a       	sbi	0x1d, 2	; 29
 16e:	08 95       	ret

00000170 <__vector_3>:
	
}
#endif

#if defined(__AVR_ATmega2560__)
ISR(INT2_vect){
 170:	1f 92       	push	r1
 172:	0f 92       	push	r0
 174:	0f b6       	in	r0, 0x3f	; 63
 176:	0f 92       	push	r0
 178:	11 24       	eor	r1, r1
 17a:	0b b6       	in	r0, 0x3b	; 59
 17c:	0f 92       	push	r0
 17e:	2f 93       	push	r18
 180:	3f 93       	push	r19
 182:	4f 93       	push	r20
 184:	5f 93       	push	r21
 186:	6f 93       	push	r22
 188:	7f 93       	push	r23
 18a:	8f 93       	push	r24
 18c:	9f 93       	push	r25
 18e:	af 93       	push	r26
 190:	bf 93       	push	r27
 192:	ef 93       	push	r30
 194:	ff 93       	push	r31
	uint8_t interrupt = MCP_read(MCP_CANINTF);
 196:	8c e2       	ldi	r24, 0x2C	; 44
 198:	2f d0       	rcall	.+94     	; 0x1f8 <MCP_read>

	if (interrupt & MCP_RX0IF){
 19a:	80 ff       	sbrs	r24, 0
 19c:	08 c0       	rjmp	.+16     	; 0x1ae <__vector_3+0x3e>
		interrupt_flag = RX0;
 19e:	81 e0       	ldi	r24, 0x01	; 1
 1a0:	80 93 ce 03 	sts	0x03CE, r24
		// clear CANINTF.RX0IF
		MCP_bit_modify(MCP_CANINTF, 0x01, 0x00);
 1a4:	40 e0       	ldi	r20, 0x00	; 0
 1a6:	61 e0       	ldi	r22, 0x01	; 1
 1a8:	8c e2       	ldi	r24, 0x2C	; 44
 1aa:	7b d0       	rcall	.+246    	; 0x2a2 <MCP_bit_modify>
 1ac:	09 c0       	rjmp	.+18     	; 0x1c0 <__vector_3+0x50>
	}
	else if (interrupt & MCP_RX1IF){
 1ae:	81 ff       	sbrs	r24, 1
 1b0:	07 c0       	rjmp	.+14     	; 0x1c0 <__vector_3+0x50>
		interrupt_flag = RX1;
 1b2:	82 e0       	ldi	r24, 0x02	; 2
 1b4:	80 93 ce 03 	sts	0x03CE, r24
		// clear CANINTF.RX1IF
		MCP_bit_modify(MCP_CANINTF, 0x02, 0x00);
 1b8:	40 e0       	ldi	r20, 0x00	; 0
 1ba:	62 e0       	ldi	r22, 0x02	; 2
 1bc:	8c e2       	ldi	r24, 0x2C	; 44
 1be:	71 d0       	rcall	.+226    	; 0x2a2 <MCP_bit_modify>
	}
	
}
 1c0:	ff 91       	pop	r31
 1c2:	ef 91       	pop	r30
 1c4:	bf 91       	pop	r27
 1c6:	af 91       	pop	r26
 1c8:	9f 91       	pop	r25
 1ca:	8f 91       	pop	r24
 1cc:	7f 91       	pop	r23
 1ce:	6f 91       	pop	r22
 1d0:	5f 91       	pop	r21
 1d2:	4f 91       	pop	r20
 1d4:	3f 91       	pop	r19
 1d6:	2f 91       	pop	r18
 1d8:	0f 90       	pop	r0
 1da:	0b be       	out	0x3b, r0	; 59
 1dc:	0f 90       	pop	r0
 1de:	0f be       	out	0x3f, r0	; 63
 1e0:	0f 90       	pop	r0
 1e2:	1f 90       	pop	r1
 1e4:	18 95       	reti

000001e6 <MCP_reset>:
	SPI_transmit_receive(MCP_READ_STATUS);
	uint8_t status = SPI_transmit_receive(0);
	SPI_set_ss(1);
	
	return status;
}
 1e6:	80 e0       	ldi	r24, 0x00	; 0
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	85 d0       	rcall	.+266    	; 0x2f6 <SPI_set_ss>
 1ec:	80 ec       	ldi	r24, 0xC0	; 192
 1ee:	77 d0       	rcall	.+238    	; 0x2de <SPI_transmit_receive>
 1f0:	81 e0       	ldi	r24, 0x01	; 1
 1f2:	90 e0       	ldi	r25, 0x00	; 0
 1f4:	80 c0       	rjmp	.+256    	; 0x2f6 <SPI_set_ss>
 1f6:	08 95       	ret

000001f8 <MCP_read>:
 1f8:	cf 93       	push	r28
 1fa:	c8 2f       	mov	r28, r24
 1fc:	80 e0       	ldi	r24, 0x00	; 0
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	7a d0       	rcall	.+244    	; 0x2f6 <SPI_set_ss>
 202:	89 e7       	ldi	r24, 0x79	; 121
 204:	92 e0       	ldi	r25, 0x02	; 2
 206:	63 d1       	rcall	.+710    	; 0x4ce <puts>
 208:	83 e0       	ldi	r24, 0x03	; 3
 20a:	69 d0       	rcall	.+210    	; 0x2de <SPI_transmit_receive>
 20c:	8f e8       	ldi	r24, 0x8F	; 143
 20e:	92 e0       	ldi	r25, 0x02	; 2
 210:	5e d1       	rcall	.+700    	; 0x4ce <puts>
 212:	8c 2f       	mov	r24, r28
 214:	64 d0       	rcall	.+200    	; 0x2de <SPI_transmit_receive>
 216:	85 ea       	ldi	r24, 0xA5	; 165
 218:	92 e0       	ldi	r25, 0x02	; 2
 21a:	59 d1       	rcall	.+690    	; 0x4ce <puts>
 21c:	80 e0       	ldi	r24, 0x00	; 0
 21e:	5f d0       	rcall	.+190    	; 0x2de <SPI_transmit_receive>
 220:	c8 2f       	mov	r28, r24
 222:	8b eb       	ldi	r24, 0xBB	; 187
 224:	92 e0       	ldi	r25, 0x02	; 2
 226:	53 d1       	rcall	.+678    	; 0x4ce <puts>
 228:	81 e0       	ldi	r24, 0x01	; 1
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	64 d0       	rcall	.+200    	; 0x2f6 <SPI_set_ss>
 22e:	8c 2f       	mov	r24, r28
 230:	cf 91       	pop	r28
 232:	08 95       	ret

00000234 <MCP_init>:
 234:	cf 93       	push	r28
 236:	d7 df       	rcall	.-82     	; 0x1e6 <MCP_reset>
 238:	81 ed       	ldi	r24, 0xD1	; 209
 23a:	92 e0       	ldi	r25, 0x02	; 2
 23c:	48 d1       	rcall	.+656    	; 0x4ce <puts>
 23e:	8e e0       	ldi	r24, 0x0E	; 14
 240:	db df       	rcall	.-74     	; 0x1f8 <MCP_read>
 242:	c8 2f       	mov	r28, r24
 244:	87 ee       	ldi	r24, 0xE7	; 231
 246:	92 e0       	ldi	r25, 0x02	; 2
 248:	42 d1       	rcall	.+644    	; 0x4ce <puts>
 24a:	1f 92       	push	r1
 24c:	cf 93       	push	r28
 24e:	2d ef       	ldi	r18, 0xFD	; 253
 250:	32 e0       	ldi	r19, 0x02	; 2
 252:	3f 93       	push	r19
 254:	2f 93       	push	r18
 256:	2a d1       	rcall	.+596    	; 0x4ac <printf>
 258:	c0 7e       	andi	r28, 0xE0	; 224
 25a:	0f 90       	pop	r0
 25c:	0f 90       	pop	r0
 25e:	0f 90       	pop	r0
 260:	0f 90       	pop	r0
 262:	c0 38       	cpi	r28, 0x80	; 128
 264:	29 f0       	breq	.+10     	; 0x270 <MCP_init+0x3c>
 266:	8b e0       	ldi	r24, 0x0B	; 11
 268:	93 e0       	ldi	r25, 0x03	; 3
 26a:	31 d1       	rcall	.+610    	; 0x4ce <puts>
 26c:	81 e0       	ldi	r24, 0x01	; 1
 26e:	04 c0       	rjmp	.+8      	; 0x278 <MCP_init+0x44>
 270:	87 ee       	ldi	r24, 0xE7	; 231
 272:	92 e0       	ldi	r25, 0x02	; 2
 274:	2c d1       	rcall	.+600    	; 0x4ce <puts>
 276:	80 e0       	ldi	r24, 0x00	; 0
 278:	cf 91       	pop	r28
 27a:	08 95       	ret

0000027c <MCP_write>:
 27c:	cf 93       	push	r28
 27e:	df 93       	push	r29
 280:	d8 2f       	mov	r29, r24
 282:	c6 2f       	mov	r28, r22
 284:	80 e0       	ldi	r24, 0x00	; 0
 286:	90 e0       	ldi	r25, 0x00	; 0
 288:	36 d0       	rcall	.+108    	; 0x2f6 <SPI_set_ss>
 28a:	82 e0       	ldi	r24, 0x02	; 2
 28c:	28 d0       	rcall	.+80     	; 0x2de <SPI_transmit_receive>
 28e:	8d 2f       	mov	r24, r29
 290:	26 d0       	rcall	.+76     	; 0x2de <SPI_transmit_receive>
 292:	8c 2f       	mov	r24, r28
 294:	24 d0       	rcall	.+72     	; 0x2de <SPI_transmit_receive>
 296:	81 e0       	ldi	r24, 0x01	; 1
 298:	90 e0       	ldi	r25, 0x00	; 0
 29a:	2d d0       	rcall	.+90     	; 0x2f6 <SPI_set_ss>
 29c:	df 91       	pop	r29
 29e:	cf 91       	pop	r28
 2a0:	08 95       	ret

000002a2 <MCP_bit_modify>:

void MCP_bit_modify( uint8_t address, uint8_t mask, uint8_t data )
{
 2a2:	1f 93       	push	r17
 2a4:	cf 93       	push	r28
 2a6:	df 93       	push	r29
 2a8:	18 2f       	mov	r17, r24
 2aa:	d6 2f       	mov	r29, r22
 2ac:	c4 2f       	mov	r28, r20
	SPI_set_ss(0);
 2ae:	80 e0       	ldi	r24, 0x00	; 0
 2b0:	90 e0       	ldi	r25, 0x00	; 0
 2b2:	21 d0       	rcall	.+66     	; 0x2f6 <SPI_set_ss>
	SPI_transmit_receive(MCP_BITMOD);
 2b4:	85 e0       	ldi	r24, 0x05	; 5
 2b6:	13 d0       	rcall	.+38     	; 0x2de <SPI_transmit_receive>
	
	SPI_transmit_receive(address);
 2b8:	81 2f       	mov	r24, r17
 2ba:	11 d0       	rcall	.+34     	; 0x2de <SPI_transmit_receive>
	SPI_transmit_receive(mask);
 2bc:	8d 2f       	mov	r24, r29
 2be:	0f d0       	rcall	.+30     	; 0x2de <SPI_transmit_receive>
	SPI_transmit_receive(data);
 2c0:	8c 2f       	mov	r24, r28
 2c2:	0d d0       	rcall	.+26     	; 0x2de <SPI_transmit_receive>
	
	SPI_set_ss(1);
 2c4:	81 e0       	ldi	r24, 0x01	; 1
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	16 d0       	rcall	.+44     	; 0x2f6 <SPI_set_ss>
 2ca:	df 91       	pop	r29
 2cc:	cf 91       	pop	r28
 2ce:	1f 91       	pop	r17
 2d0:	08 95       	ret

000002d2 <SPI_init>:
	// Set MOSI, SCK and SS output
	#if defined(__AVR_ATmega162__)
	DDRB |= (1 << DDB5)|(1 << DDB7)|(1 << DDB4);
	#endif
	#if defined(__AVR_ATmega2560__)
	DDRB |= (1 << DDB2)|(1 << DDB1)|(1 << DDB0) | (1 << DDB7);
 2d2:	84 b1       	in	r24, 0x04	; 4
 2d4:	87 68       	ori	r24, 0x87	; 135
 2d6:	84 b9       	out	0x04, r24	; 4
	#endif
	
	// Enable SPI, Master, set clock rate
	SPCR = (1 << SPE)|(1 << MSTR)|(1 << SPR0);
 2d8:	81 e5       	ldi	r24, 0x51	; 81
 2da:	8c bd       	out	0x2c, r24	; 44
 2dc:	08 95       	ret

000002de <SPI_transmit_receive>:
}

uint8_t SPI_transmit_receive(uint8_t data)
{
	// Start transmission (write to data register)
	SPDR = data;
 2de:	8e bd       	out	0x2e, r24	; 46
	// Wait for transmission complete
	printf("Hello from SPI transmit receive 1\n");
 2e0:	8c e3       	ldi	r24, 0x3C	; 60
 2e2:	93 e0       	ldi	r25, 0x03	; 3
 2e4:	f4 d0       	rcall	.+488    	; 0x4ce <puts>
	while(!(SPSR & (1 << SPIF)));
 2e6:	0d b4       	in	r0, 0x2d	; 45
 2e8:	07 fe       	sbrs	r0, 7
 2ea:	fd cf       	rjmp	.-6      	; 0x2e6 <SPI_transmit_receive+0x8>
	printf("Hello from SPI transmit receive 2\n");
 2ec:	8e e5       	ldi	r24, 0x5E	; 94
 2ee:	93 e0       	ldi	r25, 0x03	; 3
 2f0:	ee d0       	rcall	.+476    	; 0x4ce <puts>
	
	return SPDR;
 2f2:	8e b5       	in	r24, 0x2e	; 46
}
 2f4:	08 95       	ret

000002f6 <SPI_set_ss>:
		clear_bit(PORTB, PB4);
	}
	#endif
	
	#if defined(__AVR_ATmega2560__)
	if (val == 1){
 2f6:	81 30       	cpi	r24, 0x01	; 1
 2f8:	91 05       	cpc	r25, r1
 2fa:	11 f4       	brne	.+4      	; 0x300 <SPI_set_ss+0xa>
		set_bit(PORTB, PB7);
 2fc:	2f 9a       	sbi	0x05, 7	; 5
 2fe:	08 95       	ret
	}
	else if (val == 0){
 300:	89 2b       	or	r24, r25
 302:	09 f4       	brne	.+2      	; 0x306 <SPI_set_ss+0x10>
		clear_bit(PORTB, PB7);
 304:	2f 98       	cbi	0x05, 7	; 5
 306:	08 95       	ret

00000308 <UART_Transmit>:

// transmit data
void UART_Transmit (unsigned char data)
{
	// Wait for empty transmit buffer
	while (!( UCSR0A & (1<<UDRE0))); 
 308:	e0 ec       	ldi	r30, 0xC0	; 192
 30a:	f0 e0       	ldi	r31, 0x00	; 0
 30c:	90 81       	ld	r25, Z
 30e:	95 ff       	sbrs	r25, 5
 310:	fd cf       	rjmp	.-6      	; 0x30c <UART_Transmit+0x4>
	
	// Put data into buffer, sends the data
	UDR0 = data;  
 312:	80 93 c6 00 	sts	0x00C6, r24
 316:	08 95       	ret

00000318 <UART_Recieve>:

// function to receive data
unsigned char UART_Recieve (void)
{
	//Wait for data to be received
	while(!(UCSR0A & (1<<RXC0)));  
 318:	e0 ec       	ldi	r30, 0xC0	; 192
 31a:	f0 e0       	ldi	r31, 0x00	; 0
 31c:	80 81       	ld	r24, Z
 31e:	88 23       	and	r24, r24
 320:	ec f7       	brge	.-6      	; 0x31c <UART_Recieve+0x4>
	
	//Get and return received data from buffer
	return UDR0;  
 322:	80 91 c6 00 	lds	r24, 0x00C6
 326:	08 95       	ret

00000328 <UART_Init>:

void UART_Init( unsigned int ubrr ){
	/* 
	Set baud rate
	 */
	UBRR0H |= (unsigned char)(ubrr>>8);
 328:	e5 ec       	ldi	r30, 0xC5	; 197
 32a:	f0 e0       	ldi	r31, 0x00	; 0
 32c:	20 81       	ld	r18, Z
 32e:	92 2b       	or	r25, r18
 330:	90 83       	st	Z, r25
	UBRR0L |= (unsigned char)ubrr;
 332:	e4 ec       	ldi	r30, 0xC4	; 196
 334:	f0 e0       	ldi	r31, 0x00	; 0
 336:	90 81       	ld	r25, Z
 338:	89 2b       	or	r24, r25
 33a:	80 83       	st	Z, r24
	/* 
	Enable receiver and transmitter
	 */
	UCSR0B |= (1<<RXEN0)|(1<<TXEN0);
 33c:	e1 ec       	ldi	r30, 0xC1	; 193
 33e:	f0 e0       	ldi	r31, 0x00	; 0
 340:	80 81       	ld	r24, Z
 342:	88 61       	ori	r24, 0x18	; 24
 344:	80 83       	st	Z, r24
	 */
	#if defined(__AVR_ATmega162__)
	UCSR0C |= (1<<URSEL0)|(1<<USBS0)|(1<<UCSZ00)|(1<<UCSZ01);
	#endif
	#if defined(__AVR_ATmega2560__)
	UCSR0C |= (1<<USBS0)|(1<<UCSZ00)|(1<<UCSZ01);
 346:	e2 ec       	ldi	r30, 0xC2	; 194
 348:	f0 e0       	ldi	r31, 0x00	; 0
 34a:	80 81       	ld	r24, Z
 34c:	8e 60       	ori	r24, 0x0E	; 14
 34e:	80 83       	st	Z, r24
	#endif
	
	fdevopen(&UART_Transmit, &UART_Recieve);
 350:	6c e8       	ldi	r22, 0x8C	; 140
 352:	71 e0       	ldi	r23, 0x01	; 1
 354:	84 e8       	ldi	r24, 0x84	; 132
 356:	91 e0       	ldi	r25, 0x01	; 1
 358:	5f c0       	rjmp	.+190    	; 0x418 <fdevopen>
 35a:	08 95       	ret

0000035c <main>:
#include <avr/io.h>
#include <util/delay.h>
//#include <stdio.h>
#include <avr/interrupt.h>

int main( void ){
 35c:	cf 93       	push	r28
 35e:	df 93       	push	r29
 360:	cd b7       	in	r28, 0x3d	; 61
 362:	de b7       	in	r29, 0x3e	; 62
 364:	2b 97       	sbiw	r28, 0x0b	; 11
 366:	0f b6       	in	r0, 0x3f	; 63
 368:	f8 94       	cli
 36a:	de bf       	out	0x3e, r29	; 62
 36c:	0f be       	out	0x3f, r0	; 63
 36e:	cd bf       	out	0x3d, r28	; 61
	cli();
 370:	f8 94       	cli
	// Initializations
	UART_Init( MYUBRR );
 372:	87 e6       	ldi	r24, 0x67	; 103
 374:	90 e0       	ldi	r25, 0x00	; 0
 376:	d8 df       	rcall	.-80     	; 0x328 <UART_Init>
	SPI_init();
 378:	ac df       	rcall	.-168    	; 0x2d2 <SPI_init>
	MCP_init();
 37a:	5c df       	rcall	.-328    	; 0x234 <MCP_init>
	CAN_init();
 37c:	d3 de       	rcall	.-602    	; 0x124 <CAN_init>
	//while(1){printf("\n\n\nInit done\n");}
	printf("\n\n\nInit done\n");
 37e:	80 e8       	ldi	r24, 0x80	; 128
 380:	93 e0       	ldi	r25, 0x03	; 3
 382:	a5 d0       	rcall	.+330    	; 0x4ce <puts>
	sei();
 384:	78 94       	sei
	can_msg send;
	send.id = ATmega2560_ID;
 386:	82 e0       	ldi	r24, 0x02	; 2
 388:	90 e0       	ldi	r25, 0x00	; 0
 38a:	9a 83       	std	Y+2, r25	; 0x02
 38c:	89 83       	std	Y+1, r24	; 0x01
	send.length = 4;
 38e:	84 e0       	ldi	r24, 0x04	; 4
 390:	8b 83       	std	Y+3, r24	; 0x03
	send.data[0] = 'H';
 392:	88 e4       	ldi	r24, 0x48	; 72
 394:	8c 83       	std	Y+4, r24	; 0x04
	send.data[1] = 'e';
 396:	85 e6       	ldi	r24, 0x65	; 101
 398:	8d 83       	std	Y+5, r24	; 0x05
	send.data[2] = 'i';
 39a:	89 e6       	ldi	r24, 0x69	; 105
 39c:	8e 83       	std	Y+6, r24	; 0x06
	send.data[3] = '\0';
 39e:	1f 82       	std	Y+7, r1	; 0x07
		//CAN_handle_interrupt(&receive);
		//printf("Message received\n");
		//printf("\n\nSent message: %s \t Received message: %s \n", send.data, receive.data);
		//printf("Sent id: %d \t Received id: %d \n", send.id, receive.id);
		//printf("Sent length: %d \t Received length: %d \n", send.length, receive.length);
		printf("\n\nSent message: %s \n", send.data);
 3a0:	5e 01       	movw	r10, r28
 3a2:	24 e0       	ldi	r18, 0x04	; 4
 3a4:	a2 0e       	add	r10, r18
 3a6:	b1 1c       	adc	r11, r1
 3a8:	0f 2e       	mov	r0, r31
 3aa:	f8 e9       	ldi	r31, 0x98	; 152
 3ac:	cf 2e       	mov	r12, r31
 3ae:	f3 e0       	ldi	r31, 0x03	; 3
 3b0:	df 2e       	mov	r13, r31
 3b2:	f0 2d       	mov	r31, r0
		printf("Sent id: %d \n", send.id);
 3b4:	0f 2e       	mov	r0, r31
 3b6:	fd ea       	ldi	r31, 0xAD	; 173
 3b8:	ef 2e       	mov	r14, r31
 3ba:	f3 e0       	ldi	r31, 0x03	; 3
 3bc:	ff 2e       	mov	r15, r31
 3be:	f0 2d       	mov	r31, r0
		printf("Sent length: %d  \n", send.length);
 3c0:	0b eb       	ldi	r16, 0xBB	; 187
 3c2:	13 e0       	ldi	r17, 0x03	; 3
	send.data[2] = 'i';
	send.data[3] = '\0';
	can_msg receive;
	
	while(1){
		printf("While loop\n");
 3c4:	8d e8       	ldi	r24, 0x8D	; 141
 3c6:	93 e0       	ldi	r25, 0x03	; 3
 3c8:	82 d0       	rcall	.+260    	; 0x4ce <puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3ca:	8f e1       	ldi	r24, 0x1F	; 31
 3cc:	93 e0       	ldi	r25, 0x03	; 3
 3ce:	01 97       	sbiw	r24, 0x01	; 1
 3d0:	f1 f7       	brne	.-4      	; 0x3ce <main+0x72>
 3d2:	00 c0       	rjmp	.+0      	; 0x3d4 <main+0x78>
 3d4:	00 00       	nop
		//CAN_handle_interrupt(&receive);
		//printf("Message received\n");
		//printf("\n\nSent message: %s \t Received message: %s \n", send.data, receive.data);
		//printf("Sent id: %d \t Received id: %d \n", send.id, receive.id);
		//printf("Sent length: %d \t Received length: %d \n", send.length, receive.length);
		printf("\n\nSent message: %s \n", send.data);
 3d6:	bf 92       	push	r11
 3d8:	af 92       	push	r10
 3da:	df 92       	push	r13
 3dc:	cf 92       	push	r12
 3de:	66 d0       	rcall	.+204    	; 0x4ac <printf>
		printf("Sent id: %d \n", send.id);
 3e0:	8a 81       	ldd	r24, Y+2	; 0x02
 3e2:	8f 93       	push	r24
 3e4:	89 81       	ldd	r24, Y+1	; 0x01
 3e6:	8f 93       	push	r24
 3e8:	ff 92       	push	r15
 3ea:	ef 92       	push	r14
 3ec:	5f d0       	rcall	.+190    	; 0x4ac <printf>
		printf("Sent length: %d  \n", send.length);
 3ee:	8b 81       	ldd	r24, Y+3	; 0x03
 3f0:	1f 92       	push	r1
 3f2:	8f 93       	push	r24
 3f4:	1f 93       	push	r17
 3f6:	0f 93       	push	r16
 3f8:	59 d0       	rcall	.+178    	; 0x4ac <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3fa:	9f ef       	ldi	r25, 0xFF	; 255
 3fc:	27 ea       	ldi	r18, 0xA7	; 167
 3fe:	81 e6       	ldi	r24, 0x61	; 97
 400:	91 50       	subi	r25, 0x01	; 1
 402:	20 40       	sbci	r18, 0x00	; 0
 404:	80 40       	sbci	r24, 0x00	; 0
 406:	e1 f7       	brne	.-8      	; 0x400 <main+0xa4>
 408:	00 c0       	rjmp	.+0      	; 0x40a <main+0xae>
 40a:	00 00       	nop
 40c:	0f b6       	in	r0, 0x3f	; 63
 40e:	f8 94       	cli
 410:	de bf       	out	0x3e, r29	; 62
 412:	0f be       	out	0x3f, r0	; 63
 414:	cd bf       	out	0x3d, r28	; 61
 416:	d6 cf       	rjmp	.-84     	; 0x3c4 <main+0x68>

00000418 <fdevopen>:
 418:	0f 93       	push	r16
 41a:	1f 93       	push	r17
 41c:	cf 93       	push	r28
 41e:	df 93       	push	r29
 420:	ec 01       	movw	r28, r24
 422:	8b 01       	movw	r16, r22
 424:	00 97       	sbiw	r24, 0x00	; 0
 426:	31 f4       	brne	.+12     	; 0x434 <fdevopen+0x1c>
 428:	61 15       	cp	r22, r1
 42a:	71 05       	cpc	r23, r1
 42c:	19 f4       	brne	.+6      	; 0x434 <fdevopen+0x1c>
 42e:	80 e0       	ldi	r24, 0x00	; 0
 430:	90 e0       	ldi	r25, 0x00	; 0
 432:	37 c0       	rjmp	.+110    	; 0x4a2 <fdevopen+0x8a>
 434:	6e e0       	ldi	r22, 0x0E	; 14
 436:	70 e0       	ldi	r23, 0x00	; 0
 438:	81 e0       	ldi	r24, 0x01	; 1
 43a:	90 e0       	ldi	r25, 0x00	; 0
 43c:	63 d2       	rcall	.+1222   	; 0x904 <calloc>
 43e:	fc 01       	movw	r30, r24
 440:	00 97       	sbiw	r24, 0x00	; 0
 442:	a9 f3       	breq	.-22     	; 0x42e <fdevopen+0x16>
 444:	80 e8       	ldi	r24, 0x80	; 128
 446:	83 83       	std	Z+3, r24	; 0x03
 448:	01 15       	cp	r16, r1
 44a:	11 05       	cpc	r17, r1
 44c:	71 f0       	breq	.+28     	; 0x46a <fdevopen+0x52>
 44e:	13 87       	std	Z+11, r17	; 0x0b
 450:	02 87       	std	Z+10, r16	; 0x0a
 452:	81 e8       	ldi	r24, 0x81	; 129
 454:	83 83       	std	Z+3, r24	; 0x03
 456:	80 91 cf 03 	lds	r24, 0x03CF
 45a:	90 91 d0 03 	lds	r25, 0x03D0
 45e:	89 2b       	or	r24, r25
 460:	21 f4       	brne	.+8      	; 0x46a <fdevopen+0x52>
 462:	f0 93 d0 03 	sts	0x03D0, r31
 466:	e0 93 cf 03 	sts	0x03CF, r30
 46a:	20 97       	sbiw	r28, 0x00	; 0
 46c:	c9 f0       	breq	.+50     	; 0x4a0 <fdevopen+0x88>
 46e:	d1 87       	std	Z+9, r29	; 0x09
 470:	c0 87       	std	Z+8, r28	; 0x08
 472:	83 81       	ldd	r24, Z+3	; 0x03
 474:	82 60       	ori	r24, 0x02	; 2
 476:	83 83       	std	Z+3, r24	; 0x03
 478:	80 91 d1 03 	lds	r24, 0x03D1
 47c:	90 91 d2 03 	lds	r25, 0x03D2
 480:	89 2b       	or	r24, r25
 482:	71 f4       	brne	.+28     	; 0x4a0 <fdevopen+0x88>
 484:	f0 93 d2 03 	sts	0x03D2, r31
 488:	e0 93 d1 03 	sts	0x03D1, r30
 48c:	80 91 d3 03 	lds	r24, 0x03D3
 490:	90 91 d4 03 	lds	r25, 0x03D4
 494:	89 2b       	or	r24, r25
 496:	21 f4       	brne	.+8      	; 0x4a0 <fdevopen+0x88>
 498:	f0 93 d4 03 	sts	0x03D4, r31
 49c:	e0 93 d3 03 	sts	0x03D3, r30
 4a0:	cf 01       	movw	r24, r30
 4a2:	df 91       	pop	r29
 4a4:	cf 91       	pop	r28
 4a6:	1f 91       	pop	r17
 4a8:	0f 91       	pop	r16
 4aa:	08 95       	ret

000004ac <printf>:
 4ac:	cf 93       	push	r28
 4ae:	df 93       	push	r29
 4b0:	cd b7       	in	r28, 0x3d	; 61
 4b2:	de b7       	in	r29, 0x3e	; 62
 4b4:	fe 01       	movw	r30, r28
 4b6:	36 96       	adiw	r30, 0x06	; 6
 4b8:	61 91       	ld	r22, Z+
 4ba:	71 91       	ld	r23, Z+
 4bc:	af 01       	movw	r20, r30
 4be:	80 91 d1 03 	lds	r24, 0x03D1
 4c2:	90 91 d2 03 	lds	r25, 0x03D2
 4c6:	30 d0       	rcall	.+96     	; 0x528 <vfprintf>
 4c8:	df 91       	pop	r29
 4ca:	cf 91       	pop	r28
 4cc:	08 95       	ret

000004ce <puts>:
 4ce:	0f 93       	push	r16
 4d0:	1f 93       	push	r17
 4d2:	cf 93       	push	r28
 4d4:	df 93       	push	r29
 4d6:	e0 91 d1 03 	lds	r30, 0x03D1
 4da:	f0 91 d2 03 	lds	r31, 0x03D2
 4de:	23 81       	ldd	r18, Z+3	; 0x03
 4e0:	21 ff       	sbrs	r18, 1
 4e2:	1b c0       	rjmp	.+54     	; 0x51a <puts+0x4c>
 4e4:	ec 01       	movw	r28, r24
 4e6:	00 e0       	ldi	r16, 0x00	; 0
 4e8:	10 e0       	ldi	r17, 0x00	; 0
 4ea:	89 91       	ld	r24, Y+
 4ec:	60 91 d1 03 	lds	r22, 0x03D1
 4f0:	70 91 d2 03 	lds	r23, 0x03D2
 4f4:	db 01       	movw	r26, r22
 4f6:	18 96       	adiw	r26, 0x08	; 8
 4f8:	ed 91       	ld	r30, X+
 4fa:	fc 91       	ld	r31, X
 4fc:	19 97       	sbiw	r26, 0x09	; 9
 4fe:	88 23       	and	r24, r24
 500:	31 f0       	breq	.+12     	; 0x50e <puts+0x40>
 502:	19 95       	eicall
 504:	89 2b       	or	r24, r25
 506:	89 f3       	breq	.-30     	; 0x4ea <puts+0x1c>
 508:	0f ef       	ldi	r16, 0xFF	; 255
 50a:	1f ef       	ldi	r17, 0xFF	; 255
 50c:	ee cf       	rjmp	.-36     	; 0x4ea <puts+0x1c>
 50e:	8a e0       	ldi	r24, 0x0A	; 10
 510:	19 95       	eicall
 512:	89 2b       	or	r24, r25
 514:	11 f4       	brne	.+4      	; 0x51a <puts+0x4c>
 516:	c8 01       	movw	r24, r16
 518:	02 c0       	rjmp	.+4      	; 0x51e <puts+0x50>
 51a:	8f ef       	ldi	r24, 0xFF	; 255
 51c:	9f ef       	ldi	r25, 0xFF	; 255
 51e:	df 91       	pop	r29
 520:	cf 91       	pop	r28
 522:	1f 91       	pop	r17
 524:	0f 91       	pop	r16
 526:	08 95       	ret

00000528 <vfprintf>:
 528:	2f 92       	push	r2
 52a:	3f 92       	push	r3
 52c:	4f 92       	push	r4
 52e:	5f 92       	push	r5
 530:	6f 92       	push	r6
 532:	7f 92       	push	r7
 534:	8f 92       	push	r8
 536:	9f 92       	push	r9
 538:	af 92       	push	r10
 53a:	bf 92       	push	r11
 53c:	cf 92       	push	r12
 53e:	df 92       	push	r13
 540:	ef 92       	push	r14
 542:	ff 92       	push	r15
 544:	0f 93       	push	r16
 546:	1f 93       	push	r17
 548:	cf 93       	push	r28
 54a:	df 93       	push	r29
 54c:	cd b7       	in	r28, 0x3d	; 61
 54e:	de b7       	in	r29, 0x3e	; 62
 550:	2c 97       	sbiw	r28, 0x0c	; 12
 552:	0f b6       	in	r0, 0x3f	; 63
 554:	f8 94       	cli
 556:	de bf       	out	0x3e, r29	; 62
 558:	0f be       	out	0x3f, r0	; 63
 55a:	cd bf       	out	0x3d, r28	; 61
 55c:	7c 01       	movw	r14, r24
 55e:	6b 01       	movw	r12, r22
 560:	8a 01       	movw	r16, r20
 562:	fc 01       	movw	r30, r24
 564:	17 82       	std	Z+7, r1	; 0x07
 566:	16 82       	std	Z+6, r1	; 0x06
 568:	83 81       	ldd	r24, Z+3	; 0x03
 56a:	81 ff       	sbrs	r24, 1
 56c:	b0 c1       	rjmp	.+864    	; 0x8ce <vfprintf+0x3a6>
 56e:	ce 01       	movw	r24, r28
 570:	01 96       	adiw	r24, 0x01	; 1
 572:	4c 01       	movw	r8, r24
 574:	f7 01       	movw	r30, r14
 576:	93 81       	ldd	r25, Z+3	; 0x03
 578:	f6 01       	movw	r30, r12
 57a:	93 fd       	sbrc	r25, 3
 57c:	85 91       	lpm	r24, Z+
 57e:	93 ff       	sbrs	r25, 3
 580:	81 91       	ld	r24, Z+
 582:	6f 01       	movw	r12, r30
 584:	88 23       	and	r24, r24
 586:	09 f4       	brne	.+2      	; 0x58a <vfprintf+0x62>
 588:	9e c1       	rjmp	.+828    	; 0x8c6 <vfprintf+0x39e>
 58a:	85 32       	cpi	r24, 0x25	; 37
 58c:	39 f4       	brne	.+14     	; 0x59c <vfprintf+0x74>
 58e:	93 fd       	sbrc	r25, 3
 590:	85 91       	lpm	r24, Z+
 592:	93 ff       	sbrs	r25, 3
 594:	81 91       	ld	r24, Z+
 596:	6f 01       	movw	r12, r30
 598:	85 32       	cpi	r24, 0x25	; 37
 59a:	21 f4       	brne	.+8      	; 0x5a4 <vfprintf+0x7c>
 59c:	b7 01       	movw	r22, r14
 59e:	90 e0       	ldi	r25, 0x00	; 0
 5a0:	0f d3       	rcall	.+1566   	; 0xbc0 <fputc>
 5a2:	e8 cf       	rjmp	.-48     	; 0x574 <vfprintf+0x4c>
 5a4:	51 2c       	mov	r5, r1
 5a6:	31 2c       	mov	r3, r1
 5a8:	20 e0       	ldi	r18, 0x00	; 0
 5aa:	20 32       	cpi	r18, 0x20	; 32
 5ac:	a0 f4       	brcc	.+40     	; 0x5d6 <vfprintf+0xae>
 5ae:	8b 32       	cpi	r24, 0x2B	; 43
 5b0:	69 f0       	breq	.+26     	; 0x5cc <vfprintf+0xa4>
 5b2:	30 f4       	brcc	.+12     	; 0x5c0 <vfprintf+0x98>
 5b4:	80 32       	cpi	r24, 0x20	; 32
 5b6:	59 f0       	breq	.+22     	; 0x5ce <vfprintf+0xa6>
 5b8:	83 32       	cpi	r24, 0x23	; 35
 5ba:	69 f4       	brne	.+26     	; 0x5d6 <vfprintf+0xae>
 5bc:	20 61       	ori	r18, 0x10	; 16
 5be:	2c c0       	rjmp	.+88     	; 0x618 <vfprintf+0xf0>
 5c0:	8d 32       	cpi	r24, 0x2D	; 45
 5c2:	39 f0       	breq	.+14     	; 0x5d2 <vfprintf+0xaa>
 5c4:	80 33       	cpi	r24, 0x30	; 48
 5c6:	39 f4       	brne	.+14     	; 0x5d6 <vfprintf+0xae>
 5c8:	21 60       	ori	r18, 0x01	; 1
 5ca:	26 c0       	rjmp	.+76     	; 0x618 <vfprintf+0xf0>
 5cc:	22 60       	ori	r18, 0x02	; 2
 5ce:	24 60       	ori	r18, 0x04	; 4
 5d0:	23 c0       	rjmp	.+70     	; 0x618 <vfprintf+0xf0>
 5d2:	28 60       	ori	r18, 0x08	; 8
 5d4:	21 c0       	rjmp	.+66     	; 0x618 <vfprintf+0xf0>
 5d6:	27 fd       	sbrc	r18, 7
 5d8:	27 c0       	rjmp	.+78     	; 0x628 <vfprintf+0x100>
 5da:	30 ed       	ldi	r19, 0xD0	; 208
 5dc:	38 0f       	add	r19, r24
 5de:	3a 30       	cpi	r19, 0x0A	; 10
 5e0:	78 f4       	brcc	.+30     	; 0x600 <vfprintf+0xd8>
 5e2:	26 ff       	sbrs	r18, 6
 5e4:	06 c0       	rjmp	.+12     	; 0x5f2 <vfprintf+0xca>
 5e6:	fa e0       	ldi	r31, 0x0A	; 10
 5e8:	5f 9e       	mul	r5, r31
 5ea:	30 0d       	add	r19, r0
 5ec:	11 24       	eor	r1, r1
 5ee:	53 2e       	mov	r5, r19
 5f0:	13 c0       	rjmp	.+38     	; 0x618 <vfprintf+0xf0>
 5f2:	8a e0       	ldi	r24, 0x0A	; 10
 5f4:	38 9e       	mul	r3, r24
 5f6:	30 0d       	add	r19, r0
 5f8:	11 24       	eor	r1, r1
 5fa:	33 2e       	mov	r3, r19
 5fc:	20 62       	ori	r18, 0x20	; 32
 5fe:	0c c0       	rjmp	.+24     	; 0x618 <vfprintf+0xf0>
 600:	8e 32       	cpi	r24, 0x2E	; 46
 602:	21 f4       	brne	.+8      	; 0x60c <vfprintf+0xe4>
 604:	26 fd       	sbrc	r18, 6
 606:	5f c1       	rjmp	.+702    	; 0x8c6 <vfprintf+0x39e>
 608:	20 64       	ori	r18, 0x40	; 64
 60a:	06 c0       	rjmp	.+12     	; 0x618 <vfprintf+0xf0>
 60c:	8c 36       	cpi	r24, 0x6C	; 108
 60e:	11 f4       	brne	.+4      	; 0x614 <vfprintf+0xec>
 610:	20 68       	ori	r18, 0x80	; 128
 612:	02 c0       	rjmp	.+4      	; 0x618 <vfprintf+0xf0>
 614:	88 36       	cpi	r24, 0x68	; 104
 616:	41 f4       	brne	.+16     	; 0x628 <vfprintf+0x100>
 618:	f6 01       	movw	r30, r12
 61a:	93 fd       	sbrc	r25, 3
 61c:	85 91       	lpm	r24, Z+
 61e:	93 ff       	sbrs	r25, 3
 620:	81 91       	ld	r24, Z+
 622:	6f 01       	movw	r12, r30
 624:	81 11       	cpse	r24, r1
 626:	c1 cf       	rjmp	.-126    	; 0x5aa <vfprintf+0x82>
 628:	98 2f       	mov	r25, r24
 62a:	9f 7d       	andi	r25, 0xDF	; 223
 62c:	95 54       	subi	r25, 0x45	; 69
 62e:	93 30       	cpi	r25, 0x03	; 3
 630:	28 f4       	brcc	.+10     	; 0x63c <vfprintf+0x114>
 632:	0c 5f       	subi	r16, 0xFC	; 252
 634:	1f 4f       	sbci	r17, 0xFF	; 255
 636:	ff e3       	ldi	r31, 0x3F	; 63
 638:	f9 83       	std	Y+1, r31	; 0x01
 63a:	0d c0       	rjmp	.+26     	; 0x656 <vfprintf+0x12e>
 63c:	83 36       	cpi	r24, 0x63	; 99
 63e:	31 f0       	breq	.+12     	; 0x64c <vfprintf+0x124>
 640:	83 37       	cpi	r24, 0x73	; 115
 642:	71 f0       	breq	.+28     	; 0x660 <vfprintf+0x138>
 644:	83 35       	cpi	r24, 0x53	; 83
 646:	09 f0       	breq	.+2      	; 0x64a <vfprintf+0x122>
 648:	57 c0       	rjmp	.+174    	; 0x6f8 <vfprintf+0x1d0>
 64a:	21 c0       	rjmp	.+66     	; 0x68e <vfprintf+0x166>
 64c:	f8 01       	movw	r30, r16
 64e:	80 81       	ld	r24, Z
 650:	89 83       	std	Y+1, r24	; 0x01
 652:	0e 5f       	subi	r16, 0xFE	; 254
 654:	1f 4f       	sbci	r17, 0xFF	; 255
 656:	44 24       	eor	r4, r4
 658:	43 94       	inc	r4
 65a:	51 2c       	mov	r5, r1
 65c:	54 01       	movw	r10, r8
 65e:	14 c0       	rjmp	.+40     	; 0x688 <vfprintf+0x160>
 660:	38 01       	movw	r6, r16
 662:	f2 e0       	ldi	r31, 0x02	; 2
 664:	6f 0e       	add	r6, r31
 666:	71 1c       	adc	r7, r1
 668:	f8 01       	movw	r30, r16
 66a:	a0 80       	ld	r10, Z
 66c:	b1 80       	ldd	r11, Z+1	; 0x01
 66e:	26 ff       	sbrs	r18, 6
 670:	03 c0       	rjmp	.+6      	; 0x678 <vfprintf+0x150>
 672:	65 2d       	mov	r22, r5
 674:	70 e0       	ldi	r23, 0x00	; 0
 676:	02 c0       	rjmp	.+4      	; 0x67c <vfprintf+0x154>
 678:	6f ef       	ldi	r22, 0xFF	; 255
 67a:	7f ef       	ldi	r23, 0xFF	; 255
 67c:	c5 01       	movw	r24, r10
 67e:	2c 87       	std	Y+12, r18	; 0x0c
 680:	94 d2       	rcall	.+1320   	; 0xbaa <strnlen>
 682:	2c 01       	movw	r4, r24
 684:	83 01       	movw	r16, r6
 686:	2c 85       	ldd	r18, Y+12	; 0x0c
 688:	2f 77       	andi	r18, 0x7F	; 127
 68a:	22 2e       	mov	r2, r18
 68c:	16 c0       	rjmp	.+44     	; 0x6ba <vfprintf+0x192>
 68e:	38 01       	movw	r6, r16
 690:	f2 e0       	ldi	r31, 0x02	; 2
 692:	6f 0e       	add	r6, r31
 694:	71 1c       	adc	r7, r1
 696:	f8 01       	movw	r30, r16
 698:	a0 80       	ld	r10, Z
 69a:	b1 80       	ldd	r11, Z+1	; 0x01
 69c:	26 ff       	sbrs	r18, 6
 69e:	03 c0       	rjmp	.+6      	; 0x6a6 <vfprintf+0x17e>
 6a0:	65 2d       	mov	r22, r5
 6a2:	70 e0       	ldi	r23, 0x00	; 0
 6a4:	02 c0       	rjmp	.+4      	; 0x6aa <vfprintf+0x182>
 6a6:	6f ef       	ldi	r22, 0xFF	; 255
 6a8:	7f ef       	ldi	r23, 0xFF	; 255
 6aa:	c5 01       	movw	r24, r10
 6ac:	2c 87       	std	Y+12, r18	; 0x0c
 6ae:	6b d2       	rcall	.+1238   	; 0xb86 <strnlen_P>
 6b0:	2c 01       	movw	r4, r24
 6b2:	2c 85       	ldd	r18, Y+12	; 0x0c
 6b4:	20 68       	ori	r18, 0x80	; 128
 6b6:	22 2e       	mov	r2, r18
 6b8:	83 01       	movw	r16, r6
 6ba:	23 fc       	sbrc	r2, 3
 6bc:	19 c0       	rjmp	.+50     	; 0x6f0 <vfprintf+0x1c8>
 6be:	83 2d       	mov	r24, r3
 6c0:	90 e0       	ldi	r25, 0x00	; 0
 6c2:	48 16       	cp	r4, r24
 6c4:	59 06       	cpc	r5, r25
 6c6:	a0 f4       	brcc	.+40     	; 0x6f0 <vfprintf+0x1c8>
 6c8:	b7 01       	movw	r22, r14
 6ca:	80 e2       	ldi	r24, 0x20	; 32
 6cc:	90 e0       	ldi	r25, 0x00	; 0
 6ce:	78 d2       	rcall	.+1264   	; 0xbc0 <fputc>
 6d0:	3a 94       	dec	r3
 6d2:	f5 cf       	rjmp	.-22     	; 0x6be <vfprintf+0x196>
 6d4:	f5 01       	movw	r30, r10
 6d6:	27 fc       	sbrc	r2, 7
 6d8:	85 91       	lpm	r24, Z+
 6da:	27 fe       	sbrs	r2, 7
 6dc:	81 91       	ld	r24, Z+
 6de:	5f 01       	movw	r10, r30
 6e0:	b7 01       	movw	r22, r14
 6e2:	90 e0       	ldi	r25, 0x00	; 0
 6e4:	6d d2       	rcall	.+1242   	; 0xbc0 <fputc>
 6e6:	31 10       	cpse	r3, r1
 6e8:	3a 94       	dec	r3
 6ea:	f1 e0       	ldi	r31, 0x01	; 1
 6ec:	4f 1a       	sub	r4, r31
 6ee:	51 08       	sbc	r5, r1
 6f0:	41 14       	cp	r4, r1
 6f2:	51 04       	cpc	r5, r1
 6f4:	79 f7       	brne	.-34     	; 0x6d4 <vfprintf+0x1ac>
 6f6:	de c0       	rjmp	.+444    	; 0x8b4 <vfprintf+0x38c>
 6f8:	84 36       	cpi	r24, 0x64	; 100
 6fa:	11 f0       	breq	.+4      	; 0x700 <vfprintf+0x1d8>
 6fc:	89 36       	cpi	r24, 0x69	; 105
 6fe:	31 f5       	brne	.+76     	; 0x74c <vfprintf+0x224>
 700:	f8 01       	movw	r30, r16
 702:	27 ff       	sbrs	r18, 7
 704:	07 c0       	rjmp	.+14     	; 0x714 <vfprintf+0x1ec>
 706:	60 81       	ld	r22, Z
 708:	71 81       	ldd	r23, Z+1	; 0x01
 70a:	82 81       	ldd	r24, Z+2	; 0x02
 70c:	93 81       	ldd	r25, Z+3	; 0x03
 70e:	0c 5f       	subi	r16, 0xFC	; 252
 710:	1f 4f       	sbci	r17, 0xFF	; 255
 712:	08 c0       	rjmp	.+16     	; 0x724 <vfprintf+0x1fc>
 714:	60 81       	ld	r22, Z
 716:	71 81       	ldd	r23, Z+1	; 0x01
 718:	88 27       	eor	r24, r24
 71a:	77 fd       	sbrc	r23, 7
 71c:	80 95       	com	r24
 71e:	98 2f       	mov	r25, r24
 720:	0e 5f       	subi	r16, 0xFE	; 254
 722:	1f 4f       	sbci	r17, 0xFF	; 255
 724:	2f 76       	andi	r18, 0x6F	; 111
 726:	b2 2e       	mov	r11, r18
 728:	97 ff       	sbrs	r25, 7
 72a:	09 c0       	rjmp	.+18     	; 0x73e <vfprintf+0x216>
 72c:	90 95       	com	r25
 72e:	80 95       	com	r24
 730:	70 95       	com	r23
 732:	61 95       	neg	r22
 734:	7f 4f       	sbci	r23, 0xFF	; 255
 736:	8f 4f       	sbci	r24, 0xFF	; 255
 738:	9f 4f       	sbci	r25, 0xFF	; 255
 73a:	20 68       	ori	r18, 0x80	; 128
 73c:	b2 2e       	mov	r11, r18
 73e:	2a e0       	ldi	r18, 0x0A	; 10
 740:	30 e0       	ldi	r19, 0x00	; 0
 742:	a4 01       	movw	r20, r8
 744:	6f d2       	rcall	.+1246   	; 0xc24 <__ultoa_invert>
 746:	a8 2e       	mov	r10, r24
 748:	a8 18       	sub	r10, r8
 74a:	43 c0       	rjmp	.+134    	; 0x7d2 <vfprintf+0x2aa>
 74c:	85 37       	cpi	r24, 0x75	; 117
 74e:	29 f4       	brne	.+10     	; 0x75a <vfprintf+0x232>
 750:	2f 7e       	andi	r18, 0xEF	; 239
 752:	b2 2e       	mov	r11, r18
 754:	2a e0       	ldi	r18, 0x0A	; 10
 756:	30 e0       	ldi	r19, 0x00	; 0
 758:	25 c0       	rjmp	.+74     	; 0x7a4 <vfprintf+0x27c>
 75a:	f2 2f       	mov	r31, r18
 75c:	f9 7f       	andi	r31, 0xF9	; 249
 75e:	bf 2e       	mov	r11, r31
 760:	8f 36       	cpi	r24, 0x6F	; 111
 762:	c1 f0       	breq	.+48     	; 0x794 <vfprintf+0x26c>
 764:	18 f4       	brcc	.+6      	; 0x76c <vfprintf+0x244>
 766:	88 35       	cpi	r24, 0x58	; 88
 768:	79 f0       	breq	.+30     	; 0x788 <vfprintf+0x260>
 76a:	ad c0       	rjmp	.+346    	; 0x8c6 <vfprintf+0x39e>
 76c:	80 37       	cpi	r24, 0x70	; 112
 76e:	19 f0       	breq	.+6      	; 0x776 <vfprintf+0x24e>
 770:	88 37       	cpi	r24, 0x78	; 120
 772:	21 f0       	breq	.+8      	; 0x77c <vfprintf+0x254>
 774:	a8 c0       	rjmp	.+336    	; 0x8c6 <vfprintf+0x39e>
 776:	2f 2f       	mov	r18, r31
 778:	20 61       	ori	r18, 0x10	; 16
 77a:	b2 2e       	mov	r11, r18
 77c:	b4 fe       	sbrs	r11, 4
 77e:	0d c0       	rjmp	.+26     	; 0x79a <vfprintf+0x272>
 780:	8b 2d       	mov	r24, r11
 782:	84 60       	ori	r24, 0x04	; 4
 784:	b8 2e       	mov	r11, r24
 786:	09 c0       	rjmp	.+18     	; 0x79a <vfprintf+0x272>
 788:	24 ff       	sbrs	r18, 4
 78a:	0a c0       	rjmp	.+20     	; 0x7a0 <vfprintf+0x278>
 78c:	9f 2f       	mov	r25, r31
 78e:	96 60       	ori	r25, 0x06	; 6
 790:	b9 2e       	mov	r11, r25
 792:	06 c0       	rjmp	.+12     	; 0x7a0 <vfprintf+0x278>
 794:	28 e0       	ldi	r18, 0x08	; 8
 796:	30 e0       	ldi	r19, 0x00	; 0
 798:	05 c0       	rjmp	.+10     	; 0x7a4 <vfprintf+0x27c>
 79a:	20 e1       	ldi	r18, 0x10	; 16
 79c:	30 e0       	ldi	r19, 0x00	; 0
 79e:	02 c0       	rjmp	.+4      	; 0x7a4 <vfprintf+0x27c>
 7a0:	20 e1       	ldi	r18, 0x10	; 16
 7a2:	32 e0       	ldi	r19, 0x02	; 2
 7a4:	f8 01       	movw	r30, r16
 7a6:	b7 fe       	sbrs	r11, 7
 7a8:	07 c0       	rjmp	.+14     	; 0x7b8 <vfprintf+0x290>
 7aa:	60 81       	ld	r22, Z
 7ac:	71 81       	ldd	r23, Z+1	; 0x01
 7ae:	82 81       	ldd	r24, Z+2	; 0x02
 7b0:	93 81       	ldd	r25, Z+3	; 0x03
 7b2:	0c 5f       	subi	r16, 0xFC	; 252
 7b4:	1f 4f       	sbci	r17, 0xFF	; 255
 7b6:	06 c0       	rjmp	.+12     	; 0x7c4 <vfprintf+0x29c>
 7b8:	60 81       	ld	r22, Z
 7ba:	71 81       	ldd	r23, Z+1	; 0x01
 7bc:	80 e0       	ldi	r24, 0x00	; 0
 7be:	90 e0       	ldi	r25, 0x00	; 0
 7c0:	0e 5f       	subi	r16, 0xFE	; 254
 7c2:	1f 4f       	sbci	r17, 0xFF	; 255
 7c4:	a4 01       	movw	r20, r8
 7c6:	2e d2       	rcall	.+1116   	; 0xc24 <__ultoa_invert>
 7c8:	a8 2e       	mov	r10, r24
 7ca:	a8 18       	sub	r10, r8
 7cc:	fb 2d       	mov	r31, r11
 7ce:	ff 77       	andi	r31, 0x7F	; 127
 7d0:	bf 2e       	mov	r11, r31
 7d2:	b6 fe       	sbrs	r11, 6
 7d4:	0b c0       	rjmp	.+22     	; 0x7ec <vfprintf+0x2c4>
 7d6:	2b 2d       	mov	r18, r11
 7d8:	2e 7f       	andi	r18, 0xFE	; 254
 7da:	a5 14       	cp	r10, r5
 7dc:	50 f4       	brcc	.+20     	; 0x7f2 <vfprintf+0x2ca>
 7de:	b4 fe       	sbrs	r11, 4
 7e0:	0a c0       	rjmp	.+20     	; 0x7f6 <vfprintf+0x2ce>
 7e2:	b2 fc       	sbrc	r11, 2
 7e4:	08 c0       	rjmp	.+16     	; 0x7f6 <vfprintf+0x2ce>
 7e6:	2b 2d       	mov	r18, r11
 7e8:	2e 7e       	andi	r18, 0xEE	; 238
 7ea:	05 c0       	rjmp	.+10     	; 0x7f6 <vfprintf+0x2ce>
 7ec:	7a 2c       	mov	r7, r10
 7ee:	2b 2d       	mov	r18, r11
 7f0:	03 c0       	rjmp	.+6      	; 0x7f8 <vfprintf+0x2d0>
 7f2:	7a 2c       	mov	r7, r10
 7f4:	01 c0       	rjmp	.+2      	; 0x7f8 <vfprintf+0x2d0>
 7f6:	75 2c       	mov	r7, r5
 7f8:	24 ff       	sbrs	r18, 4
 7fa:	0d c0       	rjmp	.+26     	; 0x816 <vfprintf+0x2ee>
 7fc:	fe 01       	movw	r30, r28
 7fe:	ea 0d       	add	r30, r10
 800:	f1 1d       	adc	r31, r1
 802:	80 81       	ld	r24, Z
 804:	80 33       	cpi	r24, 0x30	; 48
 806:	11 f4       	brne	.+4      	; 0x80c <vfprintf+0x2e4>
 808:	29 7e       	andi	r18, 0xE9	; 233
 80a:	09 c0       	rjmp	.+18     	; 0x81e <vfprintf+0x2f6>
 80c:	22 ff       	sbrs	r18, 2
 80e:	06 c0       	rjmp	.+12     	; 0x81c <vfprintf+0x2f4>
 810:	73 94       	inc	r7
 812:	73 94       	inc	r7
 814:	04 c0       	rjmp	.+8      	; 0x81e <vfprintf+0x2f6>
 816:	82 2f       	mov	r24, r18
 818:	86 78       	andi	r24, 0x86	; 134
 81a:	09 f0       	breq	.+2      	; 0x81e <vfprintf+0x2f6>
 81c:	73 94       	inc	r7
 81e:	23 fd       	sbrc	r18, 3
 820:	12 c0       	rjmp	.+36     	; 0x846 <vfprintf+0x31e>
 822:	20 ff       	sbrs	r18, 0
 824:	06 c0       	rjmp	.+12     	; 0x832 <vfprintf+0x30a>
 826:	5a 2c       	mov	r5, r10
 828:	73 14       	cp	r7, r3
 82a:	18 f4       	brcc	.+6      	; 0x832 <vfprintf+0x30a>
 82c:	53 0c       	add	r5, r3
 82e:	57 18       	sub	r5, r7
 830:	73 2c       	mov	r7, r3
 832:	73 14       	cp	r7, r3
 834:	60 f4       	brcc	.+24     	; 0x84e <vfprintf+0x326>
 836:	b7 01       	movw	r22, r14
 838:	80 e2       	ldi	r24, 0x20	; 32
 83a:	90 e0       	ldi	r25, 0x00	; 0
 83c:	2c 87       	std	Y+12, r18	; 0x0c
 83e:	c0 d1       	rcall	.+896    	; 0xbc0 <fputc>
 840:	73 94       	inc	r7
 842:	2c 85       	ldd	r18, Y+12	; 0x0c
 844:	f6 cf       	rjmp	.-20     	; 0x832 <vfprintf+0x30a>
 846:	73 14       	cp	r7, r3
 848:	10 f4       	brcc	.+4      	; 0x84e <vfprintf+0x326>
 84a:	37 18       	sub	r3, r7
 84c:	01 c0       	rjmp	.+2      	; 0x850 <vfprintf+0x328>
 84e:	31 2c       	mov	r3, r1
 850:	24 ff       	sbrs	r18, 4
 852:	11 c0       	rjmp	.+34     	; 0x876 <vfprintf+0x34e>
 854:	b7 01       	movw	r22, r14
 856:	80 e3       	ldi	r24, 0x30	; 48
 858:	90 e0       	ldi	r25, 0x00	; 0
 85a:	2c 87       	std	Y+12, r18	; 0x0c
 85c:	b1 d1       	rcall	.+866    	; 0xbc0 <fputc>
 85e:	2c 85       	ldd	r18, Y+12	; 0x0c
 860:	22 ff       	sbrs	r18, 2
 862:	16 c0       	rjmp	.+44     	; 0x890 <vfprintf+0x368>
 864:	21 ff       	sbrs	r18, 1
 866:	03 c0       	rjmp	.+6      	; 0x86e <vfprintf+0x346>
 868:	88 e5       	ldi	r24, 0x58	; 88
 86a:	90 e0       	ldi	r25, 0x00	; 0
 86c:	02 c0       	rjmp	.+4      	; 0x872 <vfprintf+0x34a>
 86e:	88 e7       	ldi	r24, 0x78	; 120
 870:	90 e0       	ldi	r25, 0x00	; 0
 872:	b7 01       	movw	r22, r14
 874:	0c c0       	rjmp	.+24     	; 0x88e <vfprintf+0x366>
 876:	82 2f       	mov	r24, r18
 878:	86 78       	andi	r24, 0x86	; 134
 87a:	51 f0       	breq	.+20     	; 0x890 <vfprintf+0x368>
 87c:	21 fd       	sbrc	r18, 1
 87e:	02 c0       	rjmp	.+4      	; 0x884 <vfprintf+0x35c>
 880:	80 e2       	ldi	r24, 0x20	; 32
 882:	01 c0       	rjmp	.+2      	; 0x886 <vfprintf+0x35e>
 884:	8b e2       	ldi	r24, 0x2B	; 43
 886:	27 fd       	sbrc	r18, 7
 888:	8d e2       	ldi	r24, 0x2D	; 45
 88a:	b7 01       	movw	r22, r14
 88c:	90 e0       	ldi	r25, 0x00	; 0
 88e:	98 d1       	rcall	.+816    	; 0xbc0 <fputc>
 890:	a5 14       	cp	r10, r5
 892:	30 f4       	brcc	.+12     	; 0x8a0 <vfprintf+0x378>
 894:	b7 01       	movw	r22, r14
 896:	80 e3       	ldi	r24, 0x30	; 48
 898:	90 e0       	ldi	r25, 0x00	; 0
 89a:	92 d1       	rcall	.+804    	; 0xbc0 <fputc>
 89c:	5a 94       	dec	r5
 89e:	f8 cf       	rjmp	.-16     	; 0x890 <vfprintf+0x368>
 8a0:	aa 94       	dec	r10
 8a2:	f4 01       	movw	r30, r8
 8a4:	ea 0d       	add	r30, r10
 8a6:	f1 1d       	adc	r31, r1
 8a8:	80 81       	ld	r24, Z
 8aa:	b7 01       	movw	r22, r14
 8ac:	90 e0       	ldi	r25, 0x00	; 0
 8ae:	88 d1       	rcall	.+784    	; 0xbc0 <fputc>
 8b0:	a1 10       	cpse	r10, r1
 8b2:	f6 cf       	rjmp	.-20     	; 0x8a0 <vfprintf+0x378>
 8b4:	33 20       	and	r3, r3
 8b6:	09 f4       	brne	.+2      	; 0x8ba <vfprintf+0x392>
 8b8:	5d ce       	rjmp	.-838    	; 0x574 <vfprintf+0x4c>
 8ba:	b7 01       	movw	r22, r14
 8bc:	80 e2       	ldi	r24, 0x20	; 32
 8be:	90 e0       	ldi	r25, 0x00	; 0
 8c0:	7f d1       	rcall	.+766    	; 0xbc0 <fputc>
 8c2:	3a 94       	dec	r3
 8c4:	f7 cf       	rjmp	.-18     	; 0x8b4 <vfprintf+0x38c>
 8c6:	f7 01       	movw	r30, r14
 8c8:	86 81       	ldd	r24, Z+6	; 0x06
 8ca:	97 81       	ldd	r25, Z+7	; 0x07
 8cc:	02 c0       	rjmp	.+4      	; 0x8d2 <vfprintf+0x3aa>
 8ce:	8f ef       	ldi	r24, 0xFF	; 255
 8d0:	9f ef       	ldi	r25, 0xFF	; 255
 8d2:	2c 96       	adiw	r28, 0x0c	; 12
 8d4:	0f b6       	in	r0, 0x3f	; 63
 8d6:	f8 94       	cli
 8d8:	de bf       	out	0x3e, r29	; 62
 8da:	0f be       	out	0x3f, r0	; 63
 8dc:	cd bf       	out	0x3d, r28	; 61
 8de:	df 91       	pop	r29
 8e0:	cf 91       	pop	r28
 8e2:	1f 91       	pop	r17
 8e4:	0f 91       	pop	r16
 8e6:	ff 90       	pop	r15
 8e8:	ef 90       	pop	r14
 8ea:	df 90       	pop	r13
 8ec:	cf 90       	pop	r12
 8ee:	bf 90       	pop	r11
 8f0:	af 90       	pop	r10
 8f2:	9f 90       	pop	r9
 8f4:	8f 90       	pop	r8
 8f6:	7f 90       	pop	r7
 8f8:	6f 90       	pop	r6
 8fa:	5f 90       	pop	r5
 8fc:	4f 90       	pop	r4
 8fe:	3f 90       	pop	r3
 900:	2f 90       	pop	r2
 902:	08 95       	ret

00000904 <calloc>:
 904:	0f 93       	push	r16
 906:	1f 93       	push	r17
 908:	cf 93       	push	r28
 90a:	df 93       	push	r29
 90c:	86 9f       	mul	r24, r22
 90e:	80 01       	movw	r16, r0
 910:	87 9f       	mul	r24, r23
 912:	10 0d       	add	r17, r0
 914:	96 9f       	mul	r25, r22
 916:	10 0d       	add	r17, r0
 918:	11 24       	eor	r1, r1
 91a:	c8 01       	movw	r24, r16
 91c:	0d d0       	rcall	.+26     	; 0x938 <malloc>
 91e:	ec 01       	movw	r28, r24
 920:	00 97       	sbiw	r24, 0x00	; 0
 922:	21 f0       	breq	.+8      	; 0x92c <calloc+0x28>
 924:	a8 01       	movw	r20, r16
 926:	60 e0       	ldi	r22, 0x00	; 0
 928:	70 e0       	ldi	r23, 0x00	; 0
 92a:	38 d1       	rcall	.+624    	; 0xb9c <memset>
 92c:	ce 01       	movw	r24, r28
 92e:	df 91       	pop	r29
 930:	cf 91       	pop	r28
 932:	1f 91       	pop	r17
 934:	0f 91       	pop	r16
 936:	08 95       	ret

00000938 <malloc>:
 938:	cf 93       	push	r28
 93a:	df 93       	push	r29
 93c:	82 30       	cpi	r24, 0x02	; 2
 93e:	91 05       	cpc	r25, r1
 940:	10 f4       	brcc	.+4      	; 0x946 <malloc+0xe>
 942:	82 e0       	ldi	r24, 0x02	; 2
 944:	90 e0       	ldi	r25, 0x00	; 0
 946:	e0 91 d7 03 	lds	r30, 0x03D7
 94a:	f0 91 d8 03 	lds	r31, 0x03D8
 94e:	20 e0       	ldi	r18, 0x00	; 0
 950:	30 e0       	ldi	r19, 0x00	; 0
 952:	a0 e0       	ldi	r26, 0x00	; 0
 954:	b0 e0       	ldi	r27, 0x00	; 0
 956:	30 97       	sbiw	r30, 0x00	; 0
 958:	39 f1       	breq	.+78     	; 0x9a8 <malloc+0x70>
 95a:	40 81       	ld	r20, Z
 95c:	51 81       	ldd	r21, Z+1	; 0x01
 95e:	48 17       	cp	r20, r24
 960:	59 07       	cpc	r21, r25
 962:	b8 f0       	brcs	.+46     	; 0x992 <malloc+0x5a>
 964:	48 17       	cp	r20, r24
 966:	59 07       	cpc	r21, r25
 968:	71 f4       	brne	.+28     	; 0x986 <malloc+0x4e>
 96a:	82 81       	ldd	r24, Z+2	; 0x02
 96c:	93 81       	ldd	r25, Z+3	; 0x03
 96e:	10 97       	sbiw	r26, 0x00	; 0
 970:	29 f0       	breq	.+10     	; 0x97c <malloc+0x44>
 972:	13 96       	adiw	r26, 0x03	; 3
 974:	9c 93       	st	X, r25
 976:	8e 93       	st	-X, r24
 978:	12 97       	sbiw	r26, 0x02	; 2
 97a:	2c c0       	rjmp	.+88     	; 0x9d4 <malloc+0x9c>
 97c:	90 93 d8 03 	sts	0x03D8, r25
 980:	80 93 d7 03 	sts	0x03D7, r24
 984:	27 c0       	rjmp	.+78     	; 0x9d4 <malloc+0x9c>
 986:	21 15       	cp	r18, r1
 988:	31 05       	cpc	r19, r1
 98a:	31 f0       	breq	.+12     	; 0x998 <malloc+0x60>
 98c:	42 17       	cp	r20, r18
 98e:	53 07       	cpc	r21, r19
 990:	18 f0       	brcs	.+6      	; 0x998 <malloc+0x60>
 992:	a9 01       	movw	r20, r18
 994:	db 01       	movw	r26, r22
 996:	01 c0       	rjmp	.+2      	; 0x99a <malloc+0x62>
 998:	ef 01       	movw	r28, r30
 99a:	9a 01       	movw	r18, r20
 99c:	bd 01       	movw	r22, r26
 99e:	df 01       	movw	r26, r30
 9a0:	02 80       	ldd	r0, Z+2	; 0x02
 9a2:	f3 81       	ldd	r31, Z+3	; 0x03
 9a4:	e0 2d       	mov	r30, r0
 9a6:	d7 cf       	rjmp	.-82     	; 0x956 <malloc+0x1e>
 9a8:	21 15       	cp	r18, r1
 9aa:	31 05       	cpc	r19, r1
 9ac:	f9 f0       	breq	.+62     	; 0x9ec <malloc+0xb4>
 9ae:	28 1b       	sub	r18, r24
 9b0:	39 0b       	sbc	r19, r25
 9b2:	24 30       	cpi	r18, 0x04	; 4
 9b4:	31 05       	cpc	r19, r1
 9b6:	80 f4       	brcc	.+32     	; 0x9d8 <malloc+0xa0>
 9b8:	8a 81       	ldd	r24, Y+2	; 0x02
 9ba:	9b 81       	ldd	r25, Y+3	; 0x03
 9bc:	61 15       	cp	r22, r1
 9be:	71 05       	cpc	r23, r1
 9c0:	21 f0       	breq	.+8      	; 0x9ca <malloc+0x92>
 9c2:	fb 01       	movw	r30, r22
 9c4:	93 83       	std	Z+3, r25	; 0x03
 9c6:	82 83       	std	Z+2, r24	; 0x02
 9c8:	04 c0       	rjmp	.+8      	; 0x9d2 <malloc+0x9a>
 9ca:	90 93 d8 03 	sts	0x03D8, r25
 9ce:	80 93 d7 03 	sts	0x03D7, r24
 9d2:	fe 01       	movw	r30, r28
 9d4:	32 96       	adiw	r30, 0x02	; 2
 9d6:	44 c0       	rjmp	.+136    	; 0xa60 <malloc+0x128>
 9d8:	fe 01       	movw	r30, r28
 9da:	e2 0f       	add	r30, r18
 9dc:	f3 1f       	adc	r31, r19
 9de:	81 93       	st	Z+, r24
 9e0:	91 93       	st	Z+, r25
 9e2:	22 50       	subi	r18, 0x02	; 2
 9e4:	31 09       	sbc	r19, r1
 9e6:	39 83       	std	Y+1, r19	; 0x01
 9e8:	28 83       	st	Y, r18
 9ea:	3a c0       	rjmp	.+116    	; 0xa60 <malloc+0x128>
 9ec:	20 91 d5 03 	lds	r18, 0x03D5
 9f0:	30 91 d6 03 	lds	r19, 0x03D6
 9f4:	23 2b       	or	r18, r19
 9f6:	41 f4       	brne	.+16     	; 0xa08 <malloc+0xd0>
 9f8:	20 91 02 02 	lds	r18, 0x0202
 9fc:	30 91 03 02 	lds	r19, 0x0203
 a00:	30 93 d6 03 	sts	0x03D6, r19
 a04:	20 93 d5 03 	sts	0x03D5, r18
 a08:	20 91 00 02 	lds	r18, 0x0200
 a0c:	30 91 01 02 	lds	r19, 0x0201
 a10:	21 15       	cp	r18, r1
 a12:	31 05       	cpc	r19, r1
 a14:	41 f4       	brne	.+16     	; 0xa26 <malloc+0xee>
 a16:	2d b7       	in	r18, 0x3d	; 61
 a18:	3e b7       	in	r19, 0x3e	; 62
 a1a:	40 91 04 02 	lds	r20, 0x0204
 a1e:	50 91 05 02 	lds	r21, 0x0205
 a22:	24 1b       	sub	r18, r20
 a24:	35 0b       	sbc	r19, r21
 a26:	e0 91 d5 03 	lds	r30, 0x03D5
 a2a:	f0 91 d6 03 	lds	r31, 0x03D6
 a2e:	e2 17       	cp	r30, r18
 a30:	f3 07       	cpc	r31, r19
 a32:	a0 f4       	brcc	.+40     	; 0xa5c <malloc+0x124>
 a34:	2e 1b       	sub	r18, r30
 a36:	3f 0b       	sbc	r19, r31
 a38:	28 17       	cp	r18, r24
 a3a:	39 07       	cpc	r19, r25
 a3c:	78 f0       	brcs	.+30     	; 0xa5c <malloc+0x124>
 a3e:	ac 01       	movw	r20, r24
 a40:	4e 5f       	subi	r20, 0xFE	; 254
 a42:	5f 4f       	sbci	r21, 0xFF	; 255
 a44:	24 17       	cp	r18, r20
 a46:	35 07       	cpc	r19, r21
 a48:	48 f0       	brcs	.+18     	; 0xa5c <malloc+0x124>
 a4a:	4e 0f       	add	r20, r30
 a4c:	5f 1f       	adc	r21, r31
 a4e:	50 93 d6 03 	sts	0x03D6, r21
 a52:	40 93 d5 03 	sts	0x03D5, r20
 a56:	81 93       	st	Z+, r24
 a58:	91 93       	st	Z+, r25
 a5a:	02 c0       	rjmp	.+4      	; 0xa60 <malloc+0x128>
 a5c:	e0 e0       	ldi	r30, 0x00	; 0
 a5e:	f0 e0       	ldi	r31, 0x00	; 0
 a60:	cf 01       	movw	r24, r30
 a62:	df 91       	pop	r29
 a64:	cf 91       	pop	r28
 a66:	08 95       	ret

00000a68 <free>:
 a68:	cf 93       	push	r28
 a6a:	df 93       	push	r29
 a6c:	00 97       	sbiw	r24, 0x00	; 0
 a6e:	09 f4       	brne	.+2      	; 0xa72 <free+0xa>
 a70:	87 c0       	rjmp	.+270    	; 0xb80 <free+0x118>
 a72:	fc 01       	movw	r30, r24
 a74:	32 97       	sbiw	r30, 0x02	; 2
 a76:	13 82       	std	Z+3, r1	; 0x03
 a78:	12 82       	std	Z+2, r1	; 0x02
 a7a:	c0 91 d7 03 	lds	r28, 0x03D7
 a7e:	d0 91 d8 03 	lds	r29, 0x03D8
 a82:	20 97       	sbiw	r28, 0x00	; 0
 a84:	81 f4       	brne	.+32     	; 0xaa6 <free+0x3e>
 a86:	20 81       	ld	r18, Z
 a88:	31 81       	ldd	r19, Z+1	; 0x01
 a8a:	28 0f       	add	r18, r24
 a8c:	39 1f       	adc	r19, r25
 a8e:	80 91 d5 03 	lds	r24, 0x03D5
 a92:	90 91 d6 03 	lds	r25, 0x03D6
 a96:	82 17       	cp	r24, r18
 a98:	93 07       	cpc	r25, r19
 a9a:	79 f5       	brne	.+94     	; 0xafa <free+0x92>
 a9c:	f0 93 d6 03 	sts	0x03D6, r31
 aa0:	e0 93 d5 03 	sts	0x03D5, r30
 aa4:	6d c0       	rjmp	.+218    	; 0xb80 <free+0x118>
 aa6:	de 01       	movw	r26, r28
 aa8:	20 e0       	ldi	r18, 0x00	; 0
 aaa:	30 e0       	ldi	r19, 0x00	; 0
 aac:	ae 17       	cp	r26, r30
 aae:	bf 07       	cpc	r27, r31
 ab0:	50 f4       	brcc	.+20     	; 0xac6 <free+0x5e>
 ab2:	12 96       	adiw	r26, 0x02	; 2
 ab4:	4d 91       	ld	r20, X+
 ab6:	5c 91       	ld	r21, X
 ab8:	13 97       	sbiw	r26, 0x03	; 3
 aba:	9d 01       	movw	r18, r26
 abc:	41 15       	cp	r20, r1
 abe:	51 05       	cpc	r21, r1
 ac0:	09 f1       	breq	.+66     	; 0xb04 <free+0x9c>
 ac2:	da 01       	movw	r26, r20
 ac4:	f3 cf       	rjmp	.-26     	; 0xaac <free+0x44>
 ac6:	b3 83       	std	Z+3, r27	; 0x03
 ac8:	a2 83       	std	Z+2, r26	; 0x02
 aca:	40 81       	ld	r20, Z
 acc:	51 81       	ldd	r21, Z+1	; 0x01
 ace:	84 0f       	add	r24, r20
 ad0:	95 1f       	adc	r25, r21
 ad2:	8a 17       	cp	r24, r26
 ad4:	9b 07       	cpc	r25, r27
 ad6:	71 f4       	brne	.+28     	; 0xaf4 <free+0x8c>
 ad8:	8d 91       	ld	r24, X+
 ada:	9c 91       	ld	r25, X
 adc:	11 97       	sbiw	r26, 0x01	; 1
 ade:	84 0f       	add	r24, r20
 ae0:	95 1f       	adc	r25, r21
 ae2:	02 96       	adiw	r24, 0x02	; 2
 ae4:	91 83       	std	Z+1, r25	; 0x01
 ae6:	80 83       	st	Z, r24
 ae8:	12 96       	adiw	r26, 0x02	; 2
 aea:	8d 91       	ld	r24, X+
 aec:	9c 91       	ld	r25, X
 aee:	13 97       	sbiw	r26, 0x03	; 3
 af0:	93 83       	std	Z+3, r25	; 0x03
 af2:	82 83       	std	Z+2, r24	; 0x02
 af4:	21 15       	cp	r18, r1
 af6:	31 05       	cpc	r19, r1
 af8:	29 f4       	brne	.+10     	; 0xb04 <free+0x9c>
 afa:	f0 93 d8 03 	sts	0x03D8, r31
 afe:	e0 93 d7 03 	sts	0x03D7, r30
 b02:	3e c0       	rjmp	.+124    	; 0xb80 <free+0x118>
 b04:	d9 01       	movw	r26, r18
 b06:	13 96       	adiw	r26, 0x03	; 3
 b08:	fc 93       	st	X, r31
 b0a:	ee 93       	st	-X, r30
 b0c:	12 97       	sbiw	r26, 0x02	; 2
 b0e:	4d 91       	ld	r20, X+
 b10:	5d 91       	ld	r21, X+
 b12:	a4 0f       	add	r26, r20
 b14:	b5 1f       	adc	r27, r21
 b16:	ea 17       	cp	r30, r26
 b18:	fb 07       	cpc	r31, r27
 b1a:	79 f4       	brne	.+30     	; 0xb3a <free+0xd2>
 b1c:	80 81       	ld	r24, Z
 b1e:	91 81       	ldd	r25, Z+1	; 0x01
 b20:	84 0f       	add	r24, r20
 b22:	95 1f       	adc	r25, r21
 b24:	02 96       	adiw	r24, 0x02	; 2
 b26:	d9 01       	movw	r26, r18
 b28:	11 96       	adiw	r26, 0x01	; 1
 b2a:	9c 93       	st	X, r25
 b2c:	8e 93       	st	-X, r24
 b2e:	82 81       	ldd	r24, Z+2	; 0x02
 b30:	93 81       	ldd	r25, Z+3	; 0x03
 b32:	13 96       	adiw	r26, 0x03	; 3
 b34:	9c 93       	st	X, r25
 b36:	8e 93       	st	-X, r24
 b38:	12 97       	sbiw	r26, 0x02	; 2
 b3a:	e0 e0       	ldi	r30, 0x00	; 0
 b3c:	f0 e0       	ldi	r31, 0x00	; 0
 b3e:	8a 81       	ldd	r24, Y+2	; 0x02
 b40:	9b 81       	ldd	r25, Y+3	; 0x03
 b42:	00 97       	sbiw	r24, 0x00	; 0
 b44:	19 f0       	breq	.+6      	; 0xb4c <free+0xe4>
 b46:	fe 01       	movw	r30, r28
 b48:	ec 01       	movw	r28, r24
 b4a:	f9 cf       	rjmp	.-14     	; 0xb3e <free+0xd6>
 b4c:	ce 01       	movw	r24, r28
 b4e:	02 96       	adiw	r24, 0x02	; 2
 b50:	28 81       	ld	r18, Y
 b52:	39 81       	ldd	r19, Y+1	; 0x01
 b54:	82 0f       	add	r24, r18
 b56:	93 1f       	adc	r25, r19
 b58:	20 91 d5 03 	lds	r18, 0x03D5
 b5c:	30 91 d6 03 	lds	r19, 0x03D6
 b60:	28 17       	cp	r18, r24
 b62:	39 07       	cpc	r19, r25
 b64:	69 f4       	brne	.+26     	; 0xb80 <free+0x118>
 b66:	30 97       	sbiw	r30, 0x00	; 0
 b68:	29 f4       	brne	.+10     	; 0xb74 <free+0x10c>
 b6a:	10 92 d8 03 	sts	0x03D8, r1
 b6e:	10 92 d7 03 	sts	0x03D7, r1
 b72:	02 c0       	rjmp	.+4      	; 0xb78 <free+0x110>
 b74:	13 82       	std	Z+3, r1	; 0x03
 b76:	12 82       	std	Z+2, r1	; 0x02
 b78:	d0 93 d6 03 	sts	0x03D6, r29
 b7c:	c0 93 d5 03 	sts	0x03D5, r28
 b80:	df 91       	pop	r29
 b82:	cf 91       	pop	r28
 b84:	08 95       	ret

00000b86 <strnlen_P>:
 b86:	fc 01       	movw	r30, r24
 b88:	05 90       	lpm	r0, Z+
 b8a:	61 50       	subi	r22, 0x01	; 1
 b8c:	70 40       	sbci	r23, 0x00	; 0
 b8e:	01 10       	cpse	r0, r1
 b90:	d8 f7       	brcc	.-10     	; 0xb88 <strnlen_P+0x2>
 b92:	80 95       	com	r24
 b94:	90 95       	com	r25
 b96:	8e 0f       	add	r24, r30
 b98:	9f 1f       	adc	r25, r31
 b9a:	08 95       	ret

00000b9c <memset>:
 b9c:	dc 01       	movw	r26, r24
 b9e:	01 c0       	rjmp	.+2      	; 0xba2 <memset+0x6>
 ba0:	6d 93       	st	X+, r22
 ba2:	41 50       	subi	r20, 0x01	; 1
 ba4:	50 40       	sbci	r21, 0x00	; 0
 ba6:	e0 f7       	brcc	.-8      	; 0xba0 <memset+0x4>
 ba8:	08 95       	ret

00000baa <strnlen>:
 baa:	fc 01       	movw	r30, r24
 bac:	61 50       	subi	r22, 0x01	; 1
 bae:	70 40       	sbci	r23, 0x00	; 0
 bb0:	01 90       	ld	r0, Z+
 bb2:	01 10       	cpse	r0, r1
 bb4:	d8 f7       	brcc	.-10     	; 0xbac <strnlen+0x2>
 bb6:	80 95       	com	r24
 bb8:	90 95       	com	r25
 bba:	8e 0f       	add	r24, r30
 bbc:	9f 1f       	adc	r25, r31
 bbe:	08 95       	ret

00000bc0 <fputc>:
 bc0:	0f 93       	push	r16
 bc2:	1f 93       	push	r17
 bc4:	cf 93       	push	r28
 bc6:	df 93       	push	r29
 bc8:	18 2f       	mov	r17, r24
 bca:	09 2f       	mov	r16, r25
 bcc:	eb 01       	movw	r28, r22
 bce:	8b 81       	ldd	r24, Y+3	; 0x03
 bd0:	81 fd       	sbrc	r24, 1
 bd2:	03 c0       	rjmp	.+6      	; 0xbda <fputc+0x1a>
 bd4:	8f ef       	ldi	r24, 0xFF	; 255
 bd6:	9f ef       	ldi	r25, 0xFF	; 255
 bd8:	20 c0       	rjmp	.+64     	; 0xc1a <fputc+0x5a>
 bda:	82 ff       	sbrs	r24, 2
 bdc:	10 c0       	rjmp	.+32     	; 0xbfe <fputc+0x3e>
 bde:	4e 81       	ldd	r20, Y+6	; 0x06
 be0:	5f 81       	ldd	r21, Y+7	; 0x07
 be2:	2c 81       	ldd	r18, Y+4	; 0x04
 be4:	3d 81       	ldd	r19, Y+5	; 0x05
 be6:	42 17       	cp	r20, r18
 be8:	53 07       	cpc	r21, r19
 bea:	7c f4       	brge	.+30     	; 0xc0a <fputc+0x4a>
 bec:	e8 81       	ld	r30, Y
 bee:	f9 81       	ldd	r31, Y+1	; 0x01
 bf0:	9f 01       	movw	r18, r30
 bf2:	2f 5f       	subi	r18, 0xFF	; 255
 bf4:	3f 4f       	sbci	r19, 0xFF	; 255
 bf6:	39 83       	std	Y+1, r19	; 0x01
 bf8:	28 83       	st	Y, r18
 bfa:	10 83       	st	Z, r17
 bfc:	06 c0       	rjmp	.+12     	; 0xc0a <fputc+0x4a>
 bfe:	e8 85       	ldd	r30, Y+8	; 0x08
 c00:	f9 85       	ldd	r31, Y+9	; 0x09
 c02:	81 2f       	mov	r24, r17
 c04:	19 95       	eicall
 c06:	89 2b       	or	r24, r25
 c08:	29 f7       	brne	.-54     	; 0xbd4 <fputc+0x14>
 c0a:	2e 81       	ldd	r18, Y+6	; 0x06
 c0c:	3f 81       	ldd	r19, Y+7	; 0x07
 c0e:	2f 5f       	subi	r18, 0xFF	; 255
 c10:	3f 4f       	sbci	r19, 0xFF	; 255
 c12:	3f 83       	std	Y+7, r19	; 0x07
 c14:	2e 83       	std	Y+6, r18	; 0x06
 c16:	81 2f       	mov	r24, r17
 c18:	90 2f       	mov	r25, r16
 c1a:	df 91       	pop	r29
 c1c:	cf 91       	pop	r28
 c1e:	1f 91       	pop	r17
 c20:	0f 91       	pop	r16
 c22:	08 95       	ret

00000c24 <__ultoa_invert>:
 c24:	fa 01       	movw	r30, r20
 c26:	aa 27       	eor	r26, r26
 c28:	28 30       	cpi	r18, 0x08	; 8
 c2a:	51 f1       	breq	.+84     	; 0xc80 <__ultoa_invert+0x5c>
 c2c:	20 31       	cpi	r18, 0x10	; 16
 c2e:	81 f1       	breq	.+96     	; 0xc90 <__ultoa_invert+0x6c>
 c30:	e8 94       	clt
 c32:	6f 93       	push	r22
 c34:	6e 7f       	andi	r22, 0xFE	; 254
 c36:	6e 5f       	subi	r22, 0xFE	; 254
 c38:	7f 4f       	sbci	r23, 0xFF	; 255
 c3a:	8f 4f       	sbci	r24, 0xFF	; 255
 c3c:	9f 4f       	sbci	r25, 0xFF	; 255
 c3e:	af 4f       	sbci	r26, 0xFF	; 255
 c40:	b1 e0       	ldi	r27, 0x01	; 1
 c42:	3e d0       	rcall	.+124    	; 0xcc0 <__ultoa_invert+0x9c>
 c44:	b4 e0       	ldi	r27, 0x04	; 4
 c46:	3c d0       	rcall	.+120    	; 0xcc0 <__ultoa_invert+0x9c>
 c48:	67 0f       	add	r22, r23
 c4a:	78 1f       	adc	r23, r24
 c4c:	89 1f       	adc	r24, r25
 c4e:	9a 1f       	adc	r25, r26
 c50:	a1 1d       	adc	r26, r1
 c52:	68 0f       	add	r22, r24
 c54:	79 1f       	adc	r23, r25
 c56:	8a 1f       	adc	r24, r26
 c58:	91 1d       	adc	r25, r1
 c5a:	a1 1d       	adc	r26, r1
 c5c:	6a 0f       	add	r22, r26
 c5e:	71 1d       	adc	r23, r1
 c60:	81 1d       	adc	r24, r1
 c62:	91 1d       	adc	r25, r1
 c64:	a1 1d       	adc	r26, r1
 c66:	20 d0       	rcall	.+64     	; 0xca8 <__ultoa_invert+0x84>
 c68:	09 f4       	brne	.+2      	; 0xc6c <__ultoa_invert+0x48>
 c6a:	68 94       	set
 c6c:	3f 91       	pop	r19
 c6e:	2a e0       	ldi	r18, 0x0A	; 10
 c70:	26 9f       	mul	r18, r22
 c72:	11 24       	eor	r1, r1
 c74:	30 19       	sub	r19, r0
 c76:	30 5d       	subi	r19, 0xD0	; 208
 c78:	31 93       	st	Z+, r19
 c7a:	de f6       	brtc	.-74     	; 0xc32 <__ultoa_invert+0xe>
 c7c:	cf 01       	movw	r24, r30
 c7e:	08 95       	ret
 c80:	46 2f       	mov	r20, r22
 c82:	47 70       	andi	r20, 0x07	; 7
 c84:	40 5d       	subi	r20, 0xD0	; 208
 c86:	41 93       	st	Z+, r20
 c88:	b3 e0       	ldi	r27, 0x03	; 3
 c8a:	0f d0       	rcall	.+30     	; 0xcaa <__ultoa_invert+0x86>
 c8c:	c9 f7       	brne	.-14     	; 0xc80 <__ultoa_invert+0x5c>
 c8e:	f6 cf       	rjmp	.-20     	; 0xc7c <__ultoa_invert+0x58>
 c90:	46 2f       	mov	r20, r22
 c92:	4f 70       	andi	r20, 0x0F	; 15
 c94:	40 5d       	subi	r20, 0xD0	; 208
 c96:	4a 33       	cpi	r20, 0x3A	; 58
 c98:	18 f0       	brcs	.+6      	; 0xca0 <__ultoa_invert+0x7c>
 c9a:	49 5d       	subi	r20, 0xD9	; 217
 c9c:	31 fd       	sbrc	r19, 1
 c9e:	40 52       	subi	r20, 0x20	; 32
 ca0:	41 93       	st	Z+, r20
 ca2:	02 d0       	rcall	.+4      	; 0xca8 <__ultoa_invert+0x84>
 ca4:	a9 f7       	brne	.-22     	; 0xc90 <__ultoa_invert+0x6c>
 ca6:	ea cf       	rjmp	.-44     	; 0xc7c <__ultoa_invert+0x58>
 ca8:	b4 e0       	ldi	r27, 0x04	; 4
 caa:	a6 95       	lsr	r26
 cac:	97 95       	ror	r25
 cae:	87 95       	ror	r24
 cb0:	77 95       	ror	r23
 cb2:	67 95       	ror	r22
 cb4:	ba 95       	dec	r27
 cb6:	c9 f7       	brne	.-14     	; 0xcaa <__ultoa_invert+0x86>
 cb8:	00 97       	sbiw	r24, 0x00	; 0
 cba:	61 05       	cpc	r22, r1
 cbc:	71 05       	cpc	r23, r1
 cbe:	08 95       	ret
 cc0:	9b 01       	movw	r18, r22
 cc2:	ac 01       	movw	r20, r24
 cc4:	0a 2e       	mov	r0, r26
 cc6:	06 94       	lsr	r0
 cc8:	57 95       	ror	r21
 cca:	47 95       	ror	r20
 ccc:	37 95       	ror	r19
 cce:	27 95       	ror	r18
 cd0:	ba 95       	dec	r27
 cd2:	c9 f7       	brne	.-14     	; 0xcc6 <__ultoa_invert+0xa2>
 cd4:	62 0f       	add	r22, r18
 cd6:	73 1f       	adc	r23, r19
 cd8:	84 1f       	adc	r24, r20
 cda:	95 1f       	adc	r25, r21
 cdc:	a0 1d       	adc	r26, r0
 cde:	08 95       	ret

00000ce0 <_exit>:
 ce0:	f8 94       	cli

00000ce2 <__stop_program>:
 ce2:	ff cf       	rjmp	.-2      	; 0xce2 <__stop_program>
